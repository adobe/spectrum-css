name: Publish documentation
#
# This workflow publishes the documentation to Fastly
#

on:
    workflow_dispatch:
        inputs:
            deploy-message:
                required: false
                type: string
            alias:
                required: false
                type: string
    workflow_call:
        inputs:
            deploy-message:
                required: false
                type: string
            alias:
                required: false
                type: string

permissions:
    contents: read
    pull-requests: write

jobs:
    publish_site:
        name: Publish to Fastly
        runs-on: ubuntu-latest
        timeout-minutes: 10
        steps:
            ## --- SETUP --- ##
            - name: Check out code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Use Node LTS version
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: yarn

            - name: Enable Corepack
              run: corepack enable

            ## --- YARN CACHE --- ##
            - name: Check for cached dependencies
              continue-on-error: true
              id: cache-dependencies
              uses: actions/cache@v4
              with:
                  path: |
                      .cache/yarn
                      node_modules
                  key: ubuntu-latest-node20-${{ hashFiles('yarn.lock') }}

            ## --- INSTALL --- ##
            # note: if cache-hit isn't needed b/c yarn will leverage the cache if it exists
            - name: Install dependencies
              shell: bash
              run: yarn install --immutable

            ## --- BUILD --- ##
            - name: Build storybook
              shell: bash
              run: yarn build:docs

            - name: Set up Fastly CLI
              uses: fastly/compute-actions/setup@v11
              with:
                token: ${{ secrets.GITHUB_TOKEN }}

            - name: Copy fastly.toml to dist
              run: cp fastly.toml dist/fastly.toml

            - name: Install Fastly CLI
              run: npm install -g @fastly/cli@latest

            - name: Create service with PR number
              id: service-name
              working-directory: ${{ inputs.project_directory }}
              run: echo "SERVICE_NAME=$(yq '.name' fastly.toml)-${{ github.event.number }}" >> "$GITHUB_OUTPUT"
              shell: bash

            - if: github.event.action == 'closed'
              name: Delete the Fastly Service
              working-directory: ${{ inputs.project_directory }}
              run: fastly service delete --quiet --service-name=${{ steps.service-name.outputs.SERVICE_NAME }} --force --token ${{ secrets.FASTLY_API_TOKEN }} || true
              shell: bash
              env:
                fastly_api_token: ${{ secrets.FASTLY_API_TOKEN }}

            - name: Fastly static publish
              env:
                FASTLY_API_TOKEN: ${{ secrets.FASTLY_API_TOKEN }}
              run: npx @fastly/compute-js-static-publish@latest --root-dir=./dist --kv-store-name=${{ steps.service-name.outputs.SERVICE_NAME }} && cd ./compute-js && npm run fastly:deploy && npm run fastly:publish

            - if: github.event.action != 'closed'
              name: Retrieve domain for deployment
              working-directory: ${{ inputs.project_directory }}
              run: fastly domain list --quiet --version latest --json --service-name=${{ steps.service-name.outputs.SERVICE_NAME }} --token ${{ secrets.FASTLY_API_TOKEN }} | jq -r '.[0].Name'
              shell: bash
              env:
                FASTLY_API_TOKEN: ${{ secrets.FASTLY_API_TOKEN }}

            - if: github.event.action != 'closed'
              working-directory: ${{ inputs.project_directory }}
              name: Set domain for deployment
              shell: bash
              id: domain
              run: echo "DOMAIN=$(fastly domain list --quiet --version latest --json --service-name=${{ steps.service-name.outputs.SERVICE_NAME }} --token ${{ secrets.FASTLY_API_TOKEN }} | jq -r '.[0].Name')" >> "$GITHUB_OUTPUT"
              env:
                FASTLY_API_TOKEN: ${{ secrets.FASTLY_API_TOKEN }}

            - if: github.event.action != 'closed'
              working-directory: ${{ inputs.project_directory }}
              shell: bash
              name: Add domain to PR summary
              run: echo 'This pull-request has been deployed to Fastly and is available at <https://${{ steps.domain.outputs.DOMAIN }}> ðŸš€' >> $GITHUB_STEP_SUMMARY
