name: Build and verify production

on:
  push:
    branches: [main]

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: "${{ github.workflow }} @ main"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

# todo: this could add deploy steps as well
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        system:
          - macos-latest
          - ubuntu-latest
        node-version:
          - 18
    name: Build
    uses: ./.github/workflows/build.yml
    with:
      ref: ${{ github.sha }}
      system: ${{ matrix.system }}
      node-version: ${{ matrix.node-version }}
    secrets: inherit

  # Run VRT on ALL pushes to main
  vrt:
    name: Testing
    needs: [build]
    uses: ./.github/workflows/vrt.yml
    secrets: inherit

  publish_site:
    name: Publish
    runs-on: ubuntu-latest
    needs: [build, vrt]
    steps:
      # skip-cache: 'true'
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node LTS version
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn
          cache-dependency-path: yarn.lock

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        id: set-SHAs
        uses: nrwl/nx-set-shas@v3

      ## --- YARN CACHE --- ##
      - name: Check for cached dependencies
        continue-on-error: true
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: |
            .cache/yarn
            node_modules
          key: ubuntu-latest-node18-${{ hashFiles('yarn.lock') }}

      ## --- INSTALL --- ##
      # If statement isn't needed here b/c yarn will leverage the cache if it exists
      - name: Install dependencies
        shell: bash
        run: yarn install --frozen-lockfile --cache-folder .cache/yarn

      - name: Reset nx cache to prevent cross-machine errors
        shell: bash
        run: yarn cache:clean

      ## --- BUILD --- ##
      - name: Build docs site
        run: yarn build site
        env:
          CHROMATIC_URL: ${{ needs.vrt.outputs.storybook-url }}

      ## --- DEPLOY --- ##
      - name: Deploy
        uses: nwtgck/actions-netlify@v2
        with:
          publish-dir: dist
          production-branch: main
          production-deploy: false
          netlify-config-path: ./netlify.toml
          github-token: ${{ secrets.GITHUB_TOKEN }}
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN_GH_ACTIONS_DEPLOY }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 10

  # autoupdate:
  #   name: Auto-update pull requests
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #     pull-requests: write
  #   steps:
  #     # README: https://github.com/castastrophe/actions-pr-auto-update#auto-update-pull-requests
  #     - uses: castastrophe/actions-pr-auto-update@v1.1.0
  #       with:
  #         token: ${{ secrets.GH_PAC_TOKEN }}
  #         # Draft PRs will not be automatically updated by this utility
  #         include_drafts: false
  #         limit: 10
  #         include_labels: auto-update
  #         exclude_labels: blocked,wip,dependencies
