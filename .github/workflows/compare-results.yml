# ---------- COMPARE PR & BASE ---------- #
#
# This workflow is triggered by the Validate successful build workflow
# which, when successful, will run a compare of the compiled assets
# between the PR branch and the base branch. If there are any changes
# in the compiled assets, the workflow will fail and report back.
#
name: Compare

on:
    workflow_call:
        inputs:
            base-sha:
                description: The branch or tag to compare against
                required: false
                type: string
                default: main
            head-sha:
                description: The branch or tag to checkout
                required: false
                type: string
                default: ${{ github.event.workflow_call.head.ref }}
        outputs:
            has-changed:
                value: ${{ jobs.compare.outputs.has-changed }}
            total-size:
                value: ${{ jobs.compare.outputs.total-size }}

permissions:
    contents: read
    pull-requests: write

defaults:
    run:
        shell: bash

jobs:
    compare:
        name: Compare compiled assets
        runs-on: ubuntu-latest
        needs: [fetch-build-artifacts]
        outputs:
            has-changed: ${{ steps.compare.outputs.has-changed }}
            total-size: ${{ steps.compare.outputs.total-size }}
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            ## --- SETUP --- ##
            - name: Use Node LTS version
              uses: actions/setup-node@v3
              with:
                  node-version: 18
                  cache: yarn
                  cache-dependency-path: yarn.lock

            ## --- YARN CACHE --- ##
            - name: Check for cached dependencies
              continue-on-error: true
              id: cache-dependencies
              uses: actions/cache@v3
              with:
                  path: |
                      .cache/yarn
                      node_modules
                  key: ubuntu-latest-node18-${{ hashFiles('yarn.lock') }}

            ## --- INSTALL --- ##
            # note: if cache-hit isn't needed b/c yarn will leverage the cache if it exists
            - name: Install dependencies
              shell: bash
              run: yarn install --frozen-lockfile --cache-folder .cache/yarn

            - name: Download build artifacts for head ${{ inputs.head-sha }}
              uses: actions/download-artifact@v3
              with:
                  name: ubuntu-latest-node18-compiled-assets-${{ inputs.head-sha }}
                  path: ${{ github.workspace }}/${{ inputs.head-sha }}

            - name: Download build artifacts for base ${{ inputs.base-sha }}
              uses: actions/download-artifact@v3
              with:
                  name: ubuntu-latest-node18-compiled-assets-${{ inputs.base-sha }}
                  path: ${{ github.workspace }}/${{ inputs.base-sha }}

            - name: Compare compiled output file size
              id: compare
              uses: ./.github/actions/file-diff
              # uses: spectrum-tools/gh-action-file-diff@v1
              with:
                  path: ${{ github.workspace }}/${{ inputs.base-sha }}/
                  diff-path: ${{ github.workspace }}/${{ inputs.head-sha }}/
                  file-glob-pattern: components/*/dist/**
                  token: ${{ secrets.GITHUB_TOKEN }}

    fetch-build-artifacts:
        name: Fetch & validate build artifacts
        strategy:
            matrix:
                branch:
                    - ${{ inputs.head-sha }}
                    - ${{ inputs.base-sha }}
        runs-on: ubuntu-latest
        steps:
            ## --- FETCH PR SHAs --- ##
            - name: Check out code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
                  path: ${{ matrix.branch }}
                  ref: ${{ matrix.branch }}

            - name: Set the cache key for builds
              id: derive-key
              shell: bash
              run: |
                  echo "key=ubuntu-latest-node18-compiled-assets-${{ matrix.branch }}" >> "$GITHUB_OUTPUT"

            ## --- SETUP --- ##
            - name: Use Node LTS version
              uses: actions/setup-node@v3
              with:
                  node-version: 18
                  cache: yarn
                  cache-dependency-path: yarn.lock

            ## --- YARN CACHE --- ##
            - name: Check for cached dependencies
              continue-on-error: true
              id: cache-dependencies
              uses: actions/cache@v3
              with:
                  path: |
                      .cache/yarn
                      node_modules
                  key: ubuntu-latest-node18-${{ hashFiles('yarn.lock') }}

            ## --- INSTALL --- ##
            # note: if cache-hit isn't needed b/c yarn will leverage the cache if it exists
            - name: Install dependencies
              shell: bash
              run: yarn install --frozen-lockfile --cache-folder .cache/yarn

            - name: Reset nx cache to prevent cross-machine errors
              shell: bash
              run: yarn cache:clean

            ## --- BUILD --- ##
            - name: Check for cached build assets
              continue-on-error: true
              id: cache-build
              uses: actions/cache@v3
              with:
                  path: |
                      components/*/dist/**
                  key: ${{ steps.derive-key.outputs.key }}

            - name: Build components
              if: ${{ steps.cache-build.outputs.cache-hit != 'true' }}
              shell: bash
              run: yarn ci

            - name: Upload compiled assets
              id: upload
              if: ${{ steps.cache-build.outputs.cache-hit != 'true' }}
              uses: actions/upload-artifact@v3
              with:
                  path: |
                      components/*/dist/**
                  name: ${{ steps.derive-key.outputs.key }}
                  # this is important, it lets us catch if the build failed silently
                  # by alterting us that no compiled assets were generated
                  if-no-files-found: error
                  retention-days: 5
