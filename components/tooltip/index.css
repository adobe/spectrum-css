/*!
Copyright 2023 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

@import "./themes/express.css";
@import "@spectrum-css/commons/overlay.css";

.spectrum-Tooltip {
	--spectrum-tooltip-animation-duration: var(--spectrum-animation-duration-100);
	--spectrum-tooltip-animation-distance: var(--spectrum-spacing-75);

	/* override if additional spacing to source is required */
	--spectrum-tooltip-margin: 0px;

	--spectrum-tooltip-height: var(--spectrum-component-height-75);
	--spectrum-tooltip-max-inline-size: var(--spectrum-tooltip-maximum-width);
	--spectrum-tooltip-border-radius: var(--spectrum-corner-radius-400);

	--spectrum-tooltip-font-size: var(--spectrum-font-size-75);

	/* @todo set line-height using font size specific line-height tokens when they are finalized along with the new variable font. */
	--spectrum-tooltip-line-height: 1.2;
	--spectrum-tooltip-cjk-line-height: var(--spectrum-cjk-line-height-100);
	--spectrum-tooltip-font-weight: var(--spectrum-regular-font-weight);

	/* horizontal spacing */
	--spectrum-tooltip-spacing-inline: var(--spectrum-component-edge-to-text-75);

	/* vertical spacing */
	--spectrum-tooltip-spacing-block-start: var(--spectrum-component-top-to-text-75);
	--spectrum-tooltip-spacing-block-end: var(--spectrum-component-bottom-to-text-75);

	--spectrum-tooltip-content-color: var(--spectrum-gray-25);
	--spectrum-tooltip-background-color-default: var(--spectrum-neutral-background-color-default);

	/* tip */
	--spectrum-tooltip-tip-block-size: var(--spectrum-tooltip-tip-height);

	/* Percentage value of height divided by width, for calculating clip-path within a square tip. */
	--spectrum-tooltip-tip-height-percentage: 100%;

	/* Tip inset from container edges for clip-paths calculation, to fix hairline gap in Chrome cause by antialiasing. */
	--spectrum-tooltip-tip-antialiasing-inset: 0.5px;

	/* pointer tip - default spacing to edge - corner radius plus half of tip width to neutralize override */
	--spectrum-tooltip-pointer-corner-spacing: var(--mod-tooltip-border-radius, var(--spectrum-tooltip-border-radius));

	--highcontrast-tooltip-border-width: 0px;
}

.spectrum-Tooltip {
	@extend %spectrum-overlay;

	position: relative;

	display: inline-flex;
	flex-direction: row;
	align-items: center;
	box-sizing: border-box;

	vertical-align: top;

	inline-size: auto;
	padding-inline: var(--mod-tooltip-spacing-inline, var(--spectrum-tooltip-spacing-inline));

	border-radius: var(--mod-tooltip-border-radius, var(--spectrum-tooltip-border-radius));

	block-size: auto;
	min-block-size: var(--mod-tooltip-height, var(--spectrum-tooltip-height));
	max-inline-size: var(--mod-tooltip-max-inline-size, var(--spectrum-tooltip-max-inline-size));

	background-color: var(--highcontrast-tooltip-background-color-default, var(--mod-tooltip-background-color-default, var(--spectrum-tooltip-background-color-default)));
	color: var(--mod-tooltip-content-color, var(--spectrum-tooltip-content-color));

	font-size: var(--mod-tooltip-font-size, var(--spectrum-tooltip-font-size));
	font-weight: var(--mod-tooltip-font-weight, var(--spectrum-tooltip-font-weight));
	line-height: var(--mod-tooltip-line-height, var(--spectrum-tooltip-line-height));
	word-break: break-word;
	-webkit-font-smoothing: antialiased;

	cursor: default;
	user-select: none;

	/* CJK language support */
	&:lang(ja),
	&:lang(zh),
	&:lang(ko) {
		line-height: var(--mod-tooltip-cjk-line-height, var(--spectrum-tooltip-cjk-line-height));
	}

	p {
		margin: 0;
	}
}

.spectrum-Tooltip.is-open {
	@extend %spectrum-overlay--open;
}

/****** Tip Base Styles ******/
.spectrum-Tooltip-tip {
	position: absolute;

	block-size: var(--mod-tooltip-tip-square-size, var(--spectrum-tooltip-tip-square-size));
	inline-size: var(--mod-tooltip-tip-square-size, var(--spectrum-tooltip-tip-square-size));

	inset-block-start: calc(100% - (0.5 * var(--mod-tooltip-tip-square-size, var(--spectrum-tooltip-tip-square-size))) - var(--mod-tooltip-tip-antialiasing-inset, var(--spectrum-tooltip-tip-antialiasing-inset)) + var(--highcontrast-tooltip-border-width));
	/* stylelint-disable-next-line csstools/use-logical -- intentional use of non-logical property */
	left: calc(50% - (0.5 * var(--mod-tooltip-tip-square-size, var(--spectrum-tooltip-tip-square-size))));
	transform: rotate(-45deg);

	background-color: var(--highcontrast-tooltip-background-color-default, var(--mod-tooltip-background-color-default, var(--spectrum-tooltip-background-color-default)));

	/* Default: Pointing down ▽ */
	clip-path: polygon(0 0, 100% var(--mod-tooltip-tip-height-percentage, var(--spectrum-tooltip-tip-height-percentage)), 0 100%);

	border-radius: 0 0 0 var(--mod-tooltip-tip-corner-radius, var(--spectrum-tooltip-tip-corner-radius));

	/*** Tip Placement ***/
	/* tip is horizontal at bottom pointing down ▽ */
	.spectrum-Tooltip--top &,
	.spectrum-Tooltip--top-left &,
	.spectrum-Tooltip--top-right &,
	.spectrum-Tooltip--top-start &,
	.spectrum-Tooltip--top-end & {
		inset-block-start: calc(100% - (0.5 * var(--mod-tooltip-tip-square-size, var(--spectrum-tooltip-tip-square-size))) - var(--mod-tooltip-tip-antialiasing-inset, var(--spectrum-tooltip-tip-antialiasing-inset)) + var(--highcontrast-tooltip-border-width));
		transform: rotate(-45deg);
	}

	/* tip is horizontal at top pointing up △ */
	.spectrum-Tooltip--bottom &,
	.spectrum-Tooltip--bottom-left &,
	.spectrum-Tooltip--bottom-right &,
	.spectrum-Tooltip--bottom-start &,
	.spectrum-Tooltip--bottom-end & {
		inset-block: auto calc(100% - (0.5 * var(--mod-tooltip-tip-square-size, var(--spectrum-tooltip-tip-square-size))) - var(--mod-tooltip-tip-antialiasing-inset, var(--spectrum-tooltip-tip-antialiasing-inset)) + var(--highcontrast-tooltip-border-width));
		transform: rotate(135deg);
	}

	/* tip is horizontal at left △ ▽ */
	.spectrum-Tooltip--top-left &,
	.spectrum-Tooltip--bottom-left & {
		inset-inline-start: var(--mod-tooltip-pointer-corner-spacing, var(--spectrum-tooltip-pointer-corner-spacing));
	}

	/* tip is horizontal at right △ ▽ */
	.spectrum-Tooltip--top-right &,
	.spectrum-Tooltip--bottom-right & {
		inset-inline: auto var(--mod-tooltip-pointer-corner-spacing, var(--spectrum-tooltip-pointer-corner-spacing));
	}

	/* logical property - tip is horizontal at start △ ▽ */
	.spectrum-Tooltip--top-start &,
	.spectrum-Tooltip--bottom-start & {
		inset-inline: var(--mod-tooltip-pointer-corner-spacing, var(--spectrum-tooltip-pointer-corner-spacing)) auto;

		&:dir(rtl) {
			right: var(--mod-tooltip-pointer-corner-spacing, var(--spectrum-tooltip-pointer-corner-spacing));
			left: auto;
		}
	}

	/* logical property - tip is horizontal at end △ ▽ */
	.spectrum-Tooltip--top-end &,
	.spectrum-Tooltip--bottom-end & {
		inset-inline: auto var(--mod-tooltip-pointer-corner-spacing, var(--spectrum-tooltip-pointer-corner-spacing));

		&:dir(rtl) {
			left: var(--mod-tooltip-pointer-corner-spacing, var(--spectrum-tooltip-pointer-corner-spacing));
			right: auto;
		}
	}

	/* tip right left start end resets ◁ ▷ */
	.spectrum-Tooltip--right &,
	.spectrum-Tooltip--right-bottom &,
	.spectrum-Tooltip--right-top &,
	.spectrum-Tooltip--left &,
	.spectrum-Tooltip--left-bottom &,
	.spectrum-Tooltip--left-top &,
	.spectrum-Tooltip--start &,
	.spectrum-Tooltip--start-top &,
	.spectrum-Tooltip--start-bottom &,
	.spectrum-Tooltip--end &,
	.spectrum-Tooltip--end-top &,
	.spectrum-Tooltip--end-bottom & {
		inset-block-start: calc(50% - (0.5 * var(--mod-tooltip-tip-square-size, var(--spectrum-tooltip-tip-square-size))));
	}

	/* tip is vertical and at edge */
	.spectrum-Tooltip--right-bottom &,
	.spectrum-Tooltip--right-top &,
	.spectrum-Tooltip--left-bottom &,
	.spectrum-Tooltip--left-top &,
	.spectrum-Tooltip--start-top &,
	.spectrum-Tooltip--start-bottom &,
	.spectrum-Tooltip--end-top &,
	.spectrum-Tooltip--end-bottom & {
		inset-block-start: auto;
	}

	/* tip is vertical pointing ◁ left or start, for LTR. */
	.spectrum-Tooltip--right &,
	.spectrum-Tooltip--right-bottom &,
	.spectrum-Tooltip--right-top &,
	.spectrum-Tooltip--end &,
	.spectrum-Tooltip--end-top &,
	.spectrum-Tooltip--end-bottom & {
		inset-inline: auto calc(100% - (0.5 * var(--mod-tooltip-tip-square-size, var(--spectrum-tooltip-tip-square-size))) - var(--mod-tooltip-tip-antialiasing-inset, var(--spectrum-tooltip-tip-antialiasing-inset)) + var(--highcontrast-tooltip-border-width));
		transform: rotate(45deg);
	}

	/* tip is vertical pointing ▷ right or end, for LTR. */
	.spectrum-Tooltip--left &,
	.spectrum-Tooltip--left-bottom &,
	.spectrum-Tooltip--left-top &,
	.spectrum-Tooltip--start &,
	.spectrum-Tooltip--start-top &,
	.spectrum-Tooltip--start-bottom & {
		inset-inline-start: calc(100% - (0.5 * var(--mod-tooltip-tip-square-size, var(--spectrum-tooltip-tip-square-size))) - var(--mod-tooltip-tip-antialiasing-inset, var(--spectrum-tooltip-tip-antialiasing-inset)) + var(--highcontrast-tooltip-border-width));
		transform: rotate(-135deg);
	}

	/* tip is vertical at top ◁ ▷ */
	.spectrum-Tooltip--right-top &,
	.spectrum-Tooltip--left-top &,
	.spectrum-Tooltip--start-top &,
	.spectrum-Tooltip--end-top & {
		inset-block-start: var(--mod-tooltip-pointer-corner-spacing, var(--spectrum-tooltip-pointer-corner-spacing));
	}

	/* tip is vertical at bottom ◁ ▷ */
	.spectrum-Tooltip--right-bottom &,
	.spectrum-Tooltip--left-bottom &,
	.spectrum-Tooltip--start-bottom &,
	.spectrum-Tooltip--end-bottom & {
		inset-block-end: var(--mod-tooltip-pointer-corner-spacing, var(--spectrum-tooltip-pointer-corner-spacing));
	}

	/* tip logical property - Start pointing tip reversed to point toward end ▷ for RTL. */
	.spectrum-Tooltip--left &,
	.spectrum-Tooltip--left-bottom &,
	.spectrum-Tooltip--left-top &,
	.spectrum-Tooltip--end &,
	.spectrum-Tooltip--end-top &,
	.spectrum-Tooltip--end-bottom & {
		&:dir(rtl) {
			transform: rotate(-135deg);
			right: auto;
			left: calc(100% - (0.5 * var(--mod-tooltip-tip-square-size, var(--spectrum-tooltip-tip-square-size))) - var(--mod-tooltip-tip-antialiasing-inset, var(--spectrum-tooltip-tip-antialiasing-inset)) + var(--highcontrast-tooltip-border-width));
		}
	}

	/* tip logical property - End pointing tip reversed to point toward start ◁ for RTL. */
	.spectrum-Tooltip--right &,
	.spectrum-Tooltip--right-bottom &,
	.spectrum-Tooltip--right-top &,
	.spectrum-Tooltip--start &,
	.spectrum-Tooltip--start-top &,
	.spectrum-Tooltip--start-bottom & {
		&:dir(rtl) {
			transform: rotate(45deg);
			left: auto;
			right: calc(100% - (0.5 * var(--mod-tooltip-tip-square-size, var(--spectrum-tooltip-tip-square-size))) - var(--mod-tooltip-tip-antialiasing-inset, var(--spectrum-tooltip-tip-antialiasing-inset)) + var(--highcontrast-tooltip-border-width));
		}
	}
}

/****** Label ******/
.spectrum-Tooltip-label {
	/* Make sure line height is correct to prevent problems in Windows */
	line-height: var(--mod-tooltip-line-height, var(--spectrum-tooltip-line-height));
	margin-block-start: var(--mod-tooltip-spacing-block-start, var(--spectrum-tooltip-spacing-block-start));
	margin-block-end: var(--mod-tooltip-spacing-block-end, var(--spectrum-tooltip-spacing-block-end));
}

/****** Tooltip Placement and Animation Direction ******/
/* position is top of source - default */
.spectrum-Tooltip,
.spectrum-Tooltip--top,
.spectrum-Tooltip--top-left,
.spectrum-Tooltip--top-right,
.spectrum-Tooltip--top-start,
.spectrum-Tooltip--top-end {
	margin-block-end: calc(var(--mod-tooltip-tip-block-size, var(--spectrum-tooltip-tip-block-size)) + var(--mod-tooltip-margin, var(--spectrum-tooltip-margin)));

	/* tooltip animates upward ⬆ */
	&.is-open {
		transform: translateY(calc(-1 * var(--mod-tooltip-animation-distance, var(--spectrum-tooltip-animation-distance))));
	}
}

/* tooltip position is at bottom of source */
.spectrum-Tooltip--bottom,
.spectrum-Tooltip--bottom-left,
.spectrum-Tooltip--bottom-right,
.spectrum-Tooltip--bottom-start,
.spectrum-Tooltip--bottom-end {
	margin-block-start: calc(var(--mod-tooltip-tip-block-size, var(--spectrum-tooltip-tip-block-size)) + var(--mod-tooltip-margin, var(--spectrum-tooltip-margin)));

	/* Tooltip animates downward ⬇ */
	&.is-open {
		transform: translateY(var(--mod-tooltip-animation-distance, var(--spectrum-tooltip-animation-distance)));
	}
}

/* tooltip position is right of source */
.spectrum-Tooltip--right,
.spectrum-Tooltip--right-bottom,
.spectrum-Tooltip--right-top {
	/* stylelint-disable-next-line csstools/use-logical -- intentional use of non-logical property */
	margin-left: calc(var(--mod-tooltip-tip-block-size, var(--spectrum-tooltip-tip-block-size)) + var(--mod-tooltip-margin, var(--spectrum-tooltip-margin)));

	/* Tooltip animates to right ⮕ */
	&.is-open {
		transform: translateX(var(--mod-tooltip-animation-distance, var(--spectrum-tooltip-animation-distance)));
	}
}

/* tooltip position is left of source */
.spectrum-Tooltip--left,
.spectrum-Tooltip--left-bottom,
.spectrum-Tooltip--left-top {
	/* stylelint-disable-next-line csstools/use-logical -- intentional use of non-logical property */
	margin-right: calc(var(--mod-tooltip-tip-block-size, var(--spectrum-tooltip-tip-block-size)) + var(--mod-tooltip-margin, var(--spectrum-tooltip-margin)));

	/* Tooltip animates to left ⬅ */
	&.is-open {
		transform: translateX(calc(-1 * var(--mod-tooltip-animation-distance, var(--spectrum-tooltip-animation-distance))));
	}
}

/* logical property - tooltip is horizontally at start */
.spectrum-Tooltip--start,
.spectrum-Tooltip--start-top,
.spectrum-Tooltip--start-bottom {
	margin-inline-end: calc(var(--mod-tooltip-tip-block-size, var(--spectrum-tooltip-tip-block-size)) + var(--mod-tooltip-margin, var(--spectrum-tooltip-margin)));

	/* LTR read, tooltip animates towards left ⬅ */
	&.is-open {
		transform: translateX(calc(-1 * var(--mod-tooltip-animation-distance, var(--spectrum-tooltip-animation-distance))));
	}

	/* RTL read, tooltip animates towards right ⮕ */
	&:dir(rtl) {
		&.is-open {
			transform: translateX(var(--mod-tooltip-animation-distance, var(--spectrum-tooltip-animation-distance)));
		}
	}
}

/* logical property - tooltip is horizontally at end */
.spectrum-Tooltip--end,
.spectrum-Tooltip--end-top,
.spectrum-Tooltip--end-bottom {
	margin-inline-start: calc(var(--mod-tooltip-tip-block-size, var(--spectrum-tooltip-tip-block-size)) + var(--mod-tooltip-margin, var(--spectrum-tooltip-margin)));

	/* LTR read, tooltip animates towards right ⮕ */
	&.is-open {
		transform: translateX(var(--mod-tooltip-animation-distance, var(--spectrum-tooltip-animation-distance)));
	}

	/* RTL read, tooltip animates towards left ⬅ */
	&:dir(rtl) {
		&.is-open {
			transform: translateX(calc(-1 * var(--mod-tooltip-animation-distance, var(--spectrum-tooltip-animation-distance))));
		}
	}
}

/*** CSS Hover Animation ***/
.u-tooltip-showOnHover {
	display: inline-block;
	position: relative;

	.spectrum-Tooltip {
		position: absolute;
		white-space: nowrap;

		/* Required for animations to work, !important for diff scaling to work */
		visibility: visible !important;
		transition: transform var(--spectrum-tooltip-animation-duration) ease-in-out;
	}

	.spectrum-Tooltip-label {
		/* Don't try to wrap as the mechanism used for this helper does not support wrapping */
		max-inline-size: none;
	}

	&:hover .spectrum-Tooltip,
	&:focus .spectrum-Tooltip,
	&.is-focused .spectrum-Tooltip,
	*:focus .spectrum-Tooltip {
		opacity: 1;
	}

	.spectrum-Tooltip--top,
	.spectrum-Tooltip--top-left,
	.spectrum-Tooltip--top-right,
	.spectrum-Tooltip--top-start,
	.spectrum-Tooltip--top-end,
	.spectrum-Tooltip--bottom,
	.spectrum-Tooltip--bottom-left,
	.spectrum-Tooltip--bottom-right,
	.spectrum-Tooltip--bottom-start,
	.spectrum-Tooltip--bottom-end {
		/* stylelint-disable-next-line csstools/use-logical -- intentional use of non-logical property */
		left: 50%;
		transform: translate(-50%, 0);
	}

	.spectrum-Tooltip--top,
	.spectrum-Tooltip--top-left,
	.spectrum-Tooltip--top-right,
	.spectrum-Tooltip--top-start,
	.spectrum-Tooltip--top-end {
		inset-block-end: 100%;
	}

	.spectrum-Tooltip--bottom,
	.spectrum-Tooltip--bottom-left,
	.spectrum-Tooltip--bottom-right,
	.spectrum-Tooltip--bottom-start,
	.spectrum-Tooltip--bottom-end {
		inset-block-start: 100%;
	}

	.spectrum-Tooltip--left,
	.spectrum-Tooltip--left-bottom,
	.spectrum-Tooltip--left-top,
	.spectrum-Tooltip--right,
	.spectrum-Tooltip--right-bottom,
	.spectrum-Tooltip--right-top,
	.spectrum-Tooltip--start,
	.spectrum-Tooltip--start-top,
	.spectrum-Tooltip--start-bottom,
	.spectrum-Tooltip--end,
	.spectrum-Tooltip--end-top,
	.spectrum-Tooltip--end-bottom {
		inset-block-start: 50%;
		transform: translate(0, -50%);
	}

	.spectrum-Tooltip--left,
	.spectrum-Tooltip--left-bottom,
	.spectrum-Tooltip--left-top,
	.spectrum-Tooltip--start,
	.spectrum-Tooltip--start-top,
	.spectrum-Tooltip--start-bottom {
		/* stylelint-disable-next-line csstools/use-logical -- intentional use of non-logical property */
		right: 100%;
	}

	/* RTL */
	&:dir(rtl) {
		.spectrum-Tooltip--start,
		.spectrum-Tooltip--start-top,
		.spectrum-Tooltip--start-bottom {
			left: 100%;
			right: auto;
		}
	}

	.spectrum-Tooltip--right,
	.spectrum-Tooltip--right-top,
	.spectrum-Tooltip--right-bottom,
	.spectrum-Tooltip--end,
	.spectrum-Tooltip--end-top,
	.spectrum-Tooltip--end-bottom {
		/* stylelint-disable-next-line csstools/use-logical -- intentional use of non-logical property */
		left: 100%;
	}

	/* RTL */
	&:dir(rtl) {
		.spectrum-Tooltip--end,
		.spectrum-Tooltip--end-top,
		.spectrum-Tooltip--end-bottom {
			left: auto;
			right: 100%;
		}
	}

	&:hover,
	&:focus,
	&.is-focused,
	*:focus {
		.spectrum-Tooltip--top,
		.spectrum-Tooltip--top-left,
		.spectrum-Tooltip--top-right,
		.spectrum-Tooltip--top-start,
		.spectrum-Tooltip--top-end {
			transform: translate(-50%, calc(var(--mod-tooltip-animation-distance, var(--spectrum-tooltip-animation-distance)) * -1));
		}
	}

	&:hover,
	&:focus,
	&.is-focused,
	*:focus {
		.spectrum-Tooltip--bottom,
		.spectrum-Tooltip--bottom-left,
		.spectrum-Tooltip--bottom-right,
		.spectrum-Tooltip--bottom-start,
		.spectrum-Tooltip--bottom-end {
			transform: translate(-50%, var(--mod-tooltip-animation-distance, var(--spectrum-tooltip-animation-distance)));
		}
	}

	&:hover,
	&:focus,
	&.is-focused,
	*:focus {
		.spectrum-Tooltip--left,
		.spectrum-Tooltip--left-bottom,
		.spectrum-Tooltip--left-top,
		.spectrum-Tooltip--start,
		.spectrum-Tooltip--start-top,
		.spectrum-Tooltip--start-bottom {
			transform: translate(calc(var(--mod-tooltip-animation-distance, var(--spectrum-tooltip-animation-distance)) * -1), -50%);
		}
	}

	/* RTL */
	&:dir(rtl) {
		&:hover,
		&:focus,
		&.is-focused,
		*:focus {
			.spectrum-Tooltip--start,
			.spectrum-Tooltip--start-top,
			.spectrum-Tooltip--start-bottom {
				transform: translate(var(--mod-tooltip-animation-distance, var(--spectrum-tooltip-animation-distance)), -50%);
			}
		}
	}

	&:hover,
	&:focus,
	&.is-focused,
	*:focus {
		.spectrum-Tooltip--right,
		.spectrum-Tooltip--right-top,
		.spectrum-Tooltip--right-bottom,
		.spectrum-Tooltip--end,
		.spectrum-Tooltip--end-top,
		.spectrum-Tooltip--end-bottom {
			transform: translate(var(--mod-tooltip-animation-distance, var(--spectrum-tooltip-animation-distance)), -50%);
		}
	}

	/* RTL */
	&:dir(rtl) {
		&:hover,
		&:focus,
		&.is-focused,
		*:focus {
			.spectrum-Tooltip--end,
			.spectrum-Tooltip--end-top,
			.spectrum-Tooltip--end-bottom {
				transform: translate(calc(var(--mod-tooltip-animation-distance, var(--spectrum-tooltip-animation-distance)) * -1), -50%);
			}
		}
	}
}

@media (forced-colors: active) {
	.spectrum-Tooltip {
		--highcontrast-tooltip-border-width: 1px;
		border: var(--highcontrast-tooltip-border-width) solid CanvasText;
	}

	.spectrum-Tooltip-tip {
		--highcontrast-tooltip-background-color-default: CanvasText;
	}
}
