/*!
 * Copyright 2024 Adobe. All rights reserved.
 *
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at <http://www.apache.org/licenses/LICENSE-2.0>
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */

@import "themes/spectrum-two.css";

/* checkbox/index.css
 *
 * .spectrum-Checkbox-box::before is the Checkbox "box"
 * .spectrum-Checkbox-box::after is the focus indicator
 */

/* Default Unchecked */
.spectrum-Checkbox {
	position: relative;

	display: inline-flex;
	align-items: flex-start;
	max-inline-size: 100%;

	min-block-size: var(--mod-checkbox-height, var(--spectrum-checkbox-height));
	color: var(--highcontrast-checkbox-content-color-default, var(--mod-checkbox-content-color-default, var(--spectrum-checkbox-content-color-default)));

	vertical-align: top;

	&:hover {
		.spectrum-Checkbox-box::before {
			border-color: var(--highcontrast-checkbox-highlight-color-hover, var(--mod-checkbox-control-color-hover, var(--spectrum-checkbox-control-color-hover)));
		}

		.spectrum-Checkbox-input:checked + .spectrum-Checkbox-box::before {
			border-color: var(--highcontrast-checkbox-highlight-color-hover, var(--mod-checkbox-control-selected-color-hover, var(--spectrum-checkbox-control-selected-color-hover)));
		}

		.spectrum-Checkbox-label {
			color: var(--highcontrast-checkbox-content-color-hover, var(--mod-checkbox-content-color-hover, var(--spectrum-checkbox-content-color-hover)));
		}
	}

	&:active {
		.spectrum-Checkbox-box::before {
			border-color: var(--highcontrast-checkbox-highlight-color-down, var(--mod-checkbox-control-color-down, var(--spectrum-checkbox-control-color-down)));
		}

		.spectrum-Checkbox-input:checked + .spectrum-Checkbox-box::before {
			border-color: var(--highcontrast-checkbox-highlight-color-down, var(--mod-checkbox-control-selected-color-down, var(--spectrum-checkbox-control-selected-color-down)));
		}

		.spectrum-Checkbox-label {
			color: var(--highcontrast-checkbox-content-color-down, var(--mod-checkbox-content-color-down, var(--spectrum-checkbox-content-color-down)));
		}
	}

	/* Selected Invalid */
	&.is-invalid {
		.spectrum-Checkbox-input:checked + .spectrum-Checkbox-box,
		.spectrum-Checkbox-box {
			&::before {
				border-color: var(--highcontrast-checkbox-color-default, var(--mod-checkbox-invalid-color-default, var(--spectrum-checkbox-invalid-color-default)));
			}
		}

		&.is-indeterminate .spectrum-Checkbox-input:focus-visible,
		.spectrum-Checkbox-input:focus-visible {
			& + .spectrum-Checkbox-box {
				&::before {
					border-color: var(--highcontrast-checkbox-color-hover, var(--mod-checkbox-invalid-color-hover, var(--spectrum-checkbox-invalid-color-hover)));
				}
			}
		}

		&:hover {
			.spectrum-Checkbox-input:checked + .spectrum-Checkbox-box,
			.spectrum-Checkbox-box {
				&::before {
					border-color: var(--highcontrast-checkbox-color-hover, var(--mod-checkbox-invalid-color-hover, var(--spectrum-checkbox-invalid-color-hover)));
				}
			}
		}
	}

	/*
   * Read-Only
   *
   * readonly is not a valid attribute for input[type="checkbox"]
   * so we borrow the immutability of a disabled checkbox
   * while using the colors of a default checkbox
   */
	&.is-readOnly {
		border-color: var(--highcontrast-checkbox-color-default, var(--mod-checkbox-control-selected-color-default, var(--spectrum-checkbox-control-selected-color-default)));

		&:hover {
			.spectrum-Checkbox-box {
				&::before {
					border-color: var(--highcontrast-checkbox-color-default, var(--mod-checkbox-control-selected-color-default, var(--spectrum-checkbox-control-selected-color-default)));
				}
			}
		}

		&:active {
			.spectrum-Checkbox-box {
				&::before {
					border-color: var(--highcontrast-checkbox-selected-color-default, var(--mod-checkbox-control-selected-color-default, var(--spectrum-checkbox-control-selected-color-default)));
				}
			}
		}
	}

	&.is-readOnly .spectrum-Checkbox-input,
	&.is-readOnly .spectrum-Checkbox-input:checked {
		&:disabled + .spectrum-Checkbox-box {
			&::before {
				background-color: var(--highcontrast-checkbox-background-color-default, var(--mod-checkbox-checkmark-color, var(--spectrum-checkbox-checkmark-color)));
				border-color: var(--highcontrast-checkbox-color-default, var(--mod-checkbox-control-selected-color-default, var(--spectrum-checkbox-control-selected-color-default)));
			}
		}

		&:disabled ~ .spectrum-Checkbox-label {
			color: var(--highcontrast-checkbox-color-default, var(--mod-checkbox-content-color-default, var(--spectrum-checkbox-content-color-default)));
			forced-color-adjust: none;
		}
	}

	/* Indeterminate */
	&.is-indeterminate {
		.spectrum-Checkbox-box,
		.spectrum-Checkbox-input:checked + .spectrum-Checkbox-box {
			&::before {
				border-color: var(--highcontrast-checkbox-highlight-color-default, var(--mod-checkbox-control-selected-color-default, var(--spectrum-checkbox-control-selected-color-default)));
				border-width: var(--mod-checkbox-selected-border-width, var(--spectrum-checkbox-selected-border-width));
			}

			.spectrum-Checkbox-checkmark {
				display: none;
			}

			.spectrum-Checkbox-partialCheckmark {
				transform: scale(1);
				display: block;
				opacity: 1;
			}
		}

		.spectrum-Checkbox-input:focus-visible + .spectrum-Checkbox-box {
			&::before {
				border-color: var(--highcontrast-checkbox-highlight-color-focus, var(--mod-checkbox-control-selected-color-focus, var(--spectrum-checkbox-control-selected-color-focus)));
			}
		}

		&:hover {
			.spectrum-Checkbox-input:checked + .spectrum-Checkbox-box,
			.spectrum-Checkbox-box {
				&::before {
					border-color: var(--highcontrast-checkbox-highlight-color-hover, var(--mod-checkbox-control-selected-color-hover, var(--spectrum-checkbox-control-selected-color-hover)));
				}
			}
		}
	}

	/* Invalid Indeterminate */
	&.is-invalid.is-indeterminate {
		.spectrum-Checkbox-box,
		.spectrum-Checkbox-input:checked + .spectrum-Checkbox-box {
			&::before {
				border-color: var(--highcontrast-checkbox-color-default, var(--mod-checkbox-invalid-color-default, var(--spectrum-checkbox-invalid-color-default)));
				border-width: var(--mod-checkbox-selected-border-width, var(--spectrum-checkbox-selected-border-width));
			}
		}

		&:hover {
			.spectrum-Checkbox-input:checked + .spectrum-Checkbox-box,
			.spectrum-Checkbox-box {
				&::before {
					border-color: var(--highcontrast-checkbox-color-default, var(--mod-checkbox-invalid-color-hover, var(--spectrum-checkbox-invalid-color-hover)));
				}
			}

			.spectrum-Checkbox-label {
				color: var(--highcontrast-checkbox-content-color-hover, var(--mod-checkbox-content-color-hover, var(--spectrum-checkbox-content-color-hover)));
			}
		}
	}
}

/* Emphasized */
.spectrum-Checkbox--emphasized {
	/* Checked and Indeterminate Default States */
	.spectrum-Checkbox-input:checked + .spectrum-Checkbox-box,
	&.is-indeterminate .spectrum-Checkbox-input:checked + .spectrum-Checkbox-box,
	&.is-indeterminate .spectrum-Checkbox-box {
		&::before {
			border-color: var(--highcontrast-checkbox-highlight-color-default, var(--mod-checkbox-emphasized-color-default, var(--spectrum-checkbox-emphasized-color-default)));
		}
	}

	/* Hover for Checked and Indeterminate States */
	&:hover {
		.spectrum-Checkbox-input:checked + .spectrum-Checkbox-box,
		&.is-indeterminate .spectrum-Checkbox-input:checked + .spectrum-Checkbox-box,
		&.is-indeterminate .spectrum-Checkbox-box {
			&::before {
				border-color: var(--highcontrast-checkbox-color-hover, var(--mod-checkbox-emphasized-color-hover, var(--spectrum-checkbox-emphasized-color-hover)));
			}
		}
	}

	/* Selected and Indeterminate Focus States */
	.spectrum-Checkbox-input:focus-visible:checked + .spectrum-Checkbox-box,
	&.is-indeterminate .spectrum-Checkbox-input:focus-visible + .spectrum-Checkbox-box {
		&::before {
			border-color: var(--highcontrast-checkbox-highlight-color-focus, var(--mod-checkbox-emphasized-color-focus, var(--spectrum-checkbox-emphasized-color-focus)));
		}
	}

	/* Selected Invalid Focus State */
	&.is-invalid .spectrum-Checkbox-input:focus-visible:checked + .spectrum-Checkbox-box {
		&::before {
			border-color: var(--highcontrast-checkbox-color-default, var(--mod-checkbox-invalid-color-focus, var(--spectrum-checkbox-invalid-color-focus)));
		}
	}

	/* Invalid Hover States */
	&.is-invalid:hover {
		&.is-indeterminate .spectrum-Checkbox-box,
		&.is-indeterminate .spectrum-Checkbox-input:checked + .spectrum-Checkbox-box,
		.spectrum-Checkbox-input:checked + .spectrum-Checkbox-box {
			&::before {
				border-color: var(--highcontrast-checkbox-color-hover, var(--mod-checkbox-invalid-color-hover, var(--spectrum-checkbox-invalid-color-hover)));
			}
		}
	}

	/* Selected and Indeterminate Hover States */
	&:hover {
		&.is-indeterminate .spectrum-Checkbox-box,
		&.is-indeterminate .spectrum-Checkbox-input:checked + .spectrum-Checkbox-box,
		.spectrum-Checkbox-input:checked + .spectrum-Checkbox-box {
			&::before {
				border-color: var(--highcontrast-checkbox-highlight-color-hover, var(--mod-checkbox-emphasized-color-hover, var(--spectrum-checkbox-emphasized-color-hover)));
			}
		}
	}

	/* Selected and Indeterminate Active States */
	&:active {
		&.is-indeterminate .spectrum-Checkbox-box,
		&.is-indeterminate .spectrum-Checkbox-input:checked + .spectrum-Checkbox-box,
		.spectrum-Checkbox-input:checked + .spectrum-Checkbox-box {
			&::before {
				border-color: var(--highcontrast-checkbox-highlight-color-default, var(--mod-checkbox-emphasized-color-down, var(--spectrum-checkbox-emphasized-color-down)));
			}
		}
	}

	/* Invalid Active State */
	&.is-invalid:active {
		.spectrum-Checkbox-input:checked + .spectrum-Checkbox-box,
		.spectrum-Checkbox-box {
			&::before {
				border-color: var(--highcontrast-checkbox-highlight-color-default, var(--mod-checkbox-control-invalid-color-down, var(--spectrum-checkbox-invalid-color-down)));
			}
		}
	}

	/* Focus State */
	&:focus-visible {
		.spectrum-Checkbox-input:checked + .spectrum-Checkbox-box,
		.spectrum-Checkbox-box {
			&::before {
				border-color: var(--highcontrast-checkbox-color-focus, var(--mod-checkbox-control-color-focus, var(--spectrum-checkbox-control-color-focus)));
			}
		}
	}
}

.spectrum-Checkbox-label {
	margin-block-start: var(--mod-checkbox-top-to-text, var(--spectrum-checkbox-top-to-text));
	margin-inline-start: var(--mod-checkbox-text-to-control, var(--spectrum-checkbox-text-to-control));

	font-size: var(--mod-checkbox-font-size, var(--spectrum-checkbox-font-size));

	line-height: var(--mod-checkbox-line-height, var(--spectrum-checkbox-line-height));
	text-align: start;

	/* TODO Use font-weight and font-style tokens */
	/* font-weight: var(--spectrum-checkbox-text-font-weight); */
	/* font-style: var(--spectrum-checkbox-text-font-style); */

	transition: color var(--mod-checkbox-animation-duration, var(--spectrum-checkbox-animation-duration)) ease-in-out;

	&:lang(ja),
	&:lang(zh),
	&:lang(ko) {
		line-height: var(--mod-checkbox-line-height-cjk, var(--spectrum-checkbox-line-height-cjk));
	}
}

.spectrum-Checkbox-input {
	cursor: pointer;

	position: absolute;
	z-index: 1;

	/* Show the overflow for input in Edge. */
	overflow: visible;

	/* Add the correct box sizing for [type="checkbox"] in IE 10-. */
	box-sizing: border-box;
	inline-size: 100%;
	block-size: 100%;

	/* Remove the margin for input in Firefox and Safari. */
	margin: 0;

	/* Remove the padding for [type="checkbox"] in IE 10-. */
	padding: 0;

	/* Change the font styles in all browsers for input. */
	font-family: inherit;
	font-size: 100%;
	line-height: 1.15;
	color: var(--mod-checkbox-control-color-default, var(--spectrum-checkbox-control-color-default));

	opacity: 0.0001;

	&:disabled {
		cursor: default;
	}

	/* Selected */
	&:checked + .spectrum-Checkbox-box {
		&::before {
			background-color: var(--mod-checkbox-checkmark-color, var(--spectrum-checkbox-checkmark-color));
			border-color: var(--highcontrast-checkbox-highlight-color-default, var(--mod-checkbox-control-selected-color-default, var(--spectrum-checkbox-control-selected-color-default)));
			border-width: var(--mod-checkbox-selected-border-width, var(--spectrum-checkbox-selected-border-width));
		}

		.spectrum-Checkbox-checkmark {
			transform: scale(1);
			opacity: 1;
		}
	}

	/* Focus */
	&:focus-visible + .spectrum-Checkbox-box {
		&::before {
			border-color: var(--highcontrast-checkbox-color-focus, var(--mod-checkbox-control-color-focus, var(--spectrum-checkbox-control-color-focus)));
		}

		&::after {
			margin: calc(var(--mod-checkbox-focus-indicator-gap, var(--spectrum-checkbox-focus-indicator-gap)) * -1);
			forced-color-adjust: none;
			box-shadow: 0 0 0 var(--mod-checkbox-focus-indicator-thinkness, var(--spectrum-checkbox-focus-indicator-thickness)) var(--highcontrast-checkbox-focus-indicator-color, var(--mod-checkbox-focus-indicator-color, var(--spectrum-checkbox-focus-indicator-color)));
		}
	}

	&:focus-visible + .spectrum-Checkbox-label {
		color: var(--highcontrast-checkbox-content-color-focus, var(--mod-checkbox-content-color-focus, var(--spectrum-checkbox-content-color-focus)));
	}

	/* Selected and Focus */
	&:focus-visible:checked + .spectrum-Checkbox-box {
		&::before {
			border-color: var(--highcontrast-checkbox-highlight-color-focus, var(--mod-checkbox-control-selected-color-focus, var(--spectrum-checkbox-control-selected-color-focus)));
		}
	}
}

.spectrum-Checkbox-box {
	/* Fix vertical alignment when not wrapping since we're flex-start */
	--spectrum-checkbox-spacing: calc(var(--mod-checkbox-height, var(--spectrum-checkbox-height)) - var(--mod-checkbox-control-size, var(--spectrum-checkbox-control-size)));

	position: relative;
	display: flex;

	flex-grow: 0;
	flex-shrink: 0;
	align-items: center;
	justify-content: center;
	box-sizing: border-box;
	inline-size: var(--mod-checkbox-control-size, var(--spectrum-checkbox-control-size));
	block-size: var(--mod-checkbox-control-size, var(--spectrum-checkbox-control-size));
	margin: calc(var(--mod-checkbox-spacing, var(--spectrum-checkbox-spacing)) / 2) 0;

	&::before {
		content: "";
		position: absolute;
		z-index: 0;

		display: block;
		box-sizing: border-box;

		inline-size: var(--mod-checkbox-control-size, var(--spectrum-checkbox-control-size));
		block-size: var(--mod-checkbox-control-size, var(--spectrum-checkbox-control-size));
		forced-color-adjust: none;
		border-color: var(--highcontrast-checkbox-color-default, var(--mod-checkbox-control-color-default, var(--spectrum-checkbox-control-color-default)));
		border-style: solid;
		border-width: var(--mod-checkbox-border-width, var(--spectrum-checkbox-border-width));

		border-radius: var(--mod-checkbox-control-corner-radius, var(--spectrum-checkbox-control-corner-radius));

		transition:
			border var(--mod-checkbox-animation-duration, var(--spectrum-checkbox-animation-duration)) ease-in-out,
			box-shadow var(--mod-checkbox-animation-duration, var(--spectrum-checkbox-animation-duration)) ease-in-out;
	}

	&::after {
		content: "";
		position: absolute;
		inset-block-start: 0;
		inset-block-end: 0;
		inset-inline-start: 0;
		inset-inline-end: 0;

		/* force ff to render on the pixel grid */
		transform: translate(0, 0);
		display: block;
		margin: var(--mod-checkbox-focus-indicator-gap, var(--spectrum-checkbox-focus-indicator-gap));
		border-radius: calc(var(--mod-checkbox-control-corner-radius, var(--spectrum-checkbox-control-corner-radius)) + var(--mod-checkbox-focus-indicator-gap, var(--spectrum-checkbox-focus-indicator-gap)));

		transition:
			box-shadow var(--mod-checkbox-animation-duration, var(--spectrum-checkbox-animation-duration)) ease-out,
			margin var(--mod-checkbox-animation-duration, var(--spectrum-checkbox-animation-duration)) ease-out;
	}
}

.spectrum-Checkbox {
	.spectrum-Checkbox-checkmark,
	.spectrum-Checkbox-partialCheckmark {
		transform: scale(0);
		color: var(--highcontrast-checkbox-background-color-default, var(--mod-checkbox-checkmark-color, var(--spectrum-checkbox-checkmark-color)));
		opacity: 0;

		transition:
			opacity var(--mod-checkbox-animation-duration, var(--spectrum-checkbox-animation-duration)) ease-in-out,
			transform var(--mod-checkbox-animation-duration, var(--spectrum-checkbox-animation-duration)) ease-in-out;
	}

	.spectrum-Checkbox-partialCheckmark {
		display: none;
	}
}

/* Disabled */
.spectrum-Checkbox .spectrum-Checkbox-input,
.spectrum-Checkbox .spectrum-Checkbox-input:checked {
	&:disabled + .spectrum-Checkbox-box {
		&::before {
			background-color: var(--highcontrast-checkbox-background-color-default, var(--mod-checkbox-checkmark-color, var(--spectrum-checkbox-checkmark-color)));
			border-color: var(--highcontrast-checkbox-disabled-color-default, var(--mod-checkbox-control-color-disabled, var(--spectrum-checkbox-control-color-disabled)));
		}
	}

	&:disabled ~ .spectrum-Checkbox-label {
		color: var(--highcontrast-checkbox-disabled-color-default, var(--mod-checkbox-content-color-disabled, var(--spectrum-checkbox-content-color-disabled)));
		forced-color-adjust: none;
	}
}

/* Windows high contrast mode */
@media (forced-colors: active) {
	.spectrum-Checkbox-input {
		&:focus-visible + .spectrum-Checkbox-box {
			forced-color-adjust: none;
			outline-color: var(--highcontrast-checkbox-focus-indicator-color, var(--mod-checkbox-focus-indicator-color, var(--spectrum-checkbox-focus-indicator-color)));
			outline-style: auto;
			/* stylelint-disable-next-line declaration-block-no-redundant-longhand-properties */
			outline-width: var(--mod-focus-indicator-thickness, var(--spectrum-focus-indicator-thickness));
			outline-offset: var(--highcontrast-checkbox-focus-indicator-gap, var(--mod-checkbox-focus-indicator-gap, var(--spectrum-checkbox-focus-indicator-gap)));

			&::after {
				box-shadow: 0 0 0 0 var(--highcontrast-checkbox-focus-indicator-color, var(--mod-checkbox-focus-indicator-color, var(--spectrum-checkbox-focus-indicator-color)));
			}
		}
	}

	.spectrum-Checkbox {
		/* Label Text */
		--highcontrast-checkbox-content-color-default: CanvasText;
		--highcontrast-checkbox-content-color-hover: CanvasText;
		--highcontrast-checkbox-content-color-down: CanvasText;
		--highcontrast-checkbox-content-color-focus: CanvasText;

		/* Checkbox box */
		--highcontrast-checkbox-background-color-default: Canvas;

		--highcontrast-checkbox-color-default: ButtonText;
		--highcontrast-checkbox-color-hover: ButtonText;
		--highcontrast-checkbox-color-focus: Highlight;

		--highcontrast-checkbox-highlight-color-default: Highlight;
		--highcontrast-checkbox-highlight-color-hover: Highlight;
		--highcontrast-checkbox-highlight-color-down: Highlight;
		--highcontrast-checkbox-highlight-color-focus: Highlight;

		--highcontrast-checkbox-disabled-color-default: GrayText;
		--highcontrast-checkbox-focus-indicator-color: CanvasText;
	}
}
