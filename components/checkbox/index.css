/*!
 * Copyright 2024 Adobe. All rights reserved.
 *
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at <http://www.apache.org/licenses/LICENSE-2.0>
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */

/*
 * .spectrum-Checkbox-box::before is the Checkbox "box"
 * .spectrum-Checkbox-box::after is the focus indicator
 */

.spectrum-Checkbox {
	--spectrum-checkbox-label-color: var(--spectrum-neutral-content-color-default);
	--spectrum-checkbox-control-surface-color: var(--spectrum-gray-25);
	--spectrum-checkbox-control-color: var(--spectrum-neutral-content-color-default);
	--spectrum-checkbox-control-color-focus: var(--spectrum-neutral-content-color-key-focus);

	--spectrum-checkbox-control-selected-color: var(--spectrum-neutral-content-color-default);
	--spectrum-checkbox-control-selected-color-hover: var(--spectrum-neutral-content-color-hover);
	--spectrum-checkbox-control-selected-color-down: var(--spectrum-neutral-content-color-down);

	--spectrum-checkbox-line-height: var(--spectrum-line-height-100);
	--spectrum-checkbox-control-border-width: var(--spectrum-border-width-200);

	/* These values are altered by the size variants */
	--spectrum-checkbox-control-corner-radius: var(--spectrum-corner-radius-small-size-medium);
	--spectrum-checkbox-font-size: var(--spectrum-font-size-100);
	--spectrum-checkbox-height: var(--spectrum-component-height-100);
	--spectrum-checkbox-control-size: var(--spectrum-checkbox-control-size-medium);
	--spectrum-checkbox-top-to-text: var(--spectrum-component-top-to-text-100);
	--spectrum-checkbox-bottom-to-text: var(--spectrum-component-bottom-to-text-100);
	--spectrum-checkbox-text-to-control: var(--spectrum-text-to-control-100);
	--spectrum-checkbox-top-to-control: var(--spectrum-checkbox-top-to-control-medium);

	display: inline-flex;
	align-items: flex-start;
	position: relative;
	min-block-size: var(--spectrum-checkbox-height);
	max-inline-size: 100%;

	/* Label inherits this color */
	color: var(--spectrum-checkbox-label-color);

	@media (forced-colors: active) {
		--spectrum-checkbox-label-color: CanvasText;
	}

	/* CJK (Chinese, Japanese, and Korean) language support */
	&:lang(ja),
	&:lang(zh),
	&:lang(ko) {
		--spectrum-checkbox-line-height: var(--spectrum-cjk-line-height-100);
	}

	&.spectrum-Checkbox--sizeS {
		--spectrum-checkbox-control-corner-radius: var(--spectrum-corner-radius-small-size-small);
		--spectrum-checkbox-font-size: var(--spectrum-font-size-75);
		--spectrum-checkbox-height: var(--spectrum-component-height-75);
		--spectrum-checkbox-control-size: var(--spectrum-checkbox-control-size-small);
		--spectrum-checkbox-top-to-text: var(--spectrum-component-top-to-text-75);
		--spectrum-checkbox-bottom-to-text: var(--spectrum-component-bottom-to-text-75);
		--spectrum-checkbox-text-to-control: var(--spectrum-text-to-control-75);
		--spectrum-checkbox-top-to-control: var(--spectrum-checkbox-top-to-control-small);
	}

	&.spectrum-Checkbox--sizeL {
		--spectrum-checkbox-control-corner-radius: var(--spectrum-corner-radius-small-size-large);
		--spectrum-checkbox-font-size: var(--spectrum-font-size-200);
		--spectrum-checkbox-height: var(--spectrum-component-height-200);
		--spectrum-checkbox-control-size: var(--spectrum-checkbox-control-size-large);
		--spectrum-checkbox-top-to-text: var(--spectrum-component-top-to-text-200);
		--spectrum-checkbox-bottom-to-text: var(--spectrum-component-bottom-to-text-200);
		--spectrum-checkbox-text-to-control: var(--spectrum-text-to-control-200);
		--spectrum-checkbox-top-to-control: var(--spectrum-checkbox-top-to-control-large);
	}

	&.spectrum-Checkbox--sizeXL {
		--spectrum-checkbox-control-corner-radius: var(--spectrum-corner-radius-small-size-extra-large);
		--spectrum-checkbox-font-size: var(--spectrum-font-size-300);
		--spectrum-checkbox-height: var(--spectrum-component-height-300);
		--spectrum-checkbox-control-size: var(--spectrum-checkbox-control-size-extra-large);
		--spectrum-checkbox-top-to-text: var(--spectrum-component-top-to-text-300);
		--spectrum-checkbox-bottom-to-text: var(--spectrum-component-bottom-to-text-300);
		--spectrum-checkbox-text-to-control: var(--spectrum-text-to-control-300);
		--spectrum-checkbox-top-to-control: var(--spectrum-checkbox-top-to-control-extra-large);
	}

	&.spectrum-Checkbox--emphasized {
		--spectrum-checkbox-control-selected-color: var(--spectrum-accent-content-color-default);
		--spectrum-checkbox-control-selected-color-hover: var(--spectrum-accent-content-color-hover);
		--spectrum-checkbox-control-selected-color-down: var(--spectrum-accent-content-color-down);
	}

	&.is-invalid {
		--spectrum-checkbox-control-color: var(--spectrum-negative-color-900);
		--spectrum-checkbox-control-color-focus: var(--spectrum-negative-color-1000);

		--spectrum-checkbox-control-selected-color: var(--spectrum-negative-color-900);
		--spectrum-checkbox-control-selected-color-hover: var(--spectrum-negative-color-1000);
		--spectrum-checkbox-control-selected-color-down: var(--spectrum-negative-color-1000);

		&:hover,
		&:active {
			--spectrum-checkbox-control-color: var(--spectrum-negative-color-1000);
		}
	}

	&:hover {
		--spectrum-checkbox-label-color: var(--spectrum-neutral-content-color-hover);
		--spectrum-checkbox-control-color: var(--spectrum-neutral-content-color-hover);

		@media (forced-colors: active) {
			--spectrum-checkbox-label-color: CanvasText;
			--spectrum-checkbox-control-color: Highlight;
		}

		&:has(.spectrum-Checkbox-input:checked) {
			--spectrum-checkbox-control-color: var(--spectrum-checkbox-control-selected-color-hover);

			@media (forced-colors: active) {
				--spectrum-checkbox-control-color: Highlight;
			}
		}
	}

	&:active {
		--spectrum-checkbox-label-color: var(--spectrum-neutral-content-color-down);
		--spectrum-checkbox-control-color: var(--spectrum-neutral-content-color-down);

		@media (forced-colors: active) {
			--spectrum-checkbox-label-color: CanvasText;
			--spectrum-checkbox-control-color: Highlight;
		}

		&:has(.spectrum-Checkbox-input:checked) {
			--spectrum-checkbox-control-color: var(--spectrum-checkbox-control-selected-color-down);

			@media (forced-colors: active) {
				--spectrum-checkbox-control-color: Highlight;
			}
		}
	}

	/* Focus */
	&:has(.spectrum-Checkbox-input:focus-visible) {
		--spectrum-checkbox-label-color: var(--spectrum-neutral-content-color-key-focus);

		@media (forced-colors: active) {
			--spectrum-checkbox-label-color: CanvasText;
			--spectrum-focus-indicator-color: CanvasText;
			--spectrum-checkbox-control-color-focus: Highlight;
		}
	}

	/* Focus */
	&:has(.spectrum-Checkbox-input:focus-visible) {
		--spectrum-checkbox-control-color: var(--spectrum-checkbox-control-color-focus);
	}

	/* Selected */
	&:has(.spectrum-Checkbox-input:checked) {
		--spectrum-checkbox-control-border-width: calc(var(--spectrum-checkbox-control-size) / 2);
		--spectrum-checkbox-control-color: var(--spectrum-checkbox-control-selected-color);
		--spectrum-checkbox-control-surface-color: var(--spectrum-checkbox-control-surface-color);

		@media (forced-colors: active) {
			--spectrum-checkbox-control-surface-color: Canvas;
			--spectrum-checkbox-control-color: Highlight;
		}
	}

	&:not(.is-readOnly) {
		.spectrum-Checkbox-input:active:not(:disabled) + .spectrum-Checkbox-box,
		&:active .spectrum-Checkbox-input:not(:disabled) + .spectrum-Checkbox-box {
			transform: perspective(var(--spectrum-component-size-minimum-perspective-down)) translateZ(var(--spectrum-component-size-difference-down));
		}
	}

	/* Indeterminate */
	&.is-indeterminate {
		--spectrum-checkbox-control-border-width: calc(var(--spectrum-checkbox-control-size) / 2);

		@media (forced-colors: active) {
			--spectrum-checkbox-control-color: Highlight;
		}

		/* Invalid state indeterminate override */
		&.is-invalid {
			--spectrum-checkbox-control-color: var(--spectrum-checkbox-control-selected-color);

			@media (forced-colors: active) {
				--spectrum-checkbox-control-color: Highlight;
			}

			&:hover {
				--spectrum-checkbox-control-color: var(--spectrum-checkbox-control-selected-color-hover);

				@media (forced-colors: active) {
					--spectrum-checkbox-control-color: Highlight;
				}
			}

			&:has(.spectrum-Checkbox-input:focus-visible) {
				--spectrum-checkbox-control-color: var(--spectrum-checkbox-control-color-focus);

				@media (forced-colors: active) {
					--spectrum-checkbox-control-color: Highlight;
				}
			}
		}
	}

	/* Emphasized state overrides - all configurations at the top apply except for the ones below: indeterminate, indeterminate focused, focused + checked */
	&.spectrum-Checkbox--emphasized {
		&.is-indeterminate {
			--spectrum-checkbox-control-color: var(--spectrum-checkbox-control-selected-color);

			@media (forced-colors: active) {
				--spectrum-checkbox-control-color: Highlight;
			}

			&:not(.is-invalid):has(.spectrum-Checkbox-input:focus-visible) {
				--spectrum-checkbox-control-color: var(--spectrum-accent-content-color-key-focus);
			}

			&:hover {
				--spectrum-checkbox-control-color: var(--spectrum-checkbox-control-selected-color-hover);
			}
		}

		&:not(.is-invalid):has(.spectrum-Checkbox-input:focus-visible:checked) {
			--spectrum-checkbox-control-color-focus: var(--spectrum-accent-content-color-key-focus);
		}
	}

	&:has(.spectrum-Checkbox-input:disabled) {
		--spectrum-checkbox-label-color: var(--spectrum-disabled-content-color);
		--spectrum-checkbox-control-color: var(--spectrum-disabled-content-color);

		@media (forced-colors: active) {
			--spectrum-disabled-content-color: GrayText;
		}
	}
}

.spectrum-Checkbox-label {
	text-align: start;
	margin-inline-start: var(--spectrum-checkbox-text-to-control);
	margin-block-start: var(--spectrum-checkbox-top-to-text);
	margin-block-end: var(--spectrum-checkbox-bottom-to-text);
	font-size: var(--spectrum-checkbox-font-size);
	font-weight: var(--spectrum-regular-font-weight);
	font-style: var(--spectrum-default-font-style);
	line-height: var(--spectrum-checkbox-line-height);
	color: currentColor;
}

/**
	* The input is visually hidden (with opacity), and remains accessible using assistive tech.
	* It is still sized and positioned where it would naturally be present so that touch users can find it with haptics.
	*/
.spectrum-Checkbox-input {
	color: var(--spectrum-checkbox-control-color);

	/* Remove the margin for input in Firefox and Safari. */
	margin: 0;

	/* Show the overflow for input in Edge. */
	overflow: visible;

	/* Add the correct box sizing for [type="checkbox"] in IE 10-. */
	box-sizing: border-box;

	position: absolute;
	inline-size: 100%;
	block-size: 100%;

	opacity: 0;
	z-index: 1;

	cursor: pointer;

	/* Disabled state for all variants - default, invalid, emphasized */
	&:disabled {
		cursor: default;
	}
}

.spectrum-Checkbox-box {
	display: flex;
	align-items: center;
	justify-content: center;

	position: relative;
	box-sizing: border-box;
	inline-size: var(--spectrum-checkbox-control-size);
	block-size: var(--spectrum-checkbox-control-size);

	/* Fix vertical alignment when not wrapping since we're flex-start */
	margin: var(--spectrum-checkbox-top-to-control) 0;
	flex-grow: 0;
	flex-shrink: 0;

	/* Icon inherits this color */
	color: var(--spectrum-gray-25);

	@media (forced-colors: active) {
		color: Canvas;
	}

	&::before {
		background-color: var(--spectrum-checkbox-control-surface-color);
		display: block;
		z-index: 0;
		content: "";
		box-sizing: border-box;
		position: absolute;

		inline-size: var(--spectrum-checkbox-control-size);
		block-size: var(--spectrum-checkbox-control-size);

		border-radius: var(--spectrum-checkbox-control-corner-radius);
		border-width: var(--spectrum-checkbox-control-border-width);
		border-style: solid;
		border-color: var(--spectrum-checkbox-control-color);

		transition:
			border var(--spectrum-animation-duration-100) ease-in-out,
			box-shadow var(--spectrum-animation-duration-100) ease-in-out;

		@media (forced-colors: active) {
			--spectrum-checkbox-control-color: ButtonText;
			--spectrum-checkbox-control-surface-color: Canvas;
		}
	}

	.spectrum-Icon {
		z-index: 1;
	}
}

/* Focus indicator */
.spectrum-Checkbox:has(.spectrum-Checkbox-input:focus-visible) {
	.spectrum-Checkbox-box::after {
		box-shadow: 0 0 0 var(--spectrum-focus-indicator-thickness) var(--spectrum-focus-indicator-color);
		border-radius: calc(var(--spectrum-checkbox-control-corner-radius) + var(--spectrum-focus-indicator-gap));
		content: "";
		display: block;
		position: absolute;
		inset-inline-start: 0;
		inset-inline-end: 0;
		inset-block-end: 0;
		inset-block-start: 0;
		margin: calc(var(--spectrum-focus-indicator-gap) * -1);

		/* force ff to render on the pixel grid */
		transform: translate(0, 0);
	}
}

/* Windows high contrast mode */
@media (forced-colors: active) {
	.spectrum-Checkbox-input:focus-visible + .spectrum-Checkbox-box {
		forced-color-adjust: none;
		outline-color: CanvasText;
		outline-offset: var(--spectrum-focus-indicator-gap);
		outline-width: var(--spectrum-focus-indicator-thickness);
	}
}
