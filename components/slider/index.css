/*!
Copyright 2023 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

/**
 * @namespace spectrum
 * @component Slider
 */
.spectrum-Slider {
    /* default sizing, matches t-shirt size M */
    --spectrum-slider-font-size: var(--spectrum-font-size-75);
    --spectrum-slider-handle-size: var(--spectrum-slider-handle-size-medium);
    --spectrum-slider-control-height: var(--spectrum-component-height-100);
    --spectrum-slider-handle-border-radius: var(--spectrum-corner-radius-200);
    --spectrum-slider-handle-border-width-down: var(--spectrum-slider-handle-border-width-down-medium);
    --spectrum-slider-label-top-to-text: var(--spectrum-component-top-to-text-75);
    --spectrum-slider-control-to-field-label: var(--spectrum-slider-control-to-field-label-medium);
    --spectrum-slider-value-side-padding-inline: var(--spectrum-spacing-200);

    /* TODO: placeholder value for sideLabel variant value width */
    --spectrum-slider-value-inline-size: 18px;
}

.spectrum-Slider--sizeS {
    --spectrum-slider-font-size: var(--spectrum-font-size-75);
    --spectrum-slider-handle-size: var(--spectrum-slider-handle-size-small);
    --spectrum-slider-control-height: var(--spectrum-component-height-75);
    --spectrum-slider-handle-border-radius: var(--spectrum-corner-radius-200);
    --spectrum-slider-handle-border-width-down: var(--spectrum-slider-handle-border-width-down-small);
    --spectrum-slider-label-top-to-text: var(--spectrum-component-top-to-text-75);
    --spectrum-slider-control-to-field-label: var(--spectrum-slider-control-to-field-label-small);
    --spectrum-slider-value-side-padding-inline: var(--spectrum-spacing-100);
}

.spectrum-Slider--sizeL {
    --spectrum-slider-font-size: var(--spectrum-font-size-100);
    --spectrum-slider-handle-size: var(--spectrum-slider-handle-size-large);
    --spectrum-slider-control-height: var(--spectrum-component-height-200);
    --spectrum-slider-handle-border-radius: calc(var(--spectrum-corner-radius-200) * 4);
    --spectrum-slider-handle-border-width-down: var(--spectrum-slider-handle-border-width-down-large);
    --spectrum-slider-label-top-to-text: var(--spectrum-component-top-to-text-100);
    --spectrum-slider-control-to-field-label: var(--spectrum-slider-control-to-field-label-large);
    --spectrum-slider-value-side-padding-inline: var(--spectrum-spacing-200);

    /* TODO: placeholder value for sideLabel variant value width */
    --spectrum-slider-value-inline-size: 18px;
}

.spectrum-Slider--sizeXL {
    --spectrum-slider-font-size: var(--spectrum-font-size-200);
    --spectrum-slider-handle-size: var(--spectrum-slider-handle-size-extra-large);
    --spectrum-slider-control-height: var(--spectrum-component-height-300);
    --spectrum-slider-handle-border-radius: calc(var(--spectrum-corner-radius-200) * 4);
    --spectrum-slider-handle-border-width-down: var(--spectrum-slider-handle-border-width-down-extra-large);
    --spectrum-slider-label-top-to-text: var(--spectrum-component-top-to-text-200);
    --spectrum-slider-control-to-field-label: var(--spectrum-slider-control-to-field-label-extra-large);
    --spectrum-slider-value-side-padding-inline: var(--spectrum-spacing-200);

    /* TODO: placeholder value for sideLabel variant value width */
    --spectrum-slider-value-inline-size: 22px;
}

.spectrum-Slider {
    --spectrum-slider-cjk-line-height: var(--spectrum-cjk-line-height-100);

    --spectrum-slider-min-size: var(--spectrum-spacing-900);

    --spectrum-slider-track-corner-radius: var(--spectrum-corner-radius-75);
    --spectrum-slider-label-margin-start: var(--spectrum-spacing-300);
    --spectrum-slider-handle-border-width: var(--spectrum-border-width-200);
    --spectrum-slider-handle-margin-left: calc(var(--spectrum-slider-handle-size) / -2);
    --spectrum-slider-controls-margin: calc(var(--spectrum-slider-handle-size) / 2);
    --spectrum-slider-track-margin-offset: calc(var(--spectrum-slider-controls-margin) * -1);
    --spectrum-slider-track-middle-handleoffset: calc(
        var(--spectrum-slider-handle-gap) + calc(var(--spectrum-slider-handle-size) / 2)
    );
    --spectrum-slider-input-top-size: calc(var(--spectrum-slider-handle-size) / -2 / 4);
    --spectrum-slider-track-fill-thickness: var(--spectrum-slider-track-thickness);
    --spectrum-slider-tick-mark-width: var(--spectrum-border-width-200);
    --spectrum-slider-tick-mark-border-radius: 2px;
    --spectrum-slider-tick-handle-background-color: var(--spectrum-gray-100);

    /* colors */
    --spectrum-slider-track-color-disabled: var(--spectrum-disabled-background-color);
    --spectrum-slider-track-fill-color-disabled: var(--spectrum-disabled-background-color);
    --spectrum-slider-handle-border-color-disabled: var(--spectrum-disabled-border-color);
    --spectrum-slider-label-text-color: var(--spectrum-neutral-content-color-default);
    --spectrum-slider-label-text-color-disabled: var(--spectrum-disabled-content-color);
    --spectrum-slider-tick-mark-color-disabled: var(--spectrum-disabled-background-color);
    --spectrum-slider-ramp-handle-border-color-active: var(--spectrum-gray-100);

    /* values */
    --spectrum-slider-input-left: calc(var(--spectrum-slider-handle-margin-left) / 4);
    --spectrum-slider-track-handleoffset: var(--spectrum-slider-handle-gap);

    --spectrum-slider-range-track-reset: 0;
}

.spectrum-Slider {
    user-select: none;

    position: relative;

    /* Don't let z-index'd child elements float above other things on the page */
    z-index: 1;

    display: block;

    min-inline-size: var(--mod-slider-min-size, var(--spectrum-slider-min-size));
}

.spectrum-Slider--sideLabel {
    display: flex;
    align-items: center;

    .spectrum-Slider-labelContainer {
        margin-block-start: 0;
    }

    .spectrum-Slider-labelContainer + .spectrum-Slider-controls {
        margin-block-start: 0;
    }

    .spectrum-Slider-controls {
        margin-inline-end: var(--mod-slider-controls-margin, var(--spectrum-slider-controls-margin));
    }

    .spectrum-Slider-value {
        inline-size: var(--mod-slider-value-inline-size, var(--spectrum-slider-value-inline-size));
        margin-inline-start: var(
            --mod-slider-value-side-padding-inline,
            var(--spectrum-slider-value-side-padding-inline)
        );
        text-align: start;
    }
}

.spectrum-Slider-controls {
    cursor: pointer;

    position: relative;
    z-index: auto;

    display: inline-block;

    box-sizing: border-box;

    /* These calculations prevent the track from spilling outside of the control */
    inline-size: calc(100% - calc(var(--mod-slider-controls-margin, var(--spectrum-slider-controls-margin))) * 2);
    block-size: var(--mod-slider-control-height, var(--spectrum-slider-control-height));
    margin-inline-start: var(--mod-slider-controls-margin, var(--spectrum-slider-controls-margin));

    vertical-align: top;
}

.spectrum-Slider-labelContainer + .spectrum-Slider-controls {
    margin-block-start: calc(-1 * var(--spectrum-slider-control-to-field-label));
}

/* TODO: Sliders with ticks + tick mark labels require more margin-block-end.
 As of February 2023 we do not have tokens yet tokens for Ramp and Tick variants,
 using control-height here instead.  */
.spectrum-Slider--tick {
    margin-block-end: var(--mod-slider-control-height, var(--spectrum-slider-control-height));
}

.spectrum-Slider-track,
.spectrum-Slider-fill {
    pointer-events: none;

    position: absolute;
    z-index: 1;
    inset-block-start: calc(
        var(--mod-slider-control-height, var(--spectrum-slider-control-height)) / 2 -
            var(--mod-slider-track-fill-thickness, var(--spectrum-slider-track-fill-thickness)) / 2
    );
    inset-inline-start: 0;
    inset-inline-end: auto;

    box-sizing: border-box;
    block-size: var(--mod-slider-track-fill-thickness, var(--spectrum-slider-track-fill-thickness));
    margin-inline-start: var(--mod-slider-track-margin-offset, var(--spectrum-slider-track-margin-offset));
    padding-block: 0;
    padding-inline-start: 0;
    padding-inline-end: var(--mod-slider-handle-gap, var(--spectrum-slider-handle-gap));

    &::before {
        content: "";

        display: block;

        block-size: 100%;

        /* reset all border radii */
        border-start-start-radius: 0;
        border-start-end-radius: 0;
        border-end-start-radius: 0;
        border-end-end-radius: 0;
    }
}

.spectrum-Slider-track {
    &:first-of-type {
        &::before {
            border-start-start-radius: var(
                --mod-slider-track-corner-radius,
                var(--spectrum-slider-track-corner-radius)
            );
            border-end-start-radius: var(--mod-slider-track-corner-radius, var(--spectrum-slider-track-corner-radius));
        }
    }

    &:last-of-type {
        &::before {
            border-start-end-radius: var(--mod-slider-track-corner-radius, var(--spectrum-slider-track-corner-radius));
            border-end-end-radius: var(--mod-slider-track-corner-radius, var(--spectrum-slider-track-corner-radius));
        }
    }
}

.spectrum-Slider-track ~ .spectrum-Slider-track {
    inset-inline-start: auto;
    inset-inline-end: var(--mod-slider-range-track-reset, var(--spectrum-slider-range-track-reset));

    margin-inline-start: var(--mod-slider-range-track-reset, var(--spectrum-slider-range-track-reset));
    margin-inline-end: var(--mod-slider-track-margin-offset, var(--spectrum-slider-track-margin-offset));
    padding-block: 0;
    padding-inline-start: var(--mod-slider-track-handleoffset, var(--spectrum-slider-track-handleoffset));
    padding-inline-end: 0;
}

/* over-write for Range, without the LTR RTL post-css hack */
.spectrum-Slider--range {
    .spectrum-Slider-track ~ .spectrum-Slider-track {
        inset-inline: auto;
        margin-inline: var(--mod-slider-range-track-reset, var(--spectrum-slider-range-track-reset));
        padding-inline: var(--mod-slider-track-middle-handleoffset, var(--spectrum-slider-track-middle-handleoffset))
            var(--mod-slider-track-middle-handleoffset, var(--spectrum-slider-track-middle-handleoffset));
    }
}

.spectrum-Slider-fill {
    margin-inline-start: 0;
    padding-block: 0;
    padding-inline-start: calc(
        var(--mod-slider-controls-margin, var(--spectrum-slider-controls-margin)) +
            var(--spectrum-slider-handle-gap, var(--spectrum-slider-handle-gap))
    );
    padding-inline-end: 0;
}

.spectrum-Slider-fill--right {
    padding-block: 0;
    padding-inline-start: 0;
    padding-inline-end: calc(
        var(--mod-slider-controls-margin, var(--spectrum-slider-controls-margin)) +
            var(--spectrum-slider-handle-gap, var(--spectrum-slider-handle-gap))
    );
}

.spectrum-Slider--range {
    .spectrum-Slider-value {
        user-select: text;
    }

    .spectrum-Slider-track {
        &:first-of-type {
            inset-inline-start: var(--mod-slider-range-track-reset, var(--spectrum-slider-range-track-reset));
            inset-inline-end: auto;

            margin-inline-start: var(--mod-slider-track-margin-offset, var(--spectrum-slider-track-margin-offset));
            padding-inline-start: 0;
            padding-inline-end: var(--mod-slider-track-handleoffset, var(--spectrum-slider-track-handleoffset));
        }

        &:first-of-type::before {
            border-start-start-radius: var(
                --mod-slider-track-corner-radius,
                var(--spectrum-slider-track-corner-radius)
            );
            border-end-start-radius: var(--mod-slider-track-corner-radius, var(--spectrum-slider-track-corner-radius));
        }

        &:last-of-type {
            inset-inline-start: auto;
            inset-inline-end: var(--mod-slider-range-track-reset, var(--spectrum-slider-range-track-reset));

            margin-inline-end: var(--mod-slider-track-margin-offset, var(--spectrum-slider-track-margin-offset));
            padding-inline-start: var(--spectrum-slider-track-handleoffset);
            padding-inline-end: 0;
        }

        &:last-of-type::before {
            border-start-end-radius: var(--mod-slider-track-corner-radius, var(--spectrum-slider-track-corner-radius));
            border-end-end-radius: var(--mod-slider-track-corner-radius, var(--spectrum-slider-track-corner-radius));
        }
    }
}

.spectrum-Slider-ramp {
    position: absolute;
    inset-inline-start: var(--spectrum-slider-track-margin-offset, var(--spectrum-slider-track-margin-offset));
    inset-inline-end: var(--spectrum-slider-track-margin-offset, var(--spectrum-slider-track-margin-offset));

    block-size: var(--mod-slider-ramp-track-height, var(--spectrum-slider-ramp-track-height));
    margin-block-start: calc(var(--mod-slider-ramp-track-height, var(--spectrum-slider-ramp-track-height)) / 2);

    svg {
        /* Flip the ramp automatically for RTL */
        /* stylelint-disable-next-line declaration-property-value-no-unknown */
        transform: logical rotate(0deg);
        inline-size: 100%;
        block-size: 100%;
    }
}

.spectrum-Slider-handle {
    position: absolute;
    z-index: 2;
    inset-block-start: calc(
        var(--mod-slider-control-height, var(--spectrum-slider-control-height)) / 2 -
            var(--mod-slider-handle-size, var(--spectrum-slider-handle-size)) / 2
    );
    inset-inline-start: 0;

    display: inline-block;

    box-sizing: border-box;
    inline-size: var(--mod-slider-handle-size, var(--spectrum-slider-handle-size));
    block-size: var(--mod-slider-handle-size, var(--spectrum-slider-handle-size));
    margin-block: 0;
    margin-inline: calc(var(--mod-slider-handle-size, var(--spectrum-slider-handle-size)) / -2) 0;

    border-style: solid;
    border-width: var(--mod-slider-handle-border-width, var(--spectrum-slider-handle-border-width));
    border-radius: var(--mod-slider-handle-border-radius, var(--spectrum-slider-handle-border-radius));
    outline: none;

    transition: border-width var(--mod-animation-duration-100, var(--spectrum-animation-duration-100)) ease-in-out;

    &::before {
        content: " ";

        position: absolute;
        inset-block-start: 50%;
        inset-inline-start: 50%;
        transform: translate(-50%, -50%);

        display: block;

        inline-size: var(--mod-slider-handle-size, var(--spectrum-slider-handle-size));
        block-size: var(--mod-slider-handle-size, var(--spectrum-slider-handle-size));

        border-radius: 100%;

        transition:
            box-shadow var(--mod-animation-duration-100, var(--spectrum-animation-duration-100)) ease-out,
            inline-size var(--mod-animation-duration-100, var(--spectrum-animation-duration-100)) ease-out,
            block-size var(--mod-animation-duration-100, var(--spectrum-animation-duration-100)) ease-out;
    }

    &:active,
    &.is-focused,
    &.is-dragged {
        border-width: var(--mod-slider-handle-border-width-down, var(--spectrum-slider-handle-border-width-down));
    }

    &:active,
    &.is-focused,
    &.is-dragged,
    &.is-tophandle {
        z-index: 3;
    }

    &.is-focused {
        &::before {
            inline-size: calc(
                var(--mod-slider-handle-size, var(--spectrum-slider-handle-size)) +
                    var(--mod-focus-indicator-gap, var(--spectrum-focus-indicator-gap)) * 2
            );
            block-size: calc(
                var(--mod-slider-handle-size, var(--spectrum-slider-handle-size)) +
                    var(--mod-focus-indicator-gap, var(--spectrum-focus-indicator-gap)) * 2
            );
        }
    }
}

.spectrum-Slider-input {
    pointer-events: none;
    cursor: default;

    position: absolute;
    inset-block-start: var(--mod-slider-input-top-size, var(--spectrum-slider-input-top-size));
    inset-inline-start: var(--mod-slider-input-left, var(--spectrum-slider-input-left));

    overflow: hidden;

    inline-size: var(--mod-slider-handle-size, var(--spectrum-slider-handle-size));
    block-size: var(--mod-slider-handle-size, var(--spectrum-slider-handle-size));

    /*  Remove the margin for input in Firefox and Safari. */
    margin: 0;
    padding: 0;

    appearance: none;
    opacity: 0.0001%; /* stylelint-disable-line number-max-precision */
    border: 0;

    &:focus {
        outline: none;
    }
}

.spectrum-Slider-labelContainer {
    position: relative;

    display: flex;
    align-items: center;

    inline-size: auto;
    margin-block-start: var(--mod-slider-label-top-to-text, var(--spectrum-slider-label-top-to-text));

    font-size: var(--mod-slider-font-size, var(--spectrum-slider-font-size));
    line-height: var(--mod-line-height-100, var(--spectrum-line-height-100));

    /* international support */
    &:lang(ja),
    &:lang(zh),
    &:lang(ko) {
        line-height: var(--mod-slider-cjk-line-height, var(--spectrum-slider-cjk-line-height));
    }
}

.spectrum-Slider-label {
    flex-grow: 1;
    padding-inline-start: 0;
    font-size: var(--mod-slider-font-size, var(--spectrum-slider-font-size));
}

.spectrum-Slider-value {
    cursor: default;

    flex-grow: 0;

    padding-inline-end: 0;

    font-feature-settings: "tnum";
    text-align: end;
}

.spectrum-Slider-value {
    margin-inline-start: var(--mod-slider-label-margin-start, var(--spectrum-slider-label-margin-start));
}

/* setting tick marks in relation to label */
.spectrum-Slider--tick {
    .spectrum-Slider-handle {
        background-color: var(
            --highcontrast-slider-tick-handle-background-color,
            var(--mod-slider-tick-handle-background-color, var(--spectrum-slider-tick-handle-background-color))
        );
    }

    .spectrum-Slider-controls {
        margin-block-start: calc(
            var(--spectrum-text-to-visual-75) -
                var(--mod-slider-tick-mark-height, var(--spectrum-slider-tick-mark-height)) / 2 -
                var(--mod-slider-track-thickness, var(--spectrum-slider-track-thickness)) / 2
        );
    }

    .spectrum-Slider-tickLabel {
        margin-block-start: calc(
            var(--mod-slider-tick-mark-height, var(--spectrum-slider-tick-mark-height)) +
                var(--spectrum-text-to-visual-75)
        );
    }
}

/* TODO: missing core-tokens for tick variant */
.spectrum-Slider-ticks {
    z-index: 0;
    display: flex;
    justify-content: space-between;
    margin-inline: var(--mod-slider-track-margin-offset, var(--spectrum-slider-track-margin-offset));

    /* TODO: missing core-token for handle fill-color */
    & ~ .spectrum-Slider-handleContainer {
        .spectrum-Slider-handle {
            background: var(
                --mod-slider-ticks-handle-background-color,
                var(--spectrum-slider-ticks-handle-background-color)
            );
        }
    }
}

.spectrum-Slider-tick {
    position: relative;

    /* tick marks are centered half based on slider control height and tick height  */
    inset-block-start: calc(
        var(--mod-slider-track-thickness, var(--spectrum-slider-control-height)) / 2 -
            var(--mod-slider-tick-mark-height, var(--spectrum-slider-tick-mark-height)) / 2
    );
    inline-size: var(--mod-slider-tick-mark-width, var(--spectrum-slider-tick-mark-width));

    &::after {
        content: "";

        position: absolute;
        inset-block-start: 0;
        inset-inline-start: calc(
            50% - calc(var(--mod-slider-tick-mark-width, var(--spectrum-slider-tick-mark-width)) / 2)
        );

        display: block;

        inline-size: var(--mod-slider-tick-mark-width, var(--spectrum-slider-tick-mark-width));
        block-size: var(--mod-slider-tick-mark-height, var(--spectrum-slider-tick-mark-height));

        border-radius: var(--mod-slider-tick-mark-border-radius, var(--spectrum-slider-tick-mark-border-radius));
    }

    .spectrum-Slider-tickLabel {
        display: flex;
        align-items: center;
        justify-content: center;

        font-size: var(--mod-font-size-75, var(--spectrum-font-size-75));
        line-height: var(--mod-line-height-100, var(--spectrum-line-height-100));
    }

    &:first-of-type,
    &:last-of-type {
        .spectrum-Slider-tickLabel {
            position: absolute;
            display: block;
            margin-inline: 0;
        }
    }

    &:first-of-type {
        /* fix off-by-one alignment */
        inset-inline-start: calc(var(--mod-slider-tick-mark-width, var(--spectrum-slider-tick-mark-width)) / - 2);

        .spectrum-Slider-tickLabel {
            inset-inline-start: 0;
        }
    }

    &:last-of-type {
        /* fix off-by-one alignment */
        inset-inline-end: calc(var(--mod-slider-tick-mark-width, var(--spectrum-slider-tick-mark-width)) / - 2);

        .spectrum-Slider-tickLabel {
            inset-inline-end: 0;
        }
    }
}

.spectrum-Slider {
    &.is-disabled {
        cursor: default;

        .spectrum-Slider-handle {
            pointer-events: none;
            cursor: default;
        }

        .spectrum-Slider-tickLabel {
            color: var(
                --highcontrast-slider-label-text-color-disabled,
                var(--mod-slider-label-text-color-disabled, var(--spectrum-slider-label-text-color-disabled))
            );
        }
    }
}

/* backwards compatibility: these are not required, but they make the handle go to the edegs and align right */
.spectrum-Slider-handleContainer,
.spectrum-Slider-trackContainer {
    position: absolute;
    inset-block-start: 0;
    inline-size: calc(100% + var(--spectrum-slider-handle-size));
    margin-inline-start: calc(var(--spectrum-slider-handle-size) / 2 * -1);
}

.spectrum-Slider-trackContainer {
    /* stop edges from peeking out */
    overflow: hidden;
    block-size: var(--mod-slider-control-height, var(--spectrum-slider-control-height));
}

.spectrum-Slider-track {
    &::before {
        background: var(
            --highcontrast-slider-track-color,
            var(--mod-slider-track-color, var(--spectrum-slider-track-color))
        );
    }
}

.spectrum-Slider-labelContainer {
    color: var(
        --highcontrast-slider-label-text-color,
        var(--mod-slider-label-text-color, var(--spectrum-slider-label-text-color))
    );
}

.spectrum-Slider--filled {
    .spectrum-Slider-track:first-child {
        &::before {
            background: var(
                --highcontrast-slider-track-fill-color,
                var(--mod-slider-track-fill-color, var(--spectrum-slider-track-fill-color))
            );
        }
    }
}

.spectrum-Slider-fill {
    &::before {
        background: var(
            --highcontrast-slider-track-fill-color,
            var(--mod-slider-track-fill-color, var(--spectrum-slider-track-fill-color))
        );
    }
}

.spectrum-Slider-ramp {
    path {
        fill: var(
            --highcontrast-slider-ramp-track-color,
            var(--mod-slider-ramp-track-color, var(--spectrum-slider-ramp-track-color))
        );
    }
}

.spectrum-Slider-handle {
    background: var(
        --highcontrast-slider-handle-background-color,
        var(--mod-slider-handle-background-color, var(--spectrum-slider-handle-background-color))
    );
    border-color: var(
        --highcontrast-slider-handle-border-color,
        var(--mod-slider-handle-border-color, var(--spectrum-slider-handle-border-color))
    );

    &:hover {
        border-color: var(
            --highcontrast-slider-handle-border-color-hover,
            var(--mod-slider-handle-border-color-hover, var(--spectrum-slider-handle-border-color-hover))
        );
    }

    &.is-focused {
        border-color: var(
            --highcontrast-slider-handle-border-color-key-focus,
            var(--mod-slider-handle-border-color-key-focus, var(--spectrum-slider-handle-border-color-key-focus))
        );

        &::before {
            box-shadow: 0 0 0 var(--spectrum-focus-indicator-thickness)
                var(
                    --highcontrast-slider-handle-focus-ring-color-key-focus,
                    var(
                        --mod-slider-handle-focus-ring-color-key-focus,
                        var(--spectrum-slider-handle-focus-ring-color-key-focus)
                    )
                );
        }
    }

    &:active,
    &.is-dragged {
        border-color: var(
            --highcontrast-slider-handle-border-color-down,
            var(--mod-slider-handle-border-color-down, var(--spectrum-slider-handle-border-color-down))
        );
    }
}

.spectrum-Slider--ramp {
    .spectrum-Slider-handle {
        background: var(--mod-slider-ramp-handle-background-color, var(--spectrum-slider-ramp-handle-background-color));
        box-shadow: 0 0 0 var(--spectrum-slider-handle-gap)
            var(
                --highcontrast-slider-ramp-handle-border-color-active,
                var(
                    --mod-sectrum-slider-ramp-handle-border-color-active,
                    var(--spectrum-slider-ramp-handle-border-color-active)
                )
            );

        @media (forced-colors: active) {
            /* forced-color-adjust required to ensure the "circle" around the handle is transparent */
            forced-color-adjust: none;
            background-color: ButtonFace;
            border-color: ButtonText;
            box-shadow: 0 0 0 var(--spectrum-slider-handle-gap) ButtonFace;
        }
    }
}

.spectrum-Slider-input {
    background: transparent;
}

.spectrum-Slider-tick {
    &::after {
        background-color: var(
            --highcontrast-slider-tick-mark-color,
            var(--mod-slider-tick-mark-color, var(--spectrum-slider-tick-mark-color))
        );
    }
}

.spectrum-Slider-handle {
    &.is-dragged {
        background: var(
            --highcontrast-slider-handle-background-color,
            var(--mod-slider-handle-background-color, var(--spectrum-slider-handle-background-color))
        );
        border-color: var(
            --highcontrast-slider-handle-border-color-down,
            var(--mod-slider-handle-border-color-down, var(--spectrum-slider-handle-border-color-down))
        );
    }
}

.spectrum-Slider--range {
    .spectrum-Slider-track {
        &:not(:first-of-type, :last-of-type)::before {
            background: var(
                --highcontrast-slider-track-fill-color,
                var(--mod-slider-track-fill-color, var(--spectrum-slider-track-fill-color))
            );
        }
    }
}

.spectrum-Slider.is-disabled {
    .spectrum-Slider-labelContainer {
        color: var(
            --highcontrast-slider-label-text-color-disabled,
            var(--mod-slider-label-text-color-disabled, var(--spectrum-slider-label-text-color-disabled))
        );
    }

    .spectrum-Slider-handle {
        background: var(
            --highcontrast-slider-handle-disabled-background-color,
            var(--mod-slider-handle-disabled-background-color, var(--spectrum-slider-handle-disabled-background-color))
        );
        border-color: var(
            --highcontrast-slider-handle-border-color-disabled,
            var(--mod-slider-handle-border-color-disabled, var(--spectrum-slider-handle-border-color-disabled))
        );

        &:hover,
        &:active {
            background: var(
                --highcontrast-slider-handle-background-color-disabled,
                var(
                    --mod-slider-handle-background-color-disabled,
                    var(--spectrum-slider-handle-background-color-disabled)
                )
            );
            border-color: var(
                --highcontrast-disabled-border-color,
                var(--mod-disabled-border-color, var(--spectrum-disabled-border-color))
            );
        }
    }

    .spectrum-Slider-track {
        &::before {
            background: var(
                --highcontrast-slider-track-color-disabled,
                var(--mod-slider-track-color-disabled, var(--spectrum-slider-track-color-disabled))
            );
        }
    }

    &.spectrum-Slider--filled {
        .spectrum-Slider-track:first-child::before {
            background: var(
                --highcontrast-slider-track-fill-color-disabled,
                var(--mod-slider-track-fill-color-disabled, var(--spectrum-slider-track-fill-color-disabled))
            );
        }
    }

    .spectrum-Slider-fill {
        &::before {
            background: var(
                --highcontrast-slider-track-fill-color-disabled,
                var(--mod-slider-track-fill-color-disabled, var(--spectrum-slider-track-fill-color-disabled))
            );
        }
    }

    .spectrum-Slider-ramp {
        path {
            fill: var(
                --highcontrast-slider-ramp-track-color-disabled,
                var(--mod-slider-ramp-track-color-disabled, var(--spectrum-slider-ramp-track-color-disabled))
            );
        }
    }

    .spectrum-Slider-tick {
        &::after {
            background-color: var(
                --highcontrast-slider-tick-mark-color-disabled,
                var(--mod-slider-tick-mark-color-disabled, var(--spectrum-slider-tick-mark-color-disabled))
            );
        }
    }

    &.spectrum-Slider--range {
        .spectrum-Slider-track:not(:first-of-type, :last-of-type)::before {
            background: var(
                --highcontrast-slider-track-color-disabled,
                var(--mod-slider-track-color-disabled, var(--spectrum-slider-track-color-disabled))
            );
        }
    }
}

@media (forced-colors: active) {
    .spectrum-Slider {
        /*  over-writes */
        --highcontrast-slider-track-color: ButtonText;
        --highcontrast-slider-track-fill-color: ButtonText;
        --highcontrast-slider-ramp-track-color: ButtonText;
        --highcontrast-slider-ramp-track-color-disabled: GrayText;
        --highcontrast-slider-tick-mark-color: ButtonText;

        --spectrum-slider-track-color: ButtonText;
        --spectrum-slider-track-fill-color: ButtonText;
        --spectrum-slider-ramp-track-color: ButtonText;
        --spectrum-slider-ramp-track-color-disabled: GrayText;

        --spectrum-slider-handle-background-color: ButtonFace;
        --spectrum-slider-handle-background-color-disabled: GrayText;
        --spectrum-slider-handle-border-color: ButtonText;
        --spectrum-slider-handle-disabled-background-color: GrayText;

        --spectrum-slider-tick-mark-color: ButtonText;
        --spectrum-slider-tick-mark-color-disabled: GrayText;

        --spectrum-slider-handle-border-color-hover: Highlight;
        --spectrum-slider-handle-border-color-down: Highlight;
        --spectrum-slider-handle-border-color-key-focus: Highlight;
        --spectrum-slider-handle-focus-ring-color-key-focus: Highlight;

        --spectrum-slider-track-color-disabled: GrayText;
        --spectrum-slider-track-fill-color-disabled: GrayText;

        --spectrum-slider-handle-border-color-disabled: GrayText;

        --spectrum-slider-label-text-color: CanvasText;
        --spectrum-slider-label-text-color-disabled: GrayText;

        --spectrum-slider-ramp-handle-border-color-active: ButtonText;
    }

    /* Slider handle turns transparent in high contrast mode for ramp */
    .spectrum-Slider.is-disabled {
        .spectrum-Slider-ramp + .spectrum-Slider-handle {
            background-color: ButtonFace;
            fill: ButtonFace;
        }
    }
}
