/*
Copyright 2022 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

/* @import '../overlay/index.css'; */
 /* @import "../vars/css/components/spectrum-overlay.css"; - does not work, not in vars */
/* @spectrum-css/overlay */

.spectrum-Popover {
  --spectrum-popover-corner-radius: var(--spectrum-corner-radius-100);

  --spectrum-popover-pointer-width: var(--spectrum-popover-tip-width);
  --spectrum-popover-pointer-height: var(--spectrum-popover-tip-height);

   /* TODO - missing token - default pointer spacing from edge - same as corner radius */
   /* change this token to be 1/2 of source width to center pointer over source */
  --spectrum-popover-pointer-edge-offset: var(--spectrum-corner-radius-100);

  --spectrum-popover-spacing-vertical: var(--spectrum-popover-top-to-content-area);
  --spectrum-popover-spacing-to-source: var(--spectrum-spacing-100);
  --spectrum-popover-spacing-container: var(--spectrum-spacing-100);

  --spectrum-popover-background-color: var(--spectrum-background-layer-2-color);

    /* border width token missing from redline components XD specs - resolves to 1px */
  --spectrum-popover-border-width: var(--spectrum-border-width-100);
  --spectrum-popover-border-color: var(--spectrum-gray-400);

  --spectrum-popover-shadow-horizontal: var(--spectrum-drop-shadow-x);
  --spectrum-popover-shadow-vertical: var(--spectrum-drop-shadow-y);
  --spectrum-popover-shadow-blur: var(--spectrum-drop-shadow-blur);
  --spectrum-popover-shadow-color: var(--spectrum-drop-shadow-color);
}

/* dev notes - remove before shipping */
.spectrum-Popover {
  border: 1px dashed gray;
}

.spectrum-Popover-content {

}


/* outer container to control spacing around component */
.spectrum-Popover {
  /* TODO - resolve missing overlay dependency */
   /* @inherit: %spectrum-overlay; */

  /* TODO - resolve missing tokens */
  /* min-width: var(--spectrum-popover-min-width);
  min-height: var(--spectrum-popover-min-height); */

  box-sizing: border-box;
  position: absolute;

  /* default spacing outside content container */
  padding: var(--spectrum-popover-spacing-container);

  outline: none; /* Hide focus outline */

  /* TODO - add general open animation */
  &.is-open {
    /* @inherit: %spectrum-overlay--open; */
  }

  /* inner content container with border and background styles */
  .spectrum-Popover-content {
    padding: var(--spectrum-popover-spacing-vertical) 0;

    position: relative;

    display: inline-flex;
    flex-direction: column;

    border-style: solid;
    border-radius: var(--spectrum-popover-corner-radius);
    border-color: var(--spectrum-popover-border-color);
    border-width: var(--spectrum-popover-border-width);

    background-color: var(--spectrum-popover-background-color);

    box-shadow: var(--spectrum-popover-shadow-horizontal) var(--spectrum-popover-shadow-vertical) var(--spectrum-popover-shadow-blur) var(--spectrum-popover-shadow-color);
  }

  /* has tip triangle */
  &.spectrum-Popover--withTip {
    /* add tip height to spacing to source */
    padding-bottom: calc(var(--spectrum-popover-pointer-height) + var(--spectrum-popover-spacing-to-source));
    padding-top: var(--spectrum-popover-spacing-container);

    .spectrum-Popover-content {

     /* tip triangle defaults to pointing down */
      &::before,
      &::after {
        content: "";
        position: absolute;
        height: var(--spectrum-popover-pointer-height);
        width: var(--spectrum-popover-pointer-width);
        margin: auto;
        left: 0;
        right: 0;
        top: 100%;
        clip-path: polygon(0 0, 50% 100%, 100% 0);
      }

      /* before element is triangle border */
      &::before {
        background: var(--spectrum-popover-border-color);
      }

      /* after element is the triangle fill with offset to show the border */
      &::after {
        background: var(--spectrum-popover-background-color);
        /* move fill up by 150% of border width - percentage matches 2:1 triangle ratio */
        top: calc(100% - (var(--spectrum-popover-border-width) * 1.5));
      }
    }
  }
}

/* popover is top of source with tip pointing down - default placement */
.spectrum-Popover--top, /* visual provided */
.spectrum-Popover--top-left,
.spectrum-Popover--top-right,
.spectrum-Popover--top-start, /* visual provided */
.spectrum-Popover--top-end {
  /* default spacing outside content container */
  padding: var(--spectrum-popover-spacing-container);

  /* TODO - import overlay - animate opening upward */
  &.is-open {
    /* @inherit: %spectrum-overlay--top--open; */
  }

  &.spectrum-Popover--withTip {
    /* add tip height to spacing to source */
    padding-bottom: calc(var(--spectrum-popover-pointer-height) + var(--spectrum-popover-spacing-to-source));
    padding-top: var(--spectrum-popover-spacing-container);
  }
}

.spectrum-Popover--top-left {

  &.spectrum-Popover--withTip {

    .spectrum-Popover-content {
      /* tip triangle  */
      &::before,
      &::after {
        left: auto;
        right: var(--spectrum-popover-pointer-edge-offset);
      }
    }
  }
}

.spectrum-Popover--top-right {

  &.spectrum-Popover--withTip {

    .spectrum-Popover-content {
      /* tip triangle  */
      &::before,
      &::after {
        right: auto;
        left: var(--spectrum-popover-pointer-edge-offset);
      }
    }
  }
}



/* popover is top and left of source */
.spectrum-Popover--top-left {

  &.spectrum-Popover--withTip {
    .spectrum-Popover-content {
      /* tip triangle  */
      &::before,
      &::after {
      }
    }
  }
}


/* popover is top and right of source */
.spectrum-Popover--top-right {
  /* placeholder */
}

/* TODO - additional placements for logical properties */
.spectrum-Popover--top-start {
  /* placeholder */
}

/* TODO - additional placements for logical properties */
.spectrum-Popover--top-end {
  /* placeholder */
}

/* bottom popover with tip pointing up */
.spectrum-Popover--bottom, /* visual provided */
.spectrum-Popover--bottom-left,
.spectrum-Popover--bottom-right,
.spectrum-Popover--bottom-start, /* visual provided */
.spectrum-Popover--bottom-end /* visual provided */ {
  /* default spacing outside content container */
  padding: var(--spectrum-popover-spacing-container);

  /* has tip triangle */
  &.spectrum-Popover--withTip {
    /* add tip height to spacing to source */
    padding-top: calc(var(--spectrum-popover-pointer-height) + var(--spectrum-popover-spacing-to-source));
    padding-bottom: var(--spectrum-popover-spacing-container);
  }

  /* TODO - import overlay - animate opening downward */
  &.is-open {
    /* @inherit: %spectrum-overlay--bottom--open; */
  }

}

/* popover is bottom and left of source */
.spectrum-Popover--bottom-left {
  /* placeholder */
}

/* popover is bottom and right of source */
.spectrum-Popover--bottom-right {
  /* placeholder */
}

/* TODO - additional placements for logical properties */
.spectrum-Popover--bottom-start {
  /* placeholder */
}

/* TODO - additional placements for logical properties */
.spectrum-Popover--bottom-end {
  /* placeholder */
}


/* left popover with tip pointing right */
.spectrum-Popover--left,
.spectrum-Popover--left-bottom, /* visual provided */
.spectrum-Popover--left-top {
  /* default spacing outside content container */
  padding: var(--spectrum-popover-spacing-container);

  /* has tip triangle */
  &.spectrum-Popover--withTip {
    /* add tip height to spacing to source */
    padding-right: calc(var(--spectrum-popover-pointer-height) + var(--spectrum-popover-spacing-to-source));
    padding-left: var(--spectrum-popover-spacing-container);
  }

  /* TODO - import overlay - animate opening to left */
  &.is-open {
    /* @inherit: %spectrum-overlay--left--open; */
  }
}

.spectrum-Popover--left-top {
  /* placeholder */
}

.spectrum-Popover--left-bottom {
  /* placeholder */
}

/* right popover with tip pointing left */
.spectrum-Popover--right,
.spectrum-Popover--right-bottom,
.spectrum-Popover--right-top /* visual provided */ {
  /* default spacing outside content container */
  padding: var(--spectrum-popover-spacing-container);

  /* has tip triangle */
  &.spectrum-Popover--withTip {
    /* add tip height to spacing to source */
    padding-left: calc(var(--spectrum-popover-pointer-height) + var(--spectrum-popover-spacing-to-source));
    padding-right: var(--spectrum-popover-spacing-container);
  }

  /* TODO - import overlay - animate opening to right */
  &.is-open {
    /* @inherit: %spectrum-overlay--right--open; */
  }
}

.spectrum-Popover--right-top {
  /* placeholder */
}

.spectrum-Popover--right-bottom {
  /* placeholder */
}

/* TODO - additional placements for logical properties */
.spectrum-Popover--start,
.spectrum-Popover--start-top,
.spectrum-Popover--start-bottom,

.spectrum-Popover--end,
.spectrum-Popover--end-top,
.spectrum-Popover--end-bottom {
  /* TODO - placeholder */
}
