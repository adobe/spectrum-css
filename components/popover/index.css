/*!
 * Copyright 2025 Adobe. All rights reserved.
 *
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at <http://www.apache.org/licenses/LICENSE-2.0>
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */

.spectrum-Popover {
	/* animation distance is equal to and responsible for popover offset ("spacing" tip to source) */
	--spectrum-popover-animation-distance: var(--spectrum-spacing-100);

	--spectrum-popover-background-color: var(--spectrum-background-layer-2-color);
	--spectrum-popover-border-width: var(--spectrum-border-width-100);

	/* TODO: Cannot use popover-border-color token until the value no longer has the rgba() function alpha/opacity. We should be able to refactor instances of `--spectrum-popover-border-color-rgb` with `--spectrum-popover-border-color` once this is available. */
	/* --spectrum-popover-border-color-default: var(--spectrum-popover-border-color); */
	--spectrum-popover-border-color-rgb: var(--spectrum-gray-200-rgb);
	--spectrum-popover-border-transparency: var(--spectrum-popover-border-opacity);
	--spectrum-popover-border-color-with-transparency: rgb(var(--spectrum-popover-border-color-rgb), var(--spectrum-popover-border-transparency));

	/* popover inner padding */
	--spectrum-popover-content-area-spacing: var(--spectrum-popover-edge-to-content-area);

	/* popover drop shadow */
	--spectrum-popover-drop-shadow-x: var(--spectrum-drop-shadow-elevated-x);
	--spectrum-popover-drop-shadow-y: var(--spectrum-drop-shadow-elevated-y);
	--spectrum-popover-drop-shadow-blur: var(--spectrum-drop-shadow-elevated-blur);
	--spectrum-popover-drop-shadow-color: var(--spectrum-drop-shadow-elevated-color);

	/* popover corner radius */
	--spectrum-popover-corner-radius: var(--spectrum-corner-radius-large-default);

	/* pointer tip dimensions */
	--spectrum-popover-pointer-width: var(--spectrum-popover-tip-width);
	--spectrum-popover-pointer-height: var(--spectrum-popover-tip-height);

	/* pointer tip - default spacing to edge - corner radius plus half of tip width to neutralize override */
	--spectrum-popover-pointer-edge-offset: calc(var(--spectrum-popover-corner-radius) + (var(--spectrum-popover-tip-width) / 2));

	/* pointer tip - spacing to edge will center pointer to source - apply in markup by setting '--spectrum-popover-pointer-edge-offset' value == half of source */
	--spectrum-popover-pointer-edge-spacing: calc(var(--spectrum-popover-pointer-edge-offset) - (var(--spectrum-popover-tip-width) / 2));
}

.spectrum-Popover {
	/* filter is for popovers with a tip. we divide the blur by 2 to match the box-shadow rendering better. */
	--spectrum-popover-filter: drop-shadow(var(--mod-popover-drop-shadow-x, var(--spectrum-popover-drop-shadow-x)) var(--mod-popover-drop-shadow-y, var(--spectrum-popover-drop-shadow-y)) calc(var(--mod-popover-drop-shadow-blur, var(--spectrum-popover-drop-shadow-blur)) / 2) var(--mod-popover-drop-shadow-color, var(--spectrum-popover-drop-shadow-color)));

	/* box-shadow is for popovers without a tip. */
	--spectrum-popover-box-shadow: var(--mod-popover-drop-shadow-x, var(--spectrum-popover-drop-shadow-x)) var(--mod-popover-drop-shadow-y, var(--spectrum-popover-drop-shadow-y)) var(--mod-popover-drop-shadow-blur, var(--spectrum-popover-drop-shadow-blur)) var(--mod-popover-drop-shadow-color, var(--spectrum-popover-drop-shadow-color));

	pointer-events: none;
	visibility: hidden;
	opacity: 0;
	transition:
		transform var(--mod-overlay-animation-duration, var(--spectrum-animation-duration-100, 130ms)) ease-in-out,
		opacity var(--mod-overlay-animation-duration, var(--spectrum-animation-duration-100, 130ms)) ease-in-out,
		visibility 0ms linear var(--mod-overlay-animation-duration, var(--spectrum-animation-duration-100, 130ms));

	box-sizing: border-box;
	position: absolute;

	outline: none; /* Hide focus outline */

	padding: var(--mod-popover-content-area-spacing, var(--spectrum-popover-content-area-spacing));

	display: inline-flex;
	flex-direction: column;

	border-style: solid;
	border-radius: var(--mod-popover-corner-radius, var(--spectrum-popover-corner-radius));
	border-color: var(--highcontrast-popover-border-color, var(--mod-popover-border-color, var(--spectrum-popover-border-color-with-transparency)));

	border-width: var(--mod-popover-border-width, var(--spectrum-popover-border-width));

	background-color: var(--mod-popover-background-color, var(--spectrum-popover-background-color));
	box-shadow: var(--mod-popover-box-shadow, var(--spectrum-popover-box-shadow));

	/* has tip triangle */
	&.spectrum-Popover--withTip {
		/* Prevents clipping of the tip */
		overflow: visible;
		filter: var(--mod-popover-filter, var(--spectrum-popover-filter));
		box-shadow: none;

		.spectrum-Popover-tip {
			/* triangle polygon */
			.spectrum-Popover-tip-triangle {
				stroke-linecap: square;
				stroke-linejoin: miter;
				fill: var(--mod-popover-background-color, var(--spectrum-popover-background-color));
				stroke: var(--highcontrast-popover-border-color, var(--mod-popover-border-color, var(--spectrum-popover-border-color-with-transparency)));
				stroke-width: var(--mod-popover-border-width, var(--spectrum-popover-border-width));
			}
		}
	}
}

/* default opens and animates upward */
.spectrum-Popover.is-open {
	pointer-events: auto;
	visibility: visible;
	opacity: 1;
	transition-delay: var(--mod-overlay-animation-duration-opened, var(--spectrum-animation-duration-0, 0ms));
}

@starting-style {
	.spectrum-Popover.is-open {
		visibility: hidden;
		opacity: 0;
		transform: translateY(0) translateZ(0);
	}
}

/* position naming - first position term is popover position, second term is source position */
/* example: --top-left = popover is to top and source is to left */

/* popover position is at top of source - default placement */
.spectrum-Popover--top,
.spectrum-Popover--top-left,
.spectrum-Popover--top-right,
.spectrum-Popover--top-start,
.spectrum-Popover--top-end {
	/* spacing to include tip in calculation of offset from source */
	&.spectrum-Popover--withTip {
		/* tip size minus where it overlaps with popover border */
		margin-block-end: calc(var(--mod-popover-pointer-height, var(--spectrum-popover-pointer-height)) - var(--mod-popover-border-width, var(--spectrum-popover-border-width)));
	}

	/* popover animates upward ⬆ */
	&.is-open {
		/* TranslateZ is Safari fix to prevent clipping of filter dropshadow and accelerate the element to GPU layer */
		transform: translateY(calc(-1 * var(--mod-popover-animation-distance, var(--spectrum-popover-animation-distance)))) translateZ(0);
	}
}

/* popover position is at bottom of source */
.spectrum-Popover--bottom,
.spectrum-Popover--bottom-left,
.spectrum-Popover--bottom-right,
.spectrum-Popover--bottom-start,
.spectrum-Popover--bottom-end {
	/* spacing to include tip in calculation of offset from source */
	&.spectrum-Popover--withTip {
		/* tip size minus where it overlaps with popover border */
		margin-block-start: calc(var(--mod-popover-pointer-height, var(--spectrum-popover-pointer-height)) - var(--mod-popover-border-width, var(--spectrum-popover-border-width)));
	}

	/* popover animates downward ⬇ */
	&.is-open {
		/* TranslateZ is Safari fix to prevent clipping of filter dropshadow and accelerate the element to GPU layer */
		transform: translateY(var(--mod-popover-animation-distance, var(--spectrum-popover-animation-distance))) translateZ(0);
	}
}

/* popover position is right of source */
.spectrum-Popover--right,
.spectrum-Popover--right-bottom,
.spectrum-Popover--right-top {
	/* spacing to include tip in calculation of offset from source */
	&.spectrum-Popover--withTip {
		/* tip size minus where it overlaps with popover border */
		/* stylelint-disable-next-line csstools/use-logical -- intentional, right stays on the same side even for RTL */
		margin-left: calc(var(--mod-popover-pointer-height, var(--spectrum-popover-pointer-height)) - var(--mod-popover-border-width, var(--spectrum-popover-border-width)));
	}

	/* popover animates towards right ⮕ */
	&.is-open {
		/* TranslateZ is Safari fix to prevent clipping of filter dropshadow and accelerate the element to GPU layer */
		transform: translateX(var(--mod-popover-animation-distance, var(--spectrum-popover-animation-distance))) translateZ(0);
	}
}

/* popover position is left of source */
.spectrum-Popover--left,
.spectrum-Popover--left-bottom,
.spectrum-Popover--left-top {
	/* spacing to include tip in calculation of offset from source */
	&.spectrum-Popover--withTip {
		/* tip size minus where it overlaps with popover border */
		/* stylelint-disable-next-line csstools/use-logical -- intentional, left stays on the same side even for RTL */
		margin-right: calc(var(--mod-popover-pointer-height, var(--spectrum-popover-pointer-height)) - var(--mod-popover-border-width, var(--spectrum-popover-border-width)));
	}

	/* popover animates towards left ⬅ */
	&.is-open {
		/* TranslateZ is Safari fix to prevent clipping of filter dropshadow and accelerate the element to GPU layer */
		transform: translateX(calc(-1 * var(--mod-popover-animation-distance, var(--spectrum-popover-animation-distance)))) translateZ(0);
	}
}

/* logical property - popover is horizontally at start */
.spectrum-Popover--start,
.spectrum-Popover--start-top,
.spectrum-Popover--start-bottom {
	/* spacing to include tip in calculation of offset from source */
	&.spectrum-Popover--withTip {
		/* tip size minus where it overlaps with popover border */
		margin-inline-end: calc(var(--mod-popover-pointer-height, var(--spectrum-popover-pointer-height)) - var(--mod-popover-border-width, var(--spectrum-popover-border-width)));
	}

	/* LTR read, popover animates towards left ⬅ */
	&.is-open {
		/* TranslateZ is Safari fix to prevent clipping of filter dropshadow and accelerate the element to GPU layer */
		transform: translateX(calc(-1 * var(--mod-popover-animation-distance, var(--spectrum-popover-animation-distance)))) translateZ(0);
	}

	/* RTL read, popover animates towards right ⮕ */
	&.is-open:dir(rtl) {
		transform: translateX(var(--mod-popover-animation-distance, var(--spectrum-popover-animation-distance))) translateZ(0);
	}
}

/* logical property - popover is horizontally at end */
.spectrum-Popover--end,
.spectrum-Popover--end-top,
.spectrum-Popover--end-bottom {
	/* spacing to include tip in calculation of offset from source */
	&.spectrum-Popover--withTip {
		/* tip size minus where it overlaps with popover border */
		margin-inline-start: calc(var(--mod-popover-pointer-height, var(--spectrum-popover-pointer-height)) - var(--mod-popover-border-width, var(--spectrum-popover-border-width)));
	}

	/* LTR read, popover animates towards right ⮕ */
	&.is-open {
		/* TranslateZ is Safari fix to prevent clipping of filter dropshadow and accelerate the element to GPU layer */
		transform: translateX(var(--mod-popover-animation-distance, var(--spectrum-popover-animation-distance))) translateZ(0);
	}

	/* RTL read, popover animates towards left ⬅ */
	&:dir(rtl) {
		&.is-open {
			/* TranslateZ is Safari fix to prevent clipping of filter dropshadow and accelerate the element to GPU layer */
			transform: translateX(calc(-1 * var(--mod-popover-animation-distance, var(--spectrum-popover-animation-distance)))) translateZ(0);
		}
	}
}

/* HAS TIP - popover with triangle pointer */
/* default, top, and bottom position tip - tip defaults to pointing down ▽ */
.spectrum-Popover--withTip {
	&.spectrum-Popover,
	&.spectrum-Popover--top,
	&.spectrum-Popover--top-left,
	&.spectrum-Popover--top-right,
	&.spectrum-Popover--top-start,
	&.spectrum-Popover--top-end,
	&.spectrum-Popover--bottom,
	&.spectrum-Popover--bottom-left,
	&.spectrum-Popover--bottom-right,
	&.spectrum-Popover--bottom-start,
	&.spectrum-Popover--bottom-end {
		.spectrum-Popover-tip {
			inline-size: var(--mod-popover-pointer-width, var(--spectrum-popover-pointer-width));
			block-size: var(--mod-popover-pointer-height, var(--spectrum-popover-pointer-height));
			position: absolute;
			inset-block-start: 100%;
			inset-inline: 0;
			margin: auto;

			/* https://stackoverflow.com/questions/44170229/how-to-prevent-half-pixel-svg-shift-on-high-pixel-ratio-devices-retina */
			transform: translate(0, 0);
		}
	}

	/* popover is at top of source, tip left and pointing down ▽ */
	&.spectrum-Popover--top-left {
		.spectrum-Popover-tip {
			/* stylelint-disable-next-line csstools/use-logical -- intentional, left stays on the same side even for RTL */
			left: var(--mod-popover-pointer-edge-spacing, var(--spectrum-popover-pointer-edge-spacing));
			right: auto;
		}
	}

	/* popover is at top of source, tip right and pointing down ▽ */
	&.spectrum-Popover--top-right {
		.spectrum-Popover-tip {
			/* stylelint-disable-next-line csstools/use-logical -- intentional, right stays on the same side even for RTL */
			left: auto;
			right: var(--mod-popover-pointer-edge-spacing, var(--spectrum-popover-pointer-edge-spacing));
		}
	}

	/* logical property - popover is above, source and tip are at start, tip pointing down ▽ */
	&.spectrum-Popover--top-start {
		.spectrum-Popover-tip {
			margin-inline-start: var(--mod-popover-pointer-edge-spacing, var(--spectrum-popover-pointer-edge-spacing));
		}
	}

	/* logical property - popover is above, source and tip are at end, tip pointing down ▽ */
	&.spectrum-Popover--top-end {
		.spectrum-Popover-tip {
			margin-inline-end: var(--mod-popover-pointer-edge-spacing, var(--spectrum-popover-pointer-edge-spacing));
		}
	}

	/* popover position is bottom of source with tip pointing up △ */
	&.spectrum-Popover--bottom,
	&.spectrum-Popover--bottom-left,
	&.spectrum-Popover--bottom-right,
	&.spectrum-Popover--bottom-start,
	&.spectrum-Popover--bottom-end {
		.spectrum-Popover-tip {
			inset-block: auto 100%;

			/* flip triangle to face up */
			transform: scaleY(-1);
		}
	}

	/* popover position is bottom, source is at left, tip pointing up △ */
	&.spectrum-Popover--bottom-left {
		.spectrum-Popover-tip {
			/* stylelint-disable-next-line csstools/use-logical -- intentional, left stays on the same side even for RTL */
			left: var(--mod-popover-pointer-edge-spacing, var(--spectrum-popover-pointer-edge-spacing));
			right: auto;
		}
	}

	/* popover position is bottom, source is at right, tip pointing up △ */
	&.spectrum-Popover--bottom-right {
		.spectrum-Popover-tip {
			/* stylelint-disable-next-line csstools/use-logical -- intentional, right stays on the same side even for RTL */
			left: auto;
			right: var(--mod-popover-pointer-edge-spacing, var(--spectrum-popover-pointer-edge-spacing));
		}
	}

	/* logical property - popover is below, source is at start, tip pointing up △ */
	&.spectrum-Popover--bottom-start {
		.spectrum-Popover-tip {
			margin-inline-start: var(--mod-popover-pointer-edge-spacing, var(--spectrum-popover-pointer-edge-spacing));
		}
	}

	/* logical property - popover is below, source is at end, tip pointing up △ */
	&.spectrum-Popover--bottom-end {
		.spectrum-Popover-tip {
			margin-inline-end: var(--mod-popover-pointer-edge-spacing, var(--spectrum-popover-pointer-edge-spacing));
		}
	}

	/* right, left, start, end popover position with tip default to pointing right ▷ */
	&.spectrum-Popover--left,
	&.spectrum-Popover--left-bottom,
	&.spectrum-Popover--left-top,
	&.spectrum-Popover--right,
	&.spectrum-Popover--right-bottom,
	&.spectrum-Popover--right-top,
	&.spectrum-Popover--start,
	&.spectrum-Popover--start-top,
	&.spectrum-Popover--start-bottom,
	&.spectrum-Popover--end,
	&.spectrum-Popover--end-top,
	&.spectrum-Popover--end-bottom {
		.spectrum-Popover-tip {
			/* swap height and width for vertical triangle */
			inline-size: var(--mod-popover-pointer-height, var(--spectrum-popover-pointer-height));
			block-size: var(--mod-popover-pointer-width, var(--spectrum-popover-pointer-width));
			inset-block: 0;
		}
	}

	/* left popover with tip pointing right ▷ */
	&.spectrum-Popover--left,
	&.spectrum-Popover--left-bottom,
	&.spectrum-Popover--left-top {
		.spectrum-Popover-tip {
			/* stylelint-disable-next-line csstools/use-logical -- intentional, left stays on the same side even for RTL */
			left: 100%;
			right: auto;
		}
	}

	/* right popover with tip pointing left ◁ */
	&.spectrum-Popover--right,
	&.spectrum-Popover--right-bottom,
	&.spectrum-Popover--right-top {
		.spectrum-Popover-tip {
			/* stylelint-disable-next-line csstools/use-logical -- intentional, right stays on the same side even for RTL */
			right: 100%;
			left: auto;

			/* flip tip to point left ◁ */
			transform: scaleX(-1);
		}
	}

	/* popover with tip at top */
	&.spectrum-Popover--right-top,
	&.spectrum-Popover--left-top,
	&.spectrum-Popover--start-top,
	&.spectrum-Popover--end-top {
		.spectrum-Popover-tip {
			inset-block: var(--mod-popover-pointer-edge-spacing, var(--spectrum-popover-pointer-edge-spacing)) auto;
		}
	}

	/* popover with tip at bottom */
	&.spectrum-Popover--right-bottom,
	&.spectrum-Popover--left-bottom,
	&.spectrum-Popover--start-bottom,
	&.spectrum-Popover--end-bottom {
		.spectrum-Popover-tip {
			inset-block: auto var(--mod-popover-pointer-edge-spacing, var(--spectrum-popover-pointer-edge-spacing));
		}
	}

	/* logical property - start popover position with tip pointing toward end -  LTR default is ▷ */
	&.spectrum-Popover--start,
	&.spectrum-Popover--start-top,
	&.spectrum-Popover--start-bottom {
		.spectrum-Popover-tip {
			margin-inline-start: 100%;

			&:dir(rtl) {
				transform: none;

				/* flip tip to point left ◁ */
				transform: scaleX(-1);
			}
		}
	}

	/* logical property - end popover position with tip pointing toward start  -  LTR default is ◁ **/
	&.spectrum-Popover--end,
	&.spectrum-Popover--end-top,
	&.spectrum-Popover--end-bottom {
		/* tip triangle  */
		.spectrum-Popover-tip {
			margin-inline-end: 100%;

			/* flip tip to point right ▷ */
			transform: scaleX(-1);

			&:dir(rtl) {
				/* flip tip to point left ◁ */
				transform: scaleX(1);
			}
		}
	}
}

/* windows high contrast mode */
@media (forced-colors: active) {
	.spectrum-Popover {
		--highcontrast-popover-border-color: CanvasText;
	}
}
