/*
Copyright 2022 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

/* @import '../overlay/index.css'; */
 /* @import "../vars/css/components/spectrum-overlay.css"; - does not work, not in vars */
/* @spectrum-css/overlay */

.spectrum-Popover {
  --spectrum-popover-corner-radius: var(--spectrum-corner-radius-100);

  --spectrum-popover-pointer-width: var(--spectrum-popover-tip-width);
  --spectrum-popover-pointer-height: var(--spectrum-popover-tip-height);

   /* TODO - missing token - default pointer spacing from edge - same as corner radius */
   /* change this token to be 1/2 of source width to center pointer over source */
  --spectrum-popover-pointer-edge-offset: var(--spectrum-corner-radius-100);

  --spectrum-popover-spacing-vertical: var(--spectrum-popover-top-to-content-area);
  --spectrum-popover-spacing-to-source: var(--spectrum-spacing-100);
  --spectrum-popover-spacing-container: var(--spectrum-spacing-100);

  --spectrum-popover-background-color: var(--spectrum-background-layer-2-color);

    /* border width token missing from redline components XD specs - resolves to 1px */
  --spectrum-popover-border-width: var(--spectrum-border-width-100);
  --spectrum-popover-border-color: var(--spectrum-gray-400);

  --spectrum-popover-shadow-horizontal: var(--spectrum-drop-shadow-x);
  --spectrum-popover-shadow-vertical: var(--spectrum-drop-shadow-y);
  --spectrum-popover-shadow-blur: var(--spectrum-drop-shadow-blur);
  --spectrum-popover-shadow-color: var(--spectrum-drop-shadow-color);
}

/* dev notes - remove before shipping */
.spectrum-Popover {
  border: 1px dashed gray;
}

.spectrum-Popover-content {

}


/* outer container to control spacing around component */
.spectrum-Popover {
  /* TODO - resolve missing overlay dependency */
   /* @inherit: %spectrum-overlay; */

  /* TODO - resolve missing tokens */
  /* min-width: var(--spectrum-popover-min-width);
  min-height: var(--spectrum-popover-min-height); */

  box-sizing: border-box;
  position: absolute;

  /* default spacing outside content container */
  padding: var(--spectrum-popover-spacing-container);

  outline: none; /* Hide focus outline */

  /* TODO - add general open animation */
  &.is-open {
    /* @inherit: %spectrum-overlay--open; */
  }

  /* inner content container with border and background styles */
  .spectrum-Popover-content {
    padding: var(--spectrum-popover-spacing-vertical) 0;

    position: relative;

    display: inline-flex;
    flex-direction: column;

    border-style: solid;
    border-radius: var(--spectrum-popover-corner-radius);
    border-color: var(--spectrum-popover-border-color);
    border-width: var(--spectrum-popover-border-width);

    background-color: var(--spectrum-popover-background-color);

    box-shadow: var(--spectrum-popover-shadow-horizontal) var(--spectrum-popover-shadow-vertical) var(--spectrum-popover-shadow-blur) var(--spectrum-popover-shadow-color);

    /* tip triangle defaults to pointing down - outer triangle is border */
    .spectrum-Popover-tip {
      position: absolute;
      margin: 0 auto;
      height: var(--spectrum-popover-pointer-height);
      width: var(--spectrum-popover-pointer-width);
      left: 0;
      right: 0;
      bottom: 0;
      top: 100%;
      background: var(--spectrum-popover-border-color);
      /* transform: translate(0, var(--spectrum-popover-pointer-height)); move triangle just outside edge */
      clip-path: polygon(-1px -1px, 50% 100%, 100% 0); /* triangle pointing down */

      /* inner triangle shape */
      &::after {
        position: absolute;
        z-index: 0;
        content: "";
        height: inherit;
        width: inherit;
        background-color: var(--spectrum-popover-background-color);
        clip-path: inherit;
        margin-top: calc(var(--spectrum-popover-border-width) * -1); /* move inner triangle up to reveal border */
      }
    }
  }

  /* has tip triangle */
  &.spectrum-Popover--withTip {
    /* add tip height to spacing to source */
    padding-bottom: calc(var(--spectrum-popover-pointer-height) + var(--spectrum-popover-spacing-to-source));
    padding-top: var(--spectrum-popover-spacing-container);
  }
}


/* popover is top of source with tip pointing down - default placement */
.spectrum-Popover--top, /* visual provided */
.spectrum-Popover--top-left,
.spectrum-Popover--top-right,
.spectrum-Popover--top-start, /* visual provided */
.spectrum-Popover--top-end {
  /* default spacing outside content container */
  padding: var(--spectrum-popover-spacing-container);

  /* TODO - import overlay - animate opening upward */
  &.is-open {
    /* @inherit: %spectrum-overlay--top--open; */
  }
}

/* popover is top and left of source */
.spectrum-Popover--top-left {

  .spectrum-Popover-content {

    /* move tip bottom right to point near source */
    .spectrum-Popover-tip {
      left: 100%;
      margin-right: var(--spectrum-popover-pointer-edge-offset); /* TODO - missing token */
    }
  }
}

/* popover is top and right of source */
.spectrum-Popover--top-right {

  .spectrum-Popover-content {

    /* move tip bottom left to point near source */
    .spectrum-Popover-tip {
      margin-left: var(--spectrum-popover-pointer-edge-offset); /* TODO - missing token */
      right: 100%;
    }
  }
}

/* TODO - additional placements for logical properties */
.spectrum-Popover--top-start {
  /* placeholder */
}

/* TODO - additional placements for logical properties */
.spectrum-Popover--top-end {
  /* placeholder */
}

/* bottom popover with tip pointing up */
.spectrum-Popover--bottom, /* visual provided */
.spectrum-Popover--bottom-left,
.spectrum-Popover--bottom-right,
.spectrum-Popover--bottom-start, /* visual provided */
.spectrum-Popover--bottom-end /* visual provided */ {
  /* default spacing outside content container */
  padding: var(--spectrum-popover-spacing-container);

  /* has tip triangle */
  &.spectrum-Popover--withTip {
    /* add tip height to spacing to source */
    padding-top: calc(var(--spectrum-popover-pointer-height) + var(--spectrum-popover-spacing-to-source));
    padding-bottom: var(--spectrum-popover-spacing-container);
  }

  /* TODO - import overlay - animate opening downward */
  &.is-open {
    /* @inherit: %spectrum-overlay--bottom--open; */
  }

  .spectrum-Popover-content {

    /* tip triangle moved and transformed to point up */
    .spectrum-Popover-tip {
      bottom: 100%;
      top: 0;
      transform: scaleY(-1) translateY(100%);
    }
  }
}

/* popover is bottom and left of source */
.spectrum-Popover--bottom-left {

  .spectrum-Popover-content {

    /* tip moves to left */
    .spectrum-Popover-tip {
      margin-right: var(--spectrum-popover-pointer-edge-offset); /* TODO - missing token */
      left: 100%;
    }
  }
}

/* popover is bottom and right of source */
.spectrum-Popover--bottom-right {

  .spectrum-Popover-content {

    /* tip moves to right */
    .spectrum-Popover-tip {
      margin-left: var(--spectrum-popover-pointer-edge-offset); /* TODO - missing token */
      right: 100%;
    }
  }
}

/* TODO - additional placements for logical properties */
.spectrum-Popover--bottom-start {
  /* placeholder */
}

/* TODO - additional placements for logical properties */
.spectrum-Popover--bottom-end {
  /* placeholder */
}


/* left popover with tip pointing right */
.spectrum-Popover--left,
.spectrum-Popover--left-bottom, /* visual provided */
.spectrum-Popover--left-top {
  /* default spacing outside content container */
  padding: var(--spectrum-popover-spacing-container);

  /* has tip triangle */
  &.spectrum-Popover--withTip {
    /* add tip height to spacing to source */
    padding-right: calc(var(--spectrum-popover-pointer-height) + var(--spectrum-popover-spacing-to-source));
    padding-left: var(--spectrum-popover-spacing-container);
  }

  /* TODO - import overlay - animate opening to left */
  &.is-open {
    /* @inherit: %spectrum-overlay--left--open; */
  }

  .spectrum-Popover-content {
    /* redraw tip triangle pointing right */
    .spectrum-Popover-tip {
      left: 100%;
      top: 0;
      bottom: 0;
      margin: auto;
      clip-path: polygon(0 0, 0 100%, 100% 50%);
      height: var(--spectrum-popover-pointer-width);
      width: var(--spectrum-popover-pointer-height);

      &::after {
        margin-top: 0;
        margin-left: calc(var(--spectrum-popover-border-width) * -1); /* move inner triangle up to reveal border */
      }
    }
  }
}

.spectrum-Popover--left-top {

  .spectrum-Popover-content {

    /* move tip to top */
    .spectrum-Popover-tip {
      top: 0;
      bottom: 100%;
      margin-top: var(--spectrum-popover-pointer-edge-offset); /* TODO - missing token */
    }
  }
}

.spectrum-Popover--left-bottom {

  .spectrum-Popover-content {

    /* move tip to bottom */
    .spectrum-Popover-tip {
      top: 100%;
      bottom: 0;
      margin-bottom: var(--spectrum-popover-pointer-edge-offset); /* TODO - missing token */
    }
  }
}

/* right popover with tip pointing left */
.spectrum-Popover--right,
.spectrum-Popover--right-bottom,
.spectrum-Popover--right-top /* visual provided */ {
  /* default spacing outside content container */
  padding: var(--spectrum-popover-spacing-container);

  /* has tip triangle */
  &.spectrum-Popover--withTip {
    /* add tip height to spacing to source */
    padding-left: calc(var(--spectrum-popover-pointer-height) + var(--spectrum-popover-spacing-to-source));
    padding-right: var(--spectrum-popover-spacing-container);
  }

  /* TODO - import overlay - animate opening to right */
  &.is-open {
    /* @inherit: %spectrum-overlay--right--open; */
  }

  .spectrum-Popover-content {
    .spectrum-Popover-tip {
      right: 100%;
      top: 0;
      bottom: 0;
      margin: auto;
      clip-path: polygon(100% 0, 0 50%, 100% 100%); /* triangle right */
      height: var(--spectrum-popover-pointer-width);
      width: var(--spectrum-popover-pointer-height);
      transform: translateX(-100%);

      &::after {
        margin-top: 0;
        margin-left: var(--spectrum-popover-border-width); /* move inner triangle up to reveal border */
      }
    }
  }
}

.spectrum-Popover--right-top {

  .spectrum-Popover-content {

    /* move tip to top */
    .spectrum-Popover-tip {
      top: 0;
      bottom: 100%;
      margin-top: var(--spectrum-popover-pointer-edge-offset); /* TODO - missing token */
    }
  }
}

.spectrum-Popover--right-bottom {

  .spectrum-Popover-content {

    /* move tip to bottom */
    .spectrum-Popover-tip {
      top: 100%;
      bottom: 0;
      margin-bottom: var(--spectrum-popover-pointer-edge-offset); /* TODO - missing token */
    }
  }
}

/* TODO - additional placements for logical properties */
.spectrum-Popover--start,
.spectrum-Popover--start-top,
.spectrum-Popover--start-bottom,

.spectrum-Popover--end,
.spectrum-Popover--end-top,
.spectrum-Popover--end-bottom {
  /* TODO - placeholder */
}
