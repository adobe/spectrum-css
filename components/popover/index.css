/*
Copyright 2022 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

/* @import '../overlay/index.css'; */
 /* @import "../vars/css/components/spectrum-overlay.css"; - does not work, not in vars */
/* @spectrum-css/overlay */

.spectrum-Popover {
  --spectrum-popover-corner-radius: var(--spectrum-corner-radius-100);

  --spectrum-popover-pointer-width: var(--spectrum-popover-tip-width);
  --spectrum-popover-pointer-height: var(--spectrum-popover-tip-height);

   /* TODO - missing token - default pointer spacing from edge - same as corner radius */
   /* change this token to be 1/2 of source width to center pointer over source */
  --spectrum-popover-pointer-edge-offset: var(--spectrum-corner-radius-100);

  --spectrum-popover-spacing-vertical: var(--spectrum-popover-top-to-content-area);
  --spectrum-popover-spacing-to-source: var(--spectrum-spacing-100);
  --spectrum-popover-spacing-container: var(--spectrum-spacing-100);

  --spectrum-popover-background-color: var(--spectrum-background-layer-2-color);

    /* border width token missing from redline components XD specs - resolves to 1px */
  --spectrum-popover-border-width: var(--spectrum-border-width-100);
  --spectrum-popover-border-color: var(--spectrum-gray-400);

  --spectrum-popover-shadow-horizontal: var(--spectrum-drop-shadow-x);
  --spectrum-popover-shadow-vertical: var(--spectrum-drop-shadow-y);
  --spectrum-popover-shadow-blur: var(--spectrum-drop-shadow-blur);
  --spectrum-popover-shadow-color: var(--spectrum-drop-shadow-color);
}

/* outer container to control spacing around component */
.spectrum-Popover {
  /* TODO - resolve missing overlay dependency */
   /* @inherit: %spectrum-overlay; */

  /* TODO - resolve missing tokens */
  /* min-width: var(--spectrum-popover-min-width);
  min-height: var(--spectrum-popover-min-height); */

  box-sizing: border-box;
  position: absolute;

  /* default spacing outside content container */
  padding: var(--spectrum-popover-spacing-container);

  outline: none; /* Hide focus outline */

  /* TODO - add general open animation */
  &.is-open {
    /* @inherit: %spectrum-overlay--open; */
  }

  /* inner content container with border and background styles */
  .spectrum-Popover-content {
    padding: var(--spectrum-popover-spacing-vertical) 0;

    position: relative;

    display: inline-flex;
    flex-direction: column;

    border-style: solid;
    border-radius: var(--spectrum-popover-corner-radius);
    border-color: var(--spectrum-popover-border-color);
    border-width: var(--spectrum-popover-border-width);

    background-color: var(--spectrum-popover-background-color);

    box-shadow: var(--spectrum-popover-shadow-horizontal) var(--spectrum-popover-shadow-vertical) var(--spectrum-popover-shadow-blur) var(--spectrum-popover-shadow-color);
  }

  /* has tip triangle */
  &.spectrum-Popover--withTip {
    /* add tip height to spacing to source */
    padding-bottom: calc(var(--spectrum-popover-pointer-height) + var(--spectrum-popover-spacing-to-source));
    padding-top: var(--spectrum-popover-spacing-container);

    .spectrum-Popover-content {
     /* tip triangle defaults to pointing down */
      &::before,
      &::after {
        content: "";
        position: absolute;
        height: var(--spectrum-popover-pointer-height);
        width: var(--spectrum-popover-pointer-width);
        margin: auto;
        left: 0;
        right: 0;
        top: 100%;
        clip-path: polygon(0 0, 50% 100%, 100% 0);
      }

      /* before element is triangle border */
      &::before {
        background: var(--spectrum-popover-border-color);
      }

      /* after element is the triangle fill with offset to show the border */
      &::after {
        background: var(--spectrum-popover-background-color);
        /* move fill up by 150% of border width - percentage matches 2:1 triangle ratio */
        top: calc(100% - (var(--spectrum-popover-border-width) * 1.5));
      }
    }
  }
}

/* popover is top of source with tip pointing down - default placement */
.spectrum-Popover--top, /* visual provided */
.spectrum-Popover--top-left,
.spectrum-Popover--top-right,
.spectrum-Popover--top-start, /* visual provided */
.spectrum-Popover--top-end {
  /* default spacing outside content container */
  padding: var(--spectrum-popover-spacing-container);

  /* TODO - import overlay - animate opening upward */
  &.is-open {
    /* @inherit: %spectrum-overlay--top--open; */
  }

  &.spectrum-Popover--withTip {
    /* add tip height to spacing to source */
    padding-bottom: calc(var(--spectrum-popover-pointer-height) + var(--spectrum-popover-spacing-to-source));
    padding-top: var(--spectrum-popover-spacing-container);
  }
}

/* popover is above and to the left of source */
.spectrum-Popover--top-left {
  &.spectrum-Popover--withTip {
    .spectrum-Popover-content {
      /* tip triangle  */
      &::before,
      &::after {
        left: auto;
        right: var(--spectrum-popover-pointer-edge-offset);
      }
    }
  }
}

/* popover is above and to the right of source */
.spectrum-Popover--top-right {
  &.spectrum-Popover--withTip {
    .spectrum-Popover-content {
      /* tip triangle  */
      &::before,
      &::after {
        right: auto;
        left: var(--spectrum-popover-pointer-edge-offset);
      }
    }
  }
}

/* logical property - popover is above and horizontally before source */
.spectrum-Popover--top-start {
  &.spectrum-Popover--withTip {
    .spectrum-Popover-content {
      /* tip triangle  */
      &::before,
      &::after {
        margin-inline-end: var(--spectrum-popover-pointer-edge-offset);
      }
    }
  }
}

/* logical property - popover is above and horizontally after source */
.spectrum-Popover--top-end {
  &.spectrum-Popover--withTip {
    .spectrum-Popover-content {
      /* tip triangle  */
      &::before,
      &::after {
        margin-inline-start: var(--spectrum-popover-pointer-edge-offset);
      }
    }
  }
}

/* bottom popover with tip pointing up */
.spectrum-Popover--bottom, /* visual provided */
.spectrum-Popover--bottom-left,
.spectrum-Popover--bottom-right,
.spectrum-Popover--bottom-start, /* visual provided */
.spectrum-Popover--bottom-end /* visual provided */ {
  /* default spacing outside content container */
  padding: var(--spectrum-popover-spacing-container);

  /* TODO - import overlay - animate opening downward */
  &.is-open {
    /* @inherit: %spectrum-overlay--bottom--open; */
  }

  /* has tip triangle */
  &.spectrum-Popover--withTip {
    /* add tip height to spacing to source */
    padding-top: calc(var(--spectrum-popover-pointer-height) + var(--spectrum-popover-spacing-to-source));
    padding-bottom: var(--spectrum-popover-spacing-container);

    .spectrum-Popover-content {
     /* tip triangle points up */
      &::before,
      &::after {
        top: auto;
        bottom: 100%;
        clip-path: polygon(0 100%, 50% 0, 100% 100%);
      }

      /* after element is the triangle fill with offset to show the border */
      &::after {
        /* move fill up by 150% of border width - percentage matches 2:1 triangle ratio */
        bottom: calc(100% - (var(--spectrum-popover-border-width) * 1.5));
      }
    }
  }
}

/* popover is bottom and left of source */
.spectrum-Popover--bottom-left {
  &.spectrum-Popover--withTip {
    .spectrum-Popover-content {
      /* tip triangle  */
      &::before,
      &::after {
        left: auto;
        right: var(--spectrum-popover-pointer-edge-offset);
      }
    }
  }
}

/* popover is bottom and right of source */
.spectrum-Popover--bottom-right {
  &.spectrum-Popover--withTip {
    .spectrum-Popover-content {
      /* tip triangle  */
      &::before,
      &::after {
        right: auto;
        left: var(--spectrum-popover-pointer-edge-offset);
      }
    }
  }
}

/* logical property - popover is below and horizontally before source */
.spectrum-Popover--bottom-start {
  &.spectrum-Popover--withTip {
    .spectrum-Popover-content {
      /* tip triangle  */
      &::before,
      &::after {
        margin-inline-end: var(--spectrum-popover-pointer-edge-offset);
      }
    }
  }
}

/* logical property - popover is below and horizontally after source */
.spectrum-Popover--bottom-end {
  &.spectrum-Popover--withTip {
    .spectrum-Popover-content {
      /* tip triangle  */
      &::before,
      &::after {
        margin-inline-start: var(--spectrum-popover-pointer-edge-offset);
      }
    }
  }
}

/* right popover with tip pointing left */
.spectrum-Popover--right,
.spectrum-Popover--right-bottom,
.spectrum-Popover--right-top /* visual provided */ {
  /* default spacing outside content container */
  padding: var(--spectrum-popover-spacing-container);

  /* TODO - import overlay - animate opening to right */
  &.is-open {
    /* @inherit: %spectrum-overlay--right--open; */
  }

  /* has tip triangle */
  &.spectrum-Popover--withTip {
    /* add tip height to spacing to source */
    padding-left: calc(var(--spectrum-popover-pointer-height) + var(--spectrum-popover-spacing-to-source));
    padding-right: var(--spectrum-popover-spacing-container);

    .spectrum-Popover-content {
     /* tip triangle points left */
      &::before,
      &::after {
        /* swap height and width for vertical triangle */
        width: var(--spectrum-popover-pointer-height);
        height: var(--spectrum-popover-pointer-width);
        top: 0;
        bottom: 0;
        left: auto;
        right: 100%;
        clip-path: polygon(100% 0, 0 50%, 100% 100%);
      }

      /* after element is the triangle fill with offset to show the border */
      &::after {
        /* move fill up by 150% of border width - percentage matches 2:1 triangle ratio */
        right: calc(100% - (var(--spectrum-popover-border-width) * 1.5));
      }
    }
  }
}

/* right popover with tip at top pointing left */
.spectrum-Popover--right-top {
  &.spectrum-Popover--withTip {
    .spectrum-Popover-content {
      /* tip triangle  */
      &::before,
      &::after {
        bottom: auto;
        top: var(--spectrum-popover-pointer-edge-offset);
      }
    }
  }
}

/* right popover with tip at bottom pointing left */
.spectrum-Popover--right-bottom {
  &.spectrum-Popover--withTip {
    .spectrum-Popover-content {
      /* tip triangle  */
      &::before,
      &::after {
        top: auto;
        bottom: var(--spectrum-popover-pointer-edge-offset);
      }
    }
  }
}

/* left popover with tip pointing right */
.spectrum-Popover--left,
.spectrum-Popover--left-bottom, /* visual provided */
.spectrum-Popover--left-top {
  /* default spacing outside content container */
  padding: var(--spectrum-popover-spacing-container);

  /* TODO - import overlay - animate opening to left */
  &.is-open {
    /* @inherit: %spectrum-overlay--left--open; */
  }

  /* has tip triangle */
  &.spectrum-Popover--withTip {
    /* add tip height to spacing to source */
    padding-right: calc(var(--spectrum-popover-pointer-height) + var(--spectrum-popover-spacing-to-source));
    padding-left: var(--spectrum-popover-spacing-container);

    .spectrum-Popover-content {
     /* tip triangle points left */
      &::before,
      &::after {
        /* swap height and width for vertical triangle */
        width: var(--spectrum-popover-pointer-height);
        height: var(--spectrum-popover-pointer-width);
        top: 0;
        bottom: 0;
        right: auto;
        left: 100%;
        clip-path: polygon(0 0, 100% 50%, 0 100%);
      }

      /* after element is the triangle fill with offset to show the border */
      &::after {
        /* move fill up by 150% of border width - percentage matches 2:1 triangle ratio */
        left: calc(100% - (var(--spectrum-popover-border-width) * 1.5));
      }
    }
  }
}

/* left popover with tip at top pointing right */
.spectrum-Popover--left-top {
  &.spectrum-Popover--withTip {
    .spectrum-Popover-content {
      /* tip triangle  */
      &::before,
      &::after {
        bottom: auto;
        top: var(--spectrum-popover-pointer-edge-offset);
      }
    }
  }
}

/* left popover with tip at bottom pointing right */
.spectrum-Popover--left-bottom {
  &.spectrum-Popover--withTip {
    .spectrum-Popover-content {
      /* tip triangle  */
      &::before,
      &::after {
        top: auto;
        bottom: var(--spectrum-popover-pointer-edge-offset);
      }
    }
  }
}

/* logical property - popover is horizontally before source with tip pointing at source */
.spectrum-Popover--start,
.spectrum-Popover--start-top,
.spectrum-Popover--start-bottom {
  &.spectrum-Popover--withTip {
    padding-inline-end: calc(var(--spectrum-popover-pointer-height) + var(--spectrum-popover-spacing-to-source));

    .spectrum-Popover-content {
      /* tip triangle  */
      &::before,
      &::after {
        /* swap height and width for vertical triangle */
        width: var(--spectrum-popover-pointer-height);
        height: var(--spectrum-popover-pointer-width);
        top: 0;
        bottom: 0;
        margin-inline-start: 100%;
        clip-path: polygon(0 0, 100% 50%, 0 100%);

        /* right to left read direction */
        [dir="rtl"] & {
          clip-path: polygon(100% 0, 0 50%, 100% 100%);
        }
      }

      /* after element is the triangle fill with offset to show the border */
      &::after {
        /* move fill up by 150% of border width - percentage matches 2:1 triangle ratio */
        margin-inline-start: calc(100% - (var(--spectrum-popover-border-width) * 1.5));
      }
    }
  }
}

/* logical property - popover is top and horizontally before source with tip pointing at source */
.spectrum-Popover--start-top {
  &.spectrum-Popover--withTip {
    .spectrum-Popover-content {
      /* tip triangle  */
      &::before,
      &::after {
        top: var(--spectrum-popover-pointer-edge-offset);
        bottom: auto;
      }
    }
  }
}

/* logical property - popover is bottom and horizontally before source with tip pointing at source */
.spectrum-Popover--start-bottom {
  &.spectrum-Popover--withTip {
    .spectrum-Popover-content {
      /* tip triangle  */
      &::before,
      &::after {
        bottom: var(--spectrum-popover-pointer-edge-offset);
        top: auto;
      }
    }
  }
}

/* logical property - popover is horizontally after source with tip pointing at source */
.spectrum-Popover--end,
.spectrum-Popover--end-top,
.spectrum-Popover--end-bottom {
  &.spectrum-Popover--withTip {
    padding-inline-start: calc(var(--spectrum-popover-pointer-height) + var(--spectrum-popover-spacing-to-source));

    .spectrum-Popover-content {
      /* tip triangle  */
      &::before,
      &::after {
        /* swap height and width for vertical triangle */
        width: var(--spectrum-popover-pointer-height);
        height: var(--spectrum-popover-pointer-width);
        top: 0;
        bottom: 0;
        margin-inline-end: 100%;
        clip-path: polygon(100% 0, 0 50%, 100% 100%);

        /* right to left read direction */
        [dir="rtl"] & {
          clip-path: polygon(0 0, 100% 50%, 0 100%);
        }
      }

      /* after element is the triangle fill with offset to show the border */
      &::after {
        /* move fill up by 150% of border width - percentage matches 2:1 triangle ratio */
        margin-inline-end: calc(100% - (var(--spectrum-popover-border-width) * 1.5));
      }
    }
  }
}

/* logical property - popover is top and horizontally after source with tip pointing at source */
.spectrum-Popover--end-top {
  &.spectrum-Popover--withTip {
    .spectrum-Popover-content {
      /* tip triangle  */
      &::before,
      &::after {
        top: var(--spectrum-popover-pointer-edge-offset);
        bottom: auto;
      }
    }
  }
}

/* logical property - popover is bottom and horizontally after source with tip pointing at source */
.spectrum-Popover--end-bottom {
  &.spectrum-Popover--withTip {
    .spectrum-Popover-content {
      /* tip triangle  */
      &::before,
      &::after {
        bottom: var(--spectrum-popover-pointer-edge-offset);
        top: auto;
      }
    }
  }
}
