/*
Copyright 2023 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

.spectrum-ColorWheel {
  --spectrum-colorwheel-min-width: var(--spectrum-color-wheel-minimum-width);
  --spectrum-colorwheel-min-width-adusted: calc(var(--spectrum-color-wheel-minimum-width) + (var(--spectrum-color-wheel-minimum-width) * 0.0625));
  --spectrum-colorwheel-width: var(--spectrum-colorwheel-min-width-adusted);
  --spectrum-colorwheel-height: var(--spectrum-colorwheel-min-width-adusted);
  --spectrum-colorwheel-border-color:   var(--spectrum-transparent-black-200);
  --spectrum-colorwheel-border-width: var(--spectrum-border-width-100);
  --spectrum-colorwheel-fill-color-disabled: var(--spectrum-disabled-background-color);
  --spectrum-colorwheel-track-width: var(--spectrum-color-control-track-width);
}

%spectrum-ColorControl-handle--focused {
  /*// Bigger handle when focused */
  width: calc(16px * 2); /* place holder var(--spectrum-colorhandle-size) */
  height: calc(16px * 2); /* place holder var(--spectrum-colorhandle-size) */

  margin-left: calc(-1 * 16px); /* place holder var(--spectrum-colorhandle-size) */
  margin-top: calc(-1 * 16px); /* place holder var(--spectrum-colorhandle-size) */
}

/* hides slider component, see extend below */
%spectrum-ColorControl-hiddenField {
  opacity: 0;
  position: absolute;
  top: 0; left: 0;
  width: 100%; height: 100%;
  z-index: 0;
  margin: 0;
  pointer-events: none;
}

.spectrum-ColorWheel {
  position: relative;
  display: block;
  min-width: var(--spectrum-colorwheel-min-width);
  width: var(--spectrum-colorwheel-width);
  height: var(--spectrum-colorwheel-height);
  user-select: none;
  cursor: default;

  &.is-focused {
    z-index: 2;

    .spectrum-ColorWheel-handle {
      @extend %spectrum-ColorControl-handle--focused;
    }
  }

  &.is-disabled {
    pointer-events: none;
    .spectrum-ColorWheel-outerCircle {
      fill: var(--spectrum-colorwheel-fill-color-disabled);
    }
    /* // hide all the little colored bits */
    .spectrum-ColorWheel-segment {
      display: none;
    }
  }

  &.is-dragged {
    /* Be on top when dragging so loupe can overlap */
    z-index: 2;
  }
}

.spectrum-ColorWheel-gradient {
  position: relative;
  z-index: 0;
  width: var(--spectrum-colorwheel-min-width);
  height: var(--spectrum-colorwheel-min-width);
  border-radius: 100%;
  box-sizing: border-box;
  border: var(--spectrum-colorwheel-border-width) solid var(--spectrum-colorwheel-border-color);
}

.spectrum-ColorWheel-wheel {
  position: relative;
  z-index: 1;
}

/* adjusts masks so it aligns with positioning of SVG  */
.spectrum-ColorWheel-segment {
  transform: translate(5px, 5px);
}

.spectrum-ColorWheel-outerCircle,
.spectrum-ColorWheel-innerCircle {
  fill: transparent;
  stroke: var(--spectrum-colorwheel-border-color);
  stroke-width: var(--spectrum-colorwheel-border-width);
}

/* adjusts size of mask-disabled and inner circle track width */
.spectrum-ColorWheel-track-width {
  r: calc(85px - var(--spectrum-colorwheel-track-width));
}

.spectrum-ColorWheel-slider {
  @extend %spectrum-ColorControl-hiddenField;
}

.spectrum-ColorWheel-handle {
  left: 50%;
  top: 50%;
}

/* TODO test on WHCM for Window High Contrast Mode */
@media (forced-colors: active) {
  .spectrum-ColorWheel {
    /* --spectrum-colorwheel-border-color-disabled : GrayText; */
    --spectrum-colorwheel-fill-color-disabled: Canvas;
  }
  .spectrum-ColorWheel {
    forced-color-adjust: none;
  }
}