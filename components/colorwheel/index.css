/*
Copyright 2023 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

.spectrum-ColorWheel {
  --spectrum-colorwheel-height: var(--spectrum-colorwheel-width);

  --spectrum-colorwheel-border-color:   var(--spectrum-transparent-black-200);
  --spectrum-colorwheel-border-width: var(--spectrum-border-width-100);
  --spectrum-colorwheel-fill-color-disabled: var(--spectrum-disabled-background-color);

  --spectrum-colorwheel-colorarea-margin: var(--spectrum-color-wheel-color-area-margin);
  --spectrum-colorhandle-size: 16px; /* TODO replace with new token for ColorHandle, placeholder for old token var(--spectrum-colorhandle-size) */

  --spectrum-colorwheel-track-width: var(--spectrum-color-control-track-width);

  .spectrum--large & {
    --spectrum-ColorWheel-radius: 90px;
    --spectrum-colorwheel-width: 240px; /* placeholder for incoming color-wheel-width token */
    --spectrum-colorwheel-minimum-width: 219px; /* placeholder for incoming color-wheel-minimum-width*/
  }

  .spectrum--medium & {
    --spectrum-ColorWheel-radius: 85px;
    --spectrum-colorwheel-width: 192px; /* placeholder for incoming color-wheel-width token */
    --spectrum-colorwheel-minimum-width: 175px; /* placeholder for incoming color-wheel-minimum-width*/
  }
}

/********* WHCM *********/
@media (forced-colors: active) {
  .spectrum-ColorWheel {
    --highcontrast-colorwheel-border-color-disabled : GrayText;
    --highcontrast-colorwheel-fill-color-disabled : Canvas;
  }
  .spectrum-ColorWheel {
    forced-color-adjust: none;
  }
}

%spectrum-ColorControl-handle--focused {
  /* Bigger colorhandle when focused */
  width: calc(var(--spectrum-colorhandle-size) * 2);
  height: calc(var(--spectrum-colorhandle-size) * 2);

  margin-left: calc(-1 * var(--spectrum-colorhandle-size));
  margin-top: calc(-1 * var(--spectrum-colorhandle-size));
}

/* hides slider element, see extend below */
%spectrum-ColorControl-hiddenField {
  opacity: 0;
  position: absolute;
  top: 0; left: 0;
  width: 100%; height: 100%;
  z-index: 0;
  margin: 0;
  pointer-events: none;
}

.spectrum-ColorWheel {
  position: relative;
  display: block;
  min-width: var(--spectrum-colorwheel-minimum-width);
  width: var(--spectrum-colorwheel-width);
  height: var(--spectrum-colorwheel-height);
  user-select: none;
  cursor: default;

  &.is-focused {
    z-index: 2;

    .spectrum-ColorWheel-handle {
      @extend %spectrum-ColorControl-handle--focused;
    }
  }

  &.is-disabled {
    pointer-events: none;
    .spectrum-ColorWheel-outerCircle {
      fill: var(--highcontrast-colorwheel-fill-color-disabled, var(--spectrum-colorwheel-fill-color-disabled));
      stroke: var(--highcontrast-colorwheel-border-color-disabled, var(--spectrum-colorwheel-border-color));

    }
    /* hides all the little colored bits */
    .spectrum-ColorWheel-segment {
      display: none;
    }
  }

  &.is-dragged {
    /* Be on top when dragging so loupe can overlap */
    z-index: 2;
  }
}

.spectrum-ColorWheel-internals{
  display: flex;
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100px;
  height: 100px;
  margin: auto;
}

.spectrum-ColorWheel-colorarea{
  display: inline-block;
  height: auto;
  width: 100%;
  margin: var(--spectrum-colorwheel-colorarea-margin);
}

.spectrum-ColorWheel-wheel {
  position: relative;
  z-index: 1;
}

.spectrum-ColorWheel-outerCircle,
.spectrum-ColorWheel-innerCircle {
  fill: transparent;
  stroke: var(--spectrum-colorwheel-border-color);
  stroke-width: var(--spectrum-colorwheel-border-width);
}

/* adjusts size of mask and inner circle track width */
.spectrum-ColorWheel-track-width {
  r: calc(var(--spectrum-ColorWheel-radius) - var(--spectrum-colorwheel-track-width));
}

.spectrum-ColorWheel-slider {
  @extend %spectrum-ColorControl-hiddenField;
}

.spectrum-ColorWheel-handle {
  left: 50%;
  top: 50%;
}




/* JENN DON"T COMMIT THIS!!  */

.spectrum-ColorArea {
  position: relative;
  display: inline-block;
  width: 100%;
  height: 100%;

  border-radius: 4px;

  cursor: default;

  user-select: none;

  &.is-focused {
    z-index: 2;

    .spectrum-ColorArea-handle {
      @extend %spectrum-ColorControl-handle--focused;
    }
  }

  &.is-disabled {
    pointer-events: none;
  }

  /* the floating inset box shadow must be a separate element since <canvas> won't take it */
   &:before {
    content: '';
    z-index: 1;
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    border-radius: 4px;
  }
}

.spectrum-ColorArea-handle {
  left: 0;
  top: 0;
}

.spectrum-ColorArea-gradient {
  width: 100%;
  height: 100%;
  border-radius: 4px;
}

.spectrum-ColorArea-slider {
  @extend %spectrum-ColorControl-hiddenField;
}