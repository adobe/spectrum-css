/*
Copyright 2023 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/
.spectrum-ColorWheel {
  --spectrum-colorwheel-height: var(--spectrum-colorwheel-width);
  --spectrum-colorwheel-border-color:   var(--spectrum-transparent-black-200);
  --spectrum-colorwheel-border-width: var(--spectrum-border-width-100);
  --spectrum-colorwheel-fill-color-disabled: var(--spectrum-disabled-background-color);
  --spectrum-colorwheel-track-width: var(--spectrum-color-control-track-width);
  --spectrum-colorwheel-colorarea-margin: var(--spectrum-color-wheel-color-area-margin);
  --spectrum-colorhandle-size: 16px; /* TODO replace with new token for ColorHandle, placeholder for old token var(--spectrum-colorhandle-size) */
  --spectrum-colorwheel-colorhandle-position: calc((var(--spectrum-colorwheel-width) / 2) - (var(--spectrum-colorwheel-track-width) / 2) - 1px);

  .spectrum--medium & {
    --spectrum-colorwheel-width: 192px; /* TODO replace with incoming color-wheel-width token */
    --spectrum-colorwheel-minimum-width: 175px; /* TODO replace with incoming color-wheel-minimum-width token */
    --spectrum-colorwheel-path: "M 95 95 m -95 0 a 95 95 0 1 0 190 0 a 95 95 0 1 0 -190 0.2 M 95 95 m -71 0 a 71 71 0 1 0 142 0 a 71 71 0 1 0 -142 0";
    --spectrum-colorwheel-path-borders: "M 96 96 m -96 0 a 96 96 0 1 0 192 0 a 96 96 0 1 0 -192 0.2 M 96 96 m -70 0 a 70 70 0 1 0 140 0 a 70 70 0 1 0 -140 0";
    --spectrum-colorwheel-colorarea-container-size: 98.9px;
  }

  .spectrum--large & {
    --spectrum-colorwheel-width: 240px; /* TODO replace with incoming color-wheel-width token */
    --spectrum-colorwheel-minimum-width: 219px; /* TODO replace with incoming color-wheel-minimum-width token */
    --spectrum-colorwheel-path: "M 119 119 m -119 0 a 119 119 0 1 0 238 0 a 119 119 0 1 0 -238 0.2 M 119 119 m -90 0 a 90 90 0 1 0 180 0 a 90 90 0 1 0 -180 0";
    --spectrum-colorwheel-path-borders: "M 120 120 m -120 0 a 120 120 0 1 0 240 0 a 120 120 0 1 0 -240 0.2 M 120 120 m -89 0 a 89 89 0 1 0 178 0 a 89 89 0 1 0 -178 0";
    --spectrum-colorwheel-colorarea-container-size: 127.3px;
  }
}

/* Windows High Contrast */
@media (forced-colors: active) {
  .spectrum-ColorWheel {
    --highcontrast-colorwheel-border-color-disabled: GrayText;
    --highcontrast-colorwheel-fill-color-disabled: Canvas;
  }
  .spectrum-ColorWheel {
    forced-color-adjust: none;
  }
}

%spectrum-ColorControl-handle--focused {
  /* Bigger colorhandle when focused */
  width: calc(var(--spectrum-colorhandle-size) * 2);
  height: calc(var(--spectrum-colorhandle-size) * 2);

  margin-left: calc(-1 * var(--spectrum-colorhandle-size));
  margin-top: calc(-1 * var(--spectrum-colorhandle-size));
}

%spectrum-ColorControl-hiddenField {
  opacity: 0;
  position: absolute;
  top: 0; left: 0;
  width: 100%;
  height: 100%;
  z-index: 0;
  margin: 0;
  pointer-events: none;
}

.spectrum-ColorWheel {
  position: relative;
  display: block;
  min-width: var(--mod-colorwheel-minimum-width, var(--spectrum-colorwheel-minimum-width));
  width: var(--mod-colorwheel-width, var(--spectrum-colorwheel-width));
  height: var(--mod-colorwheel-height, var(--spectrum-colorwheel-height));
  user-select: none;
  cursor: default;

  &.is-focused {
    z-index: 2;

    .spectrum-ColorWheel-handle {
      @extend %spectrum-ColorControl-handle--focused;
    }
  }

  &.is-disabled {
    pointer-events: none;
  }

  &.is-dragged {
    /* Be on top when dragging so loupe can overlap */
    z-index: 2;
  }
}

.spectrum-ColorWheel-internal{
  display: flex;
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: var(--spectrum-colorwheel-colorarea-container-size);
  height: var(--spectrum-colorwheel-colorarea-container-size);
  margin: auto;
}

.spectrum-ColorWheel-colorarea-container{
  height: auto;
  width: 100%;
  margin: var(--mod-colorwheel-colorarea-margin, var(--spectrum-colorwheel-colorarea-margin));
}

.spectrum-ColorWheel-slider {
  @extend %spectrum-ColorControl-hiddenField;
}

.spectrum-ColorWheel-handle {
  transform: translate(var(--spectrum-colorwheel-colorhandle-position), 0);
  left: 50%;
  top: 50%;
}

/* clip path set border-width wider than than spectrum-colorwheel-wheel to create "border"*/
.spectrum-ColorWheel-border{
  position: relative;
  background-color: var(--mod-colorwheel-border-color, var(--spectrum-colorwheel-border-color));
  width: var(--mod-colorwheel-width, var(--spectrum-colorwheel-width));
  height: var(--mod-colorwheel-height, var(--spectrum-colorwheel-height));
  clip-path: path(evenodd, var(--spectrum-colorwheel-path-borders));

  &.is-disabled{
    background-color: var(--highcontrast-colorwheel-border-color-disabled, var(--spectrum-colorwheel-border-color));
  }
}

/* hack: make sure we don't complain about these variables being unused*/
.ðŸ¤« {
  width: var(--track-width);
  border-width: var(--border-width);
}

/* --track-width and --border-width to be used with JS in calculating the clip-path paths and colorarea-container size */
.spectrum-ColorWheel-wheel{
  position: absolute;
  background: conic-gradient(from 90deg, red, rgb(255, 128, 0), rgb(255, 255, 0), rgb(128, 255, 0), rgb(0, 255, 0), rgb(0, 255, 128), rgb(0, 255, 255), rgb(0, 128, 255), rgb(0, 0, 255), rgb(128, 0, 255), rgb(255, 0, 255), rgb(255, 0, 128), red);
  top: 1px;
  left: 1px;
  width: 100%;
  height: 100%;
  clip-path: path(evenodd, var(--spectrum-colorwheel-path));

  --track-width: var(--mod-colorwheel-track-width, var(--spectrum-colorwheel-track-width));
  --border-width: var(--mod-colorwheel-border-width, var(--spectrum-colorwheel-border-width));

  &.is-disabled {
    pointer-events: none;
    background: var(--highcontrast-colorwheel-fill-color-disabled, var(--mod-colorwheel-fill-color-disabled, var(--spectrum-colorwheel-fill-color-disabled)));
  }
}
