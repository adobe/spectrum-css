/*
Copyright 2019 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

@import "../commons/basebutton.css";
@import "./actionbutton-generated.css";

.spectrum-ActionButton--sizeS {
  --spectrum-actionbutton-min-width: var(--spectrum-component-minimum-width-75);
  --spectrum-actionbutton-height: var(--spectrum-component-height-75);

  --spectrum-actionbutton-icon-size: var(--spectrum-workflow-icon-size-75);
  --spectrum-actionbutton-font-size: var(--spectrum-font-size-75);
  --spectrum-actionbutton-text-to-visual: var(--spectrum-text-to-visual-75);
  --spectrum-actionbutton-edge-to-hold-icon: var(--spectrum-action-button-edge-to-hold-icon-small);
  --spectrum-actionbutton-edge-to-visual: calc(var(--spectrum-edge-to-visual-75) - var(--spectrum-actionbutton-border-width));
  --spectrum-actionbutton-edge-to-text: calc(var(--spectrum-edge-to-text-75) - var(--spectrum-actionbutton-border-width));
  --spectrum-actionbutton-edge-to-visual-only: calc(var(--spectrum-edge-to-visual-only-75) - var(--spectrum-actionbutton-border-width));
}

.spectrum-ActionButton--sizeM {
  --spectrum-actionbutton-min-width: var(--spectrum-component-minimum-width-100);
  --spectrum-actionbutton-height: var(--spectrum-component-height-100);

  --spectrum-actionbutton-icon-size: var(--spectrum-workflow-icon-size-100);
  --spectrum-actionbutton-font-size: var(--spectrum-font-size-100);
  --spectrum-actionbutton-text-to-visual: var(--spectrum-text-to-visual-100);
  --spectrum-actionbutton-edge-to-hold-icon: var(--spectrum-action-button-edge-to-hold-icon-medium);
  --spectrum-actionbutton-edge-to-visual: calc(var(--spectrum-edge-to-visual-100) - var(--spectrum-actionbutton-border-width));
  --spectrum-actionbutton-edge-to-text: calc(var(--spectrum-edge-to-text-100) - var(--spectrum-actionbutton-border-width));
  --spectrum-actionbutton-edge-to-visual-only: calc(var(--spectrum-edge-to-visual-only-100) - var(--spectrum-actionbutton-border-width));
}

.spectrum-ActionButton--sizeL {
  --spectrum-actionbutton-min-width: var(--spectrum-component-minimum-width-200);
  --spectrum-actionbutton-height: var(--spectrum-component-height-200);

  --spectrum-actionbutton-icon-size: var(--spectrum-workflow-icon-size-200);
  --spectrum-actionbutton-font-size: var(--spectrum-font-size-200);
  --spectrum-actionbutton-text-to-visual: var(--spectrum-text-to-visual-200);
  --spectrum-actionbutton-edge-to-hold-icon: var(--spectrum-action-button-edge-to-hold-icon-large);
  --spectrum-actionbutton-edge-to-visual: calc(var(--spectrum-edge-to-visual-200) - var(--spectrum-actionbutton-border-width));
  --spectrum-actionbutton-edge-to-text: calc(var(--spectrum-edge-to-text-200) - var(--spectrum-actionbutton-border-width));
  --spectrum-actionbutton-edge-to-visual-only: calc(var(--spectrum-edge-to-visual-only-200) - var(--spectrum-actionbutton-border-width));
}

.spectrum-ActionButton--sizeXL {
  --spectrum-actionbutton-min-width: var(--spectrum-component-minimum-width-300);
  --spectrum-actionbutton-height: var(--spectrum-component-height-300);

  --spectrum-actionbutton-icon-size: var(--spectrum-workflow-icon-size-300);
  --spectrum-actionbutton-font-size: var(--spectrum-font-size-300);
  --spectrum-actionbutton-text-to-visual: var(--spectrum-text-to-visual-300);
  --spectrum-actionbutton-edge-to-hold-icon: var(--spectrum-action-button-edge-to-hold-icon-extra-large);
  --spectrum-actionbutton-edge-to-visual: calc(var(--spectrum-edge-to-visual-300) - var(--spectrum-actionbutton-border-width));
  --spectrum-actionbutton-edge-to-text: calc(var(--spectrum-edge-to-text-300) - var(--spectrum-actionbutton-border-width));
  --spectrum-actionbutton-edge-to-visual-only: calc(var(--spectrum-edge-to-visual-only-300) - var(--spectrum-actionbutton-border-width));
}

.spectrum-ActionButton {
  --spectrum-actionbutton-border-radius: var(--spectrum-corner-radius-100);
  --spectrum-actionbutton-border-width: var(--spectrum-border-width-100);

  --spectrum-actionbutton-focus-ring-gap: var(--spectrum-focus-ring-gap);
  --spectrum-actionbutton-focus-ring-thickness: var(--spectrum-focus-ring-thickness);
  --spectrum-actionbutton-focus-ring-color: var(--spectrum-focus-ring-color);
  --spectrum-actionbutton-focus-ring-border-radius: calc(var(--spectrum-actionbutton-border-radius) + var(--spectrum-actionbutton-focus-ring-gap));
}

.spectrum-ActionButton {
  @inherit: %spectrum-BaseButton;
  position: relative;
  padding-inline-start: 0;
  padding-inline-end: 0;

  min-inline-size: var(--spectrum-actionbutton-min-width);
  height: var(--spectrum-actionbutton-height);
  border-radius: var(--spectrum-actionbutton-border-radius);
  border-width: var(--spectrum-actionbutton-border-width);

  /* Start with text-only padding */
  padding-inline-start: var(--spectrum-actionbutton-edge-to-text);
  padding-inline-end: var(--spectrum-actionbutton-edge-to-text);
}

a.spectrum-ActionButton {
  @inherit: %spectrum-AnchorButton;
}

.spectrum-ActionButton-icon {
  width: var(--spectrum-actionbutton-icon-size);
  height: var(--spectrum-actionbutton-icon-size);

  & + .spectrum-ActionButton-label {
    /* Have gap on on the left */
    padding-inline-start: var(--spectrum-actionbutton-text-to-visual);

    /* Have no padding on the right (it's built into the element) */
    padding-inline-end: 0;
  }

  margin-inline-start: calc(-1 * (var(--spectrum-actionbutton-edge-to-text) - var(--spectrum-actionbutton-edge-to-visual)));
}

.spectrum-ActionButton-hold + .spectrum-ActionButton-icon,
.spectrum-ActionButton-icon:only-child {
  /* Use icon-only padding, subtracted from the default text-only padding */
  margin-inline-start: calc(-1 * (var(--spectrum-actionbutton-edge-to-text) - var(--spectrum-actionbutton-edge-to-visual-only)));
  margin-inline-end: calc(-1 * (var(--spectrum-actionbutton-edge-to-text) - var(--spectrum-actionbutton-edge-to-visual-only)));
}

.spectrum-ActionButton-label {
  @inherit: %spectrum-ButtonLabel;

  font-size: var(--spectrum-actionbutton-font-size);

  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.spectrum-ActionButton-hold {
  position: absolute;
  inset-inline-end: calc(var(--spectrum-actionbutton-edge-to-hold-icon) - var(--spectrum-actionbutton-border-width));
  inset-block-end: calc(var(--spectrum-actionbutton-edge-to-hold-icon) - var(--spectrum-actionbutton-border-width));

  transform: logical rotate(0deg);
}


/* special cases for focus-ring */
.spectrum-ActionButton {
  transition: border-color var(--spectrum-animation-duration-100) ease-in-out;

  &:after {
    pointer-events: none;
    content: '';
    position: absolute;
    left: 0;
    right: 0;
    bottom: 0;
    top: 0;
    margin: calc((var(--spectrum-actionbutton-focus-ring-gap) + var(--spectrum-actionbutton-border-width)) * -1);
    border-radius: var(--spectrum-actionbutton-focus-ring-border-radius);
    transition: box-shadow var(--spectrum-animation-duration-100) ease-in-out;
  }

  &:focus-ring {
    box-shadow: none !important;

    &:after {
      box-shadow: 0 0 0 var(--spectrum-actionbutton-focus-ring-thickness) var(--spectrum-actionbutton-focus-ring-color);
    }
  }
}

.spectrum-ActionButton--staticWhite {
  --spectrum-actionbutton-focus-ring-color: var(--spectrum-white);
}

.spectrum-ActionButton--staticBlack {
  --spectrum-actionbutton-focus-ring-color: var(--spectrum-black);
}
