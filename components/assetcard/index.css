/*!
 * Copyright 2024 Adobe. All rights reserved.
 *
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at <http://www.apache.org/licenses/LICENSE-2.0>
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */

/* outer container, unstyled */
.spectrum-AssetCard {
	/* todo: this isn't quite the size from the XD file as 232px is not a size token, so we use 224px */
	--spectrum-assetcard-asset-size: 224px;

	--spectrum-assetcard-border-color: var(--spectrum-transparent-black-25);

	/* contain selection indicator */
	position: relative;
	display: flex;
	flex-direction: column;
	inline-size: var(--spectrum-assetcard-asset-size);
	font-family: var(--spectrum-sans-font-family-stack);
	font-style: var(--spectrum-default-font-style);
	font-weight: var(--spectrum-body-sans-serif-font-weight);
	outline: none;
	cursor: pointer;

	&:lang(zh),
	&:lang(ja),
	&:lang(ko) {
		--spectrum-sans-font-family-stack: var(--spectrum-cjk-font-family-stack);
		--spectrum-default-font-style: var(--spectrum-body-cjk-font-style);

		--spectrum-heading-sans-serif-font-weight: var(--spectrum-heading-cjk-font-weight);
		--spectrum-heading-size-xs: var(--spectrum-heading-cjk-size-xs);
		--spectrum-heading-line-height: var(--spectrum-heading-cjk-line-height);

		--spectrum-body-sans-serif-font-weight: var(--spectrum-body-cjk-font-weight);
		--spectrum-body-line-height: var(--spectrum-body-cjk-line-height);

		letter-spacing: var(--spectrum-cjk-letter-spacing);
	}

	&.is-selected,
	&:hover,
	&:focus-visible {
		--spectrum-assetcard-border-color: var(--spectrum-gray-500);
	}

	&:active {
		--spectrum-assetcard-border-color: var(--spectrum-gray-600);
	}

	&:focus-visible .spectrum-AssetCard-assetContainer::before {
		opacity: 1;
	}

	/* base selection styles shared by every selection mode */
	/* drop target looks identical to selected */
	&.is-drop-target,
	&.is-selected {
		--spectrum-assetcard-border-color: var(--spectrum-assetcard-border-color-selected, var(--spectrum-blue-900));

		.spectrum-AssetCard-selectionOverlay {
			/* was: rgb(27 127 245 / 10%); */
			background-color: color-mix(in sRGB, var(--spectrum-stack-item-selected-background-color-emphasized) 10%, transparent);
		}

		&:hover {
			--spectrum-assetcard-border-color: var(--spectrum-assetcard-border-color-selected-hover, var(--spectrum-blue-900));
		}

		&:active {
			--spectrum-assetcard-border-color: var(--spectrum-assetcard-border-color-selected-down, var(--spectrum-blue-1000));
		}
	}

	/* Aligns checkbox color indicator with the border when spectrum-AssetCard card receives state */
	.spectrum-Checkbox-box::before {
		border-color: var(--spectrum-assetcard-border-color);
	}
}

/* the container for the asset (background, border, etc) */
.spectrum-AssetCard-assetContainer {
	/* contain overlay */
	position: relative;

	display: flex;
	align-items: center;
	justify-content: center;

	inline-size: var(--spectrum-assetcard-asset-size);
	block-size: var(--spectrum-assetcard-asset-size);

	border-radius: var(--spectrum-corner-radius-100);

	background-color: var(--spectrum-gray-75);

	transition: border var(--spectrum-animation-duration-100) ease-in-out;

	/* focus indicator */
	&::before {
		content: "";

		position: absolute;
		inset: calc(-1 * var(--spectrum-focus-indicator-gap));

		border: var(--spectrum-focus-indicator-thickness) solid var(--spectrum-assestcard-focus-indicator-color);

		border-radius: var(--spectrum-assetcard-focus-ring-border-radius);

		opacity: 0;
		pointer-events: none;
		transition: opacity var(--spectrum-animation-duration-100) ease-in-out;
	}

	/* border */
	&::after {
		content: "";
		position: absolute;
		inset: 0;
		z-index: 3;

		border: var(--spectrum-border-width-100) solid var(--spectrum-assetcard-border-color);
		border-radius: calc(var(--spectrum-corner-radius-100) - var(--spectrum-border-width-100));
	}
}

/* the actual asset */
.spectrum-AssetCard-asset {
	object-fit: contain;

	inline-size: 100%;
	block-size: 100%;

	transition:
		inline-size var(--spectrum-animation-duration-100) ease-in-out,
		block-size var(--spectrum-animation-duration-100) ease-in-out;

	border-radius: calc(var(--spectrum-corner-radius-100) - var(--spectrum-border-width-100));
}

/* highlight */
.spectrum-AssetCard--highlightSelection:where(.is-selected) .spectrum-AssetCard-asset {
	inline-size: 90%;
	block-size: 90%;

	/* no radius, otherwise square assets get rounded */
	border-radius: 0;
}

/* header area, contains the header and optional content */
.spectrum-AssetCard-header {
	display: flex;
	flex-direction: row;
	align-items: center;

	/* space between the asset and the header, place it on the header so header can be optional */
	margin-block-start: var(--spectrum-spacing-300);
}

/* bold title */
.spectrum-AssetCard-title {
	flex-grow: 1;

	color: var(--spectrum-gray-900);

	font-weight: var(--spectrum-heading-sans-serif-font-weight);
	font-size: var(--spectrum-assetcard-title-font-size, var(--spectrum-heading-size-xs));
	line-height: var(--spectrum-heading-line-height);
}

/* optional content placed to the right of the title */
.spectrum-AssetCard-headerContent {
	color: var(--spectrum-gray-900);

	font-size: var(--spectrum-assetcard-header-content-font-size, var(--spectrum-heading-size-xxs));
	font-weight: var(--spectrum-body-sans-serif-font-weight);
	line-height: var(--spectrum-body-line-height);
}

/* content area, the last thing in the card */
.spectrum-AssetCard-content {
	flex-grow: 1;

	/* space between the content and the header, place it on the content so content can be optional */
	margin-block-start: var(--spectrum-spacing-75);

	color: var(--spectrum-gray-700);
}

/* Selection styles */
.spectrum-AssetCard-selectionOverlay {
	position: absolute;
	z-index: 1;
	inset: 0;

	background-color: transparent;

	pointer-events: none;
	transition: background-color var(--spectrum-animation-duration-100) ease-in-out;

	border-radius: calc(var(--spectrum-corner-radius-100) - 1px);
}

/* the checkbox or selection order indicator */
.spectrum-AssetCard-selectionIndicator {
	position: absolute;
	z-index: 2;
	inset-inline-start: var(--spectrum-assetcard-selectionindicator-margin);
	inset-block-start: var(--spectrum-assetcard-selectionindicator-margin);

	display: none;
	align-items: center;
	justify-content: center;

	inline-size: var(--spectrum-card-selection-background-size);
	block-size: var(--spectrum-card-selection-background-size);

	border-radius: var(--spectrum-corner-radius-100);

	box-shadow: 0 var(--spectrum-drop-shadow-y-200) var(--spectrum-drop-shadow-blur) var(--spectrum-drop-shadow-color-200);

	color: var(--spectrum-white);
	font-weight: var(--spectrum-heading-sans-serif-font-weight);
	font-size: var(--spectrum-heading-size-s);

	transition: opacity var(--spectrum-animation-duration-100) ease-in-out;
	background-color: transparent;
}

.spectrum-AssetCard-selectionOrder {
	line-height: 0;
}

/* with a checkbox */
.spectrum-AssetCard--checkboxSelection {
	.spectrum-AssetCard-selectionIndicator {
		background-color: color-mix(in sRGB, var(--spectrum-gray-75) 90%, transparent);

		.spectrum-AssetCard-selectionOrder {
			display: none;
		}
	}

	&.is-selected,
	&:focus-visible,
	&:hover {
		.spectrum-AssetCard-selectionIndicator {
			display: flex;
			pointer-events: all;
		}
	}
}

/* with the little order flag that shows the selection order */
.spectrum-AssetCard--orderedSelection {
	.spectrum-AssetCard-selectionIndicator {
		background-color: var(--spectrum-assetcard-selectionindicator-background-color-ordered, var(--spectrum-blue-900));

		.spectrum-AssetCard-checkbox {
			display: none;
		}
	}

	&.is-selected .spectrum-AssetCard-selectionIndicator {
		display: flex;
		pointer-events: all;
	}
}

@media (forced-colors: active) {
	.spectrum-AssetCard {
		--spectrum-assetcard-border-color-selected: Highlight;
		--spectrum-assetcard-border-color-selected-hover: Highlight;
		--spectrum-assetcard-border-color-selected-down: Highlight;

		&.is-selected,
		&:hover,
		&:focus-visible {
			--spectrum-assetcard-border-color: Highlight;
		}

		.spectrum-AssetCard-selectionIndicator {
			color: SelectedItemText;
		}

		&:where(.spectrum-AssetCard--orderedSelection) .spectrum-AssetCard-selectionIndicator {
			background-color: Highlight;
		}

		.spectrum-AssetCard-selectionOrder {
			/* prevents text backplate on displayed order number */
			forced-color-adjust: none;
		}
	}
}
