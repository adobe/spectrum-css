/*!
 * Copyright 2024 Adobe. All rights reserved.
 *
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at <http://www.apache.org/licenses/LICENSE-2.0>
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */

@import "@spectrum-css/commons/basebutton.css";
@import "themes/spectrum-two.css";

/* Windows high contrast mode */
@media (forced-colors: active) {
	.spectrum-Picker {
		--highcontrast-picker-focus-indicator-color: Highlight;

		--highcontrast-picker-border-color-default: ButtonBorder;
		--highcontrast-picker-border-color-hover: Highlight;
		--highcontrast-picker-border-color-disabled: GrayText;

		--highcontrast-picker-content-color-default: ButtonText;
		--highcontrast-picker-content-color-disabled: GrayText;
		--highcontrast-picker-background-color: ButtonFace;

		&:focus-visible,
		&.is-keyboardFocused {
			--highcontrast-picker-border-color-hover: ButtonText;
		}

		/* Focus indicator */
		&::after {
			/* Make sure default transparent border stays transparent. */
			forced-color-adjust: none;
		}

		.spectrum-Picker-label {
			/* Remove additional text backplate added in WHCM (Edge). */
			forced-color-adjust: none;
		}
	}
}

.spectrum-Picker {
	@extend %spectrum-BaseButton;

	/* Layout */
	display: flex;
	box-sizing: border-box;
	inline-size: var(--mod-picker-inline-size, var(--spectrum-picker-inline-size));
	min-inline-size: calc(var(--spectrum-picker-minimum-width-multiplier) * var(--mod-picker-block-size, var(--spectrum-picker-block-size)));

	/* Minimum width is 2 times the height */
	max-inline-size: 100%;
	block-size: var(--mod-picker-block-size, var(--spectrum-picker-block-size));
	margin-block-start: var(--mod-picker-spacing-label-to-picker, var(--spectrum-picker-spacing-label-to-picker));
	padding-block: 0;

	padding-inline-start: var(--mod-picker-spacing-edge-to-text, var(--spectrum-picker-spacing-edge-to-text));
	padding-inline-end: var(--mod-picker-spacing-edge-to-disclosure-icon, var(--spectrum-picker-spacing-edge-to-disclosure-icon));

	color: var(--highcontrast-picker-content-color-default, var(--mod-picker-font-color-default, var(--spectrum-picker-font-color-default)));
	background-color: var(--highcontrast-picker-background-color, var(--mod-picker-background-color-default, var(--spectrum-picker-background-color-default)));
	border-color: var(--highcontrast-picker-border-color-default, var(--mod-picker-border-color-default, var(--spectrum-picker-border-color-default)));
	border-style: solid;

	border-width: var(--mod-picker-border-width, var(--spectrum-picker-border-width));
	border-radius: var(--mod-picker-border-radius, var(--spectrum-picker-border-radius));

	transition:
		background-color var(--mod-picker-animation-duration, var(--spectrum-picker-animation-duration)),
		box-shadow var(--mod-picker-animation-duration, var(--spectrum-picker-animation-duration)),
		border-color var(--mod-picker-animation-duration, var(--spectrum-picker-animation-duration)) ease-in-out;

	/* Focus indicator */
	&::after {
		pointer-events: none;
		content: "";
		position: absolute;
		inset-block: 0;

		inset-inline: 0;

		inline-size: calc(100% + (var(--mod-picker-focus-indicator-gap, var(--spectrum-picker-focus-indicator-gap)) * 2) + (var(--mod-picker-border-width, var(--spectrum-picker-border-width)) * 2));
		block-size: calc(100% + (var(--mod-picker-focus-indicator-gap, var(--spectrum-picker-focus-indicator-gap)) * 2) + (var(--mod-picker-border-width, var(--spectrum-picker-border-width)) * 2));

		margin-block-start: calc((var(--mod-picker-focus-indicator-gap, var(--spectrum-picker-focus-indicator-gap)) + var(--mod-picker-focus-indicator-thickness, var(--spectrum-picker-focus-indicator-thickness)) + var(--mod-picker-border-width, var(--spectrum-picker-border-width))) * -1);

		margin-inline-start: calc((var(--mod-picker-focus-indicator-gap, var(--spectrum-picker-focus-indicator-gap)) + var(--mod-picker-focus-indicator-thickness, var(--spectrum-picker-focus-indicator-thickness)) + var(--mod-picker-border-width, var(--spectrum-picker-border-width))) * -1);
		border-color: transparent;
		border-style: solid;
		border-width: var(--mod-picker-focus-indicator-thickness, var(--spectrum-picker-focus-indicator-thickness));
		border-radius: calc(var(--mod-picker-border-radius, var(--spectrum-picker-border-radius)) + var(--mod-picker-focus-indicator-gap, var(--spectrum-picker-focus-indicator-gap)) + var(--mod-picker-border-width, var(--spectrum-picker-border-width)));
	}

	&:hover {
		color: var(--highcontrast-picker-content-color-default, var(--mod-picker-font-color-hover, var(--spectrum-picker-font-color-hover)));
		background-color: var(--highcontrast-picker-background-color, var(--mod-picker-background-color-hover, var(--spectrum-picker-background-color-hover)));
		border-color: var(--highcontrast-picker-border-color-hover, var(--mod-picker-border-color-hover, var(--spectrum-picker-border-color-hover)));

		.spectrum-Picker-menuIcon {
			color: var(--highcontrast-picker-content-color-default, var(--mod-picker-icon-color-hover, var(--spectrum-picker-icon-color-hover)));
		}
	}

	&:active {
		background-color: var(--highcontrast-picker-background-color, var(--mod-picker-background-color-active, var(--spectrum-picker-background-color-active)));
		border-color: var(--highcontrast-picker-border-color-default, var(--mod-picker-border-active, var(--spectrum-picker-border-color-active)));

		/* Focus indicator */
		&::after {
			border-color: transparent;
		}

		&.is-placeholder .spectrum-Picker-label {
			color: var(--highcontrast-picker-content-color-default, var(--mod-picker-font-color-active, var(--spectrum-picker-font-color-active)));
		}
	}

	&:focus-visible,
	&.is-keyboardFocused {
		color: var(--highcontrast-picker-content-color-default, var(--mod-picker-font-color-key-focus, var(--spectrum-picker-font-color-key-focus)));
		background-color: var(--highcontrast-picker-background-color, var(--mod-picker-background-color-key-focus, var(--spectrum-picker-background-color-key-focus)));
		border-color: var(--highcontrast-picker-border-color-default, var(--mod-picker-border-color-key-focus, var(--spectrum-picker-border-color-key-focus)));
		outline: none;

		/* Focus indicator */
		&::after {
			border-color: var(--highcontrast-picker-focus-indicator-color, var(--mod-picker-focus-indicator-color, var(--spectrum-picker-focus-indicator-color)));
		}

		&.is-placeholder {
			color: var(--highcontrast-picker-content-color-default, var(--mod-picker-font-color-key-focus, var(--spectrum-picker-font-color-key-focus)));
		}

		.spectrum-Picker-menuIcon {
			color: var(--highcontrast-picker-content-color-default, var(--mod-picker-icon-color-key-focus, var(--spectrum-picker-icon-color-key-focus)));
		}
	}

	&.is-open:not(.spectrum-Picker--quiet, :disabled, .is-disabled) {
		color: var(--highcontrast-picker-content-color-default, var(--mod-picker-font-color-default-open, var(--spectrum-picker-font-color-default-open)));
		background-color: var(--highcontrast-picker-background-color, var(--mod-picker-background-color-default-open, var(--spectrum-picker-background-color-default-open)));
		border-color: var(--highcontrast-picker-border-color-default, var(--mod-picker-border-default-open, var(--spectrum-picker-border-color-default-open)));

		&:hover {
			color: var(--highcontrast-picker-content-color-default, var(--mod-picker-font-color-hover-open, var(--spectrum-picker-font-color-hover-open)));
			background-color: var(--highcontrast-picker-background-color, var(--mod-picker-background-color-hover-open, var(--spectrum-picker-background-color-hover-open)));
			border-color: var(--highcontrast-picker-border-color-hover, var(--mod-picker-border-color-hover-open, var(--spectrum-picker-border-color-hover-open)));

			.spectrum-Picker-menuIcon {
				color: var(--highcontrast-picker-content-color-default, var(--mod-picker-icon-color-hover-open, var(--spectrum-picker-icon-color-hover-open)));
			}
		}

		.spectrum-Picker-menuIcon {
			color: var(--highcontrast-picker-content-color-default, var(--mod-picker-icon-color-default-open, var(--spectrum-picker-icon-color-default-open)));
		}
	}

	&.is-invalid:not(:disabled, .is-disabled) {
		border-color: var(--highcontrast-picker-border-color-default, var(--mod-picker-border-color-error-default, var(--spectrum-picker-border-color-error-default)));

		.spectrum-Picker-validationIcon {
			color: var(--highcontrast-picker-content-color-default, var(--mod-picker-icon-color-error, var(--spectrum-picker-icon-color-error)));
		}

		&:hover {
			border-color: var(--highcontrast-picker-border-color-hover, var(--mod-picker-border-color-error-hover, var(--spectrum-picker-border-color-error-hover)));
		}

		&:active {
			border-color: var(--highcontrast-picker-border-color-default, var(--mod-picker-border-color-error-active, var(--spectrum-picker-border-color-error-active)));
		}

		&.is-open {
			border-color: var(--highcontrast-picker-border-color-default, var(--mod-picker-border-color-error-default-open, var(--spectrum-picker-border-color-error-default-open)));
		}

		&.is-open:hover {
			border-color: var(--highcontrast-picker-border-color-hover, var(--mod-picker-border-color-error-hover-open, var(--spectrum-picker-border-color-error-hover-open)));
		}

		&:focus-visible,
		&.is-keyboardFocused {
			border-color: var(--highcontrast-picker-border-color-default, var(--mod-picker-border-color-error-key-focus, var(--spectrum-picker-border-color-error-key-focus)));
		}
	}

	&.is-loading {
		.spectrum-Picker-menuIcon {
			color: var(--highcontrast-picker-content-color-disabled, var(--mod-picker-icon-color-disabled, var(--spectrum-picker-icon-color-disabled)));
		}
	}

	&.is-loading,
	&.is-invalid {
		.spectrum-Picker-label {
			/* @deprecation --mod-picker-spacing-text-to-alert-icon-inline-start has been renamed to --mod-picker-spacing-text-to-icon-inline-end
	   and will be removed in a future version. */
			margin-inline-end: var(--mod-picker-spacing-text-to-icon-inline-end, var(--mod-picker-spacing-text-to-alert-icon-inline-start, var(--spectrum-picker-spacing-text-to-icon-inline-end)));
		}
	}

	.spectrum-Picker-icon {
		flex-shrink: 0;
		margin-inline-end: var(--mod-picker-spacing-text-to-icon, var(--spectrum-picker-spacing-text-to-icon));
	}
}

.spectrum-Picker-label {
	overflow: hidden;

	/* Be the biggest, but also shrink! */
	flex: 1 1 auto;

	padding-block-start: var(--mod-picker-spacing-top-to-text, var(--spectrum-picker-spacing-top-to-text));
	padding-block-end: calc(var(--mod-picker-spacing-bottom-to-text, var(--spectrum-picker-spacing-bottom-to-text)) - var(--mod-picker-border-width, var(--spectrum-picker-border-width)));

	font-size: var(--mod-picker-font-size, var(--spectrum-picker-font-size));
	font-weight: var(--mod-picker-font-weight, var(--spectrum-picker-font-weight));
	line-height: var(--mod-picker-line-height, var(--spectrum-picker-line-height));
	text-align: start;

	text-overflow: ellipsis;

	white-space: nowrap;

	&.is-placeholder {
		font-weight: var(--mod-picker-placeholder-font-weight, var(--spectrum-picker-font-weight));
		font-style: var(--mod-picker-placeholder-font-style, var(--spectrum-picker-placeholder-font-style));

		color: var(--highcontrast-picker-content-color-default, var(--mod-picker-font-color-default, var(--spectrum-picker-font-color-default)));
		transition: color var(--mod-picker-animation-duration, var(--spectrum-picker-animation-duration)) ease-in-out;

		&:hover {
			color: var(--highcontrast-picker-content-color-default, var(--mod-picker-font-color-hover, var(--spectrum-picker-font-color-hover)));
		}

		&:active {
			color: var(--highcontrast-picker-content-color-default, var(--mod-picker-font-color-active, var(--spectrum-picker-font-color-active)));
		}
	}
}

/* The picker chevron */
.spectrum-Picker-menuIcon {
	position: relative;
	display: inline-block;
	flex-shrink: 0;
	margin-block: var(--mod-picker-spacing-top-to-disclosure-icon, var(--spectrum-picker-spacing-top-to-disclosure-icon));

	margin-inline-start: var(--mod-picker-spacing-icon-to-disclosure-icon, var(--spectrum-picker-spacing-icon-to-disclosure-icon));

	color: var(--highcontrast-picker-content-color-default, var(--mod-picker-icon-color-default, var(--spectrum-picker-icon-color-default)));
	vertical-align: top;
	transition: color var(--mod-picker-animation-duration, var(--spectrum-picker-animation-duration)) ease-out;

	&:active {
		color: var(--highcontrast-picker-content-color-default, var(--mod-picker-icon-color-active, var(--spectrum-picker-icon-color-active)));
	}
}

.spectrum-Picker-validationIcon {
	margin-block-start: calc(var(--mod-picker-spacing-top-to-alert-icon, var(--spectrum-picker-spacing-top-to-alert-icon)) - var(--mod-picker-border-width, var(--spectrum-picker-border-width)));
	margin-block-end: calc(var(--mod-picker-spacing-top-to-alert-icon, var(--spectrum-picker-spacing-top-to-alert-icon)) - var(--mod-picker-border-width, var(--spectrum-picker-border-width)));
}

.spectrum-Picker .spectrum-ProgressCircle {
	margin-block-start: calc(var(--mod-picker-spacing-top-to-progress-circle, var(--spectrum-picker-spacing-top-to-progress-circle)) - var(--mod-picker-border-width, var(--spectrum-picker-border-width)));
	margin-block-end: calc(var(--mod-picker-spacing-top-to-progress-circle, var(--spectrum-picker-spacing-top-to-progress-circle)) - var(--mod-picker-border-width, var(--spectrum-picker-border-width)));
}

.spectrum-Picker-label ~ .spectrum-Picker-menuIcon {
	margin-inline-start: var(--mod-picker-spacing-text-to-icon, var(--spectrum-picker-spacing-text-to-icon));
}

.spectrum-Picker + .spectrum-Popover--bottom.is-open {
	transform: translateY(var(--mod-picker-spacing-picker-to-popover, var(--spectrum-picker-spacing-picker-to-popover)));
}

.spectrum-Picker--quiet {
	inline-size: auto;
	min-inline-size: 0;
	margin-block-start: calc(var(--mod-picker-spacing-label-to-picker-quiet, var(--spectrum-picker-spacing-label-to-picker-quiet)) + (1px));
	padding-inline: var(--mod-picker-spacing-edge-to-text-quiet, var(--spectrum-picker-spacing-edge-to-text-quiet));
	color: var(--highcontrast-picker-content-color-default, var(--mod-picker-font-color-default, var(--spectrum-picker-font-color-default)));
	background-color: var(--highcontrast-picker-background-color, transparent);
	border: none;
	border-radius: 0;

	&.spectrum-Picker--sideLabel {
		margin-block-start: 0;
	}

	.spectrum-Picker-menuIcon {
		margin-inline-end: var(--mod-picker-spacing-edge-to-disclosure-icon-quiet, var(--spectrum-picker-spacing-edge-to-disclosure-icon-quiet));
	}

	&::after {
		inline-size: auto;
		block-size: auto;
		border: none;
	}

	&:hover {
		background-color: var(--highcontrast-picker-background-color, transparent);
	}

	&:focus-visible,
	&.is-keyboardFocused {
		background-color: var(--highcontrast-picker-background-color, transparent);

		/* Focus indicator changes from a ring to a line underneath. */
		&::after {
			margin: calc((var(--mod-picker-focus-indicator-gap, var(--spectrum-picker-focus-indicator-gap)) + var(--mod-picker-border-width, var(--spectrum-picker-border-width))) * -1) 0;
			border: none;
			border-radius: 0;
			box-shadow: 0 var(--mod-picker-focus-indicator-thickness, var(--spectrum-picker-focus-indicator-thickness)) 0 0 var(--highcontrast-picker-focus-indicator-color, var(--mod-picker-focus-indicator-color, var(--spectrum-picker-focus-indicator-color)));
		}
	}

	&:active,
	&.is-open {
		background-color: var(--highcontrast-picker-background-color, transparent);
	}

	&.spectrum-Picker:disabled,
	&.spectrum-Picker.is-disabled {
		background-color: var(--highcontrast-picker-background-color, transparent);
	}
}

.spectrum-Picker--sideLabel {
	display: inline-flex;
	vertical-align: top;
}

/* Disabled state:
   Make sure this appears after any use of :hover while postcss-hover-media-feature is being used. The plugin moves
   all hover styles within a media query that changes the order of the CSS, affecting styles with the same specificity. */
.spectrum-Picker:disabled,
.spectrum-Picker.is-disabled {
	cursor: default;
	color: var(--highcontrast-picker-content-color-disabled, var(--mod-picker-font-color-disabled, var(--spectrum-picker-font-color-disabled)));
	background-color: var(--highcontrast-picker-background-color, var(--mod-picker-background-color-disabled, var(--spectrum-picker-background-color-disabled)));
	border-color: var(--highcontrast-picker-border-color-disabled, transparent);

	.spectrum-Picker-icon,
	.spectrum-Picker-menuIcon,
	.spectrum-Picker-validationIcon {
		color: var(--highcontrast-picker-content-color-disabled, var(--mod-picker-icon-color-disabled, var(--spectrum-picker-icon-color-disabled)));
	}

	.spectrum-Picker-label.is-placeholder {
		color: var(--highcontrast-picker-content-color-disabled, var(--mod-picker-font-color-disabled, var(--spectrum-picker-font-color-disabled)));
	}
}
