/*
Copyright 2019 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

@import "../commons/basebutton-coretokens.css";

/* default for all buttons */
.spectrum-Button {
  --spectrum-button-animation-duration: var(--spectrum-animation-duration-100);
  --spectrum-button-border-radius: var(--spectrum-corner-radius-100);
  --spectrum-button-border-width: var(--spectrum-border-width-200);

  --spectrum-button-focus-ring-gap: var(--spectrum-focus-indicator-gap);
  --spectrum-button-focus-ring-border-radius: calc(var(--spectrum-button-border-radius) + var(--spectrum-button-focus-ring-gap));

  --spectrum-button-focus-ring-gap: var(--spectrum-focus-indicator-gap);
  --spectrum-button-focus-ring-thickness: var(--spectrum-focus-indicator-thickness);
  --spectrum-button-focus-indicator-color: var(--spectrum-focus-indicator-color);
  --spectrum-button-focus-ring-border-radius: calc(var(--spectrum-button-border-radius) + var(--spectrum-button-focus-ring-gap));
}


.spectrum-Button--sizeS {
  --spectrum-button-min-width: calc(var(--spectrum-component-height-75) * var(--spectrum-button-minimum-width-multiplier));

  --spectrum-button-border-radius: var(--spectrum-component-pill-edge-to-text-75);
  --spectrum-button-height: var(--spectrum-component-height-75);

  --spectrum-button-font-size: var(--spectrum-font-size-75);

  --spectrum-button-edge-to-visual: calc(var(--spectrum-component-pill-edge-to-visual-75) - var(--spectrum-button-border-width));
  --spectrum-button-edge-to-text: calc(var(--spectrum-component-pill-edge-to-text-75) - var(--spectrum-button-border-width));
  --spectrum-button-padding-label-to-icon: var(--spectrum-text-to-visual-75);
}

.spectrum-Button--sizeM {
  --spectrum-button-min-width: calc(var(--spectrum-component-height-100) * var(--spectrum-button-minimum-width-multiplier));

  --spectrum-button-border-radius: var(--spectrum-component-pill-edge-to-text-100);
  --spectrum-button-height: var(--spectrum-component-height-100);

  --spectrum-button-font-size: var(--spectrum-font-size-100);



  --spectrum-button-edge-to-visual: calc(var(--spectrum-component-pill-edge-to-visual-100) - var(--spectrum-button-border-width));
  --spectrum-button-edge-to-text: calc(var(--spectrum-component-pill-edge-to-text-100) - var(--spectrum-button-border-width));
  --spectrum-button-padding-label-to-icon: var(--spectrum-text-to-visual-100);
}

.spectrum-Button--sizeL {
  --spectrum-button-min-width: calc(var(--spectrum-component-height-200) * var(--spectrum-button-minimum-width-multiplier));

  --spectrum-button-border-radius: var(--spectrum-component-pill-edge-to-text-200);
  --spectrum-button-height: var(--spectrum-component-height-200);

  --spectrum-button-font-size: var(--spectrum-font-size-200);

  --spectrum-button-edge-to-visual: calc(var(--spectrum-component-pill-edge-to-visual-200) - var(--spectrum-button-border-width));
  --spectrum-button-edge-to-text: calc(var(--spectrum-component-pill-edge-to-text-200) - var(--spectrum-button-border-width));
  --spectrum-button-padding-label-to-icon: var(--spectrum-text-to-visual-200);
}

.spectrum-Button--sizeXL {
  --spectrum-button-min-width: calc(var(--spectrum-component-height-300) * var(--spectrum-button-minimum-width-multiplier));

  --spectrum-button-border-radius: var(--spectrum-component-pill-edge-to-text-300);
  --spectrum-button-height: var(--spectrum-component-height-300);

  --spectrum-button-font-size: var(--spectrum-font-size-300);

  --spectrum-button-edge-to-visual: calc(var(--spectrum-component-pill-edge-to-visual-300) - var(--spectrum-button-border-width));
  --spectrum-button-edge-to-text: calc(var(--spectrum-component-pill-edge-to-text-300) - var(--spectrum-button-border-width));
  --spectrum-button-padding-label-to-icon: var(--spectrum-text-to-visual-300);

}


.spectrum-Button {
  @inherit: %spectrum-BaseButton;
  @inherit: %spectrum-ButtonWithFocusRing;


  border-radius: var(--mod-button-border-radius, var(--spectrum-button-border-radius));
  border-width: var(--mod-button-border-width, var(--spectrum-button-border-width));
  border-style: solid;
  block-size: auto;
  height: var(--mod-button-height, var(--spectrum-button-height));

  min-width: var(--mod-button-min-width, var(--spectrum-button-min-width));
  min-block-size: var(--mod-button-min-width, var(--spectrum-button-min-width));
  position: relative;


  padding-block-start: 0;
  padding-block-end: 0;

  position: relative;

  min-inline-size: var(--mod-button-min-width, var(--spectrum-button-min-width));
  min-block-size: var(--mod-spectrum-button-height, var(--spectrum-button-height));

  height: var(--mod-button-height, var(--spectrum-button-height));

  border-radius: var(--mod-button-border-radius, var(--spectrum-button-border-radius));
  border-width: var(--mod-button-border-width, var(--spectrum-button-border-width));

  /* Start with text-only padding */
  padding-inline-start: var(--mod-button-edge-to-visual, var(--spectrum-button-edge-to-visual));
  padding-inline-end: var(--mod-button-edge-to-text, var(--spectrum-button-edge-to-text));


  font-size: var(--mod-button-font-size, var(--spectrum-button-font-size));
  font-weight: var(--mod-font-weight-bold, var(--spectrum-font-weight-bold));

  &:hover,
  &:active {
    box-shadow: none;
  }

  /* let staticColor variants inherit their color */
  color: inherit;

  .spectrum-Icon {
    inset-inline-end: calc(var(--mod-spectrum-button-edge-to-visual, var(--spectrum-button-edge-to-visual)) - var(--mod-button-border-width, var(--spectrum-button-border-width)));
    inset-block-end: calc(var(--mod-spectrum-button-edge-to-visual, var(--spectrum-button-edge-to-visual)) - var(--mod-button-border-width, var(--spectrum-button-border-width)));

    color: inherit;


  }

  .spectrum-Icon+.spectrum-Button-label {
    /* Have gap on on the left */
    padding-inline-start: var(--mod-button-padding-label-to-icon, var(--spectrum-button-padding-label-to-icon));

    /*
      Have no padding on the right (it's built into the element)
      This will fail if --spectrum-button-primary-fill-textonly-padding-right !== --spectrum-button-padding-right
    */
    padding-inline-end: 0;
  }


  /* correct focus-ring radius for t-shirt sizing */
  &:after {
    border-radius: calc(var(--mod-button-border-radius, var(--spectrum-button-border-radius)) + var(--mod-focus-indicator-gap, var(--spectrum-focus-indicator-gap)));
  }
}

a.spectrum-Button {
  @inherit: %spectrum-AnchorButton;
}

.spectrum-Button-label {
  @inherit: %spectrum-ButtonLabel;

}

.spectrum-Button {

  &:focus-ring,
  &.is-focused {
    &:after {
      box-shadow: 0 0 0 var(--mod-button-focus-ring-thickness, var(--spectrum-button-focus-ring-thickness)) var(--mod-button-focus-ring-color, var(--spectrum-button-focus-indicator-color));
    }
  }
}


/* special cases for focus-ring */
.spectrum-Button {
  transition: border-color var(--mod-button-animation-duration, var(--spectrum-button-animation-duration)) ease-in-out;

  &:after {
    position: absolute;
    inset: 0;

    margin: calc((var(--mod-button-focus-ring-gap, var(--spectrum-button-focus-ring-gap)) + var(--mod-button-border-width, var(--spectrum-button-border-width))) * -1);

    border-radius: var(--mod-button-focus-ring-border-radius, var(--spectrum-button-focus-ring-border-radius));

    transition: box-shadow var(--mod-button-animation-duration, var(--spectrum-button-animation-duration)) ease-in-out;

    pointer-events: none;
    content: '';
  }

  &:focus-ring {
    /* kill the default ring */
    box-shadow: none;

    &:after {
      box-shadow: 0 0 0 var(--mod-button-focus-ring-thickness, var(--spectrum-button-focus-ring-thickness)) var(--highcontrast-button-focus-ring-color, var(--mod-button-focus-ring-color,
            var(--mod-button-focus-ring-color, var(--spectrum-button-focus-indicator-color))));
    }
  }
}

/* Core Token Theming */
/* former skin.css, applied / copied from actionbutton/index.css  */

.spectrum-Button {
  @inherit: %spectrum-BaseButton;

  background-color: var(--highcontrast-button-background-color-default, var(--mod-button-background-color-default, var(--spectrum-button-background-color-default)));
  border-color: var(--highcontrast-button-border-color-default, var(--mod-button-border-color-default, var(--spectrum-button-border-color-default)));
  color: var(--highcontrast-button-content-color-default, var(--mod-button-content-color-default, var(--spectrum-button-content-color-default)));

  &:hover {
    background-color: var(--highcontrast-button-background-color-hover, var(--mod-button-background-color-hover, var(--spectrum-button-background-color-hover)));
    border-color: var(--highcontrast-button-border-color-hover, var(--mod-button-border-color-hover, var(--spectrum-button-border-color-hover)));
    color: var(--highcontrast-button-content-color-hover, var(--mod-button-content-color-hover, var(--spectrum-button-content-color-hover)));
  }

  &:focus-ring {
    background-color: var(--highcontrast-button-background-color-focus, var(--mod-button-background-color-focus, var(--spectrum-button-background-color-focus)));
    border-color: var(--highcontrast-button-border-color-focus, var(--mod-button-border-color-focus, var(--spectrum-button-border-color-focus)));
    color: var(--highcontrast-button-content-color-focus, var(--mod-button-content-color-focus, var(--spectrum-button-content-color-focus)));
  }

  &:active {
    background-color: var(--highcontrast-button-background-color-down, var(--mod-button-background-color-down, var(--spectrum-button-background-color-down)));
    border-color: var(--highcontrast-button-border-color-down, var(--mod-button-border-color-down, var(--spectrum-button-border-color-down)));
    color: var(--highcontrast-button-content-color-down, var(--mod-button-content-color-down, var(--spectrum-button-content-color-down)));
  }

  &:disabled,
  &.is-disabled {
    background-color: var(--highcontrast-button-background-color-disabled, var(--mod-button-background-color-disabled, var(--spectrum-button-background-color-disabled)));
    border-color: var(--highcontrast-button-border-color-disabled, var(--mod-button-border-color-disabled, var(--spectrum-button-border-color-disabled)));
    color: var(--highcontrast-button-content-color-disabled, var(--mod-button-content-color-disabled, var(--spectrum-button-content-color-disabled)));
  }
}

/* windows high contrast mode over-writes for accent variant */
@media (forced-colors: active) {
  .spectrum-Button {
    &:focus-ring {
      &:after {
        forced-color-adjust: none;
        box-shadow: 0 0 0 var(--mod-button-focus-ring-thickness, var(--spectrum-button-focus-ring-thickness)) ButtonTExt;
      }
    }

    &.spectrum-Button--accent {
      &.spectrum-Button--fill {
        background-color: ButtonText;
        color: ButtonFace;
        
        &:disabled,
        &.is-disabled {
          background-color: ButtonFace;
          color: GrayText;
        }

        /* simplified for a lot of state for high contrast mode */
        &:active,
        &:hover,
        &:focus-ring,
        &.is-focused {
          background-color: Highlight;
        }
        .spectrum-Button-label {
          forced-color-adjust: none;
        }
      }
    }
  }
}

/* static variants */
.spectrum-Button--staticWhite {
  --spectrum-button-focus-indicator-color: var(--mod-static-black-focus-indicator-color, var(--spectrum-static-black-focus-indicator-color));
}

.spectrum-Button--staticBlack {
  --spectrum-button-focus-indicator-color: var(--mod-static-black-focus-indicator-color, var(--spectrum-static-black-focus-indicator-color));
}