/*!
 * Copyright 2024 Adobe. All rights reserved.
 *
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at <http://www.apache.org/licenses/LICENSE-2.0>
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */

@import "themes/spectrum-two.css";

.spectrum-ColorHandle {
	position: absolute;
	z-index: 1; /* Be above */
	display: block;
	box-sizing: border-box;
	inline-size: var(--mod-colorhandle-size, var(--spectrum-colorhandle-size));
	block-size: var(--mod-colorhandle-size, var(--spectrum-colorhandle-size));
	margin-block: calc(-1 * calc(var(--mod-colorhandle-size, var(--spectrum-colorhandle-size)) / 2));

	margin-inline: calc(-1 * calc(var(--mod-colorhandle-size, var(--spectrum-colorhandle-size)) / 2));
	border-color: var(--highcontrast-colorhandle-border-color, var(--mod-colorhandle-border-color, var(--spectrum-colorhandle-border-color)));
	border-style: solid;

	border-width: var(--mod-colorhandle-border-width, var(--spectrum-colorhandle-border-width));

	border-radius: 100%;

	box-shadow: 0 0 0 var(--mod-colorhandle-outer-border-width, var(--spectrum-colorhandle-outer-border-width)) var(--mod-colorhandle-outer-border-color, var(--spectrum-colorhandle-outer-border-color));

	transition: all var(--mod-colorhandle-animation-duration, var(--spectrum-colorhandle-animation-duration)) var(--mod-colorhandle-animation-easing, var(--spectrum-colorhandle-animation-easing));

	&::after {
		content: "";
		position: absolute;
		inset-block: calc(50% - calc(var(--mod-colorhandle-hitarea-size, var(--spectrum-colorhandle-hitarea-size)) / 2));
		inset-inline: calc(50% - calc(var(--mod-colorhandle-hitarea-size, var(--spectrum-colorhandle-hitarea-size)) / 2));
		display: block;
		inline-size: var(--mod-colorhandle-hitarea-size, var(--spectrum-colorhandle-hitarea-size));
		block-size: var(--mod-colorhandle-hitarea-size, var(--spectrum-colorhandle-hitarea-size));
		border-radius: var(--mod-colorhandle-hitarea-border-radius, 100%);
	}

	&.is-focused,
	&:focus-visible {
		/* Bigger handle when focused */
		inline-size: var(--mod-colorhandle-focused-size, var(--spectrum-colorhandle-focused-size));
		block-size: var(--mod-colorhandle-focused-size, var(--spectrum-colorhandle-focused-size));
		margin-block: calc(-1 * var(--mod-colorhandle-size, var(--spectrum-colorhandle-size)));

		margin-inline: calc(-1 * var(--mod-colorhandle-size, var(--spectrum-colorhandle-size)));
		outline: none;
	}

	&.is-disabled {
		pointer-events: none;
		background: var(--highcontrast-colorhandle-fill-color-disabled, var(--mod-colorhandle-fill-color-disabled, var(--spectrum-colorhandle-fill-color-disabled)));
		border-color: var(--highcontrast-colorhandle-border-color-disabled, var(--mod-colorhandle-border-color-disabled, var(--spectrum-colorhandle-border-color-disabled)));
		box-shadow: none;

		.spectrum-ColorHandle-inner {
			display: none;
		}
	}
}

.spectrum-ColorHandle-inner {
	inline-size: 100%;
	block-size: 100%;

	/* Undefined variable allows custom stylesheet or JS to pass the value to this element */
	background-color: var(--spectrum-picked-color);
	border-radius: 100%;
	box-shadow: inset 0 0 0 var(--mod-colorhandle-inner-border-width, var(--spectrum-colorhandle-inner-border-width)) var(--mod-colorhandle-inner-border-color, var(--spectrum-colorhandle-inner-border-color));
}

@media (forced-colors: active) {
	.spectrum-ColorHandle {
		forced-color-adjust: none;

		&.is-disabled {
			--highcontrast-colorhandle-border-color-disabled: GrayText;
			--highcontrast-colorhandle-fill-color-disabled: Canvas;
		}
	}
}
