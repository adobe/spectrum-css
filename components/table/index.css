/*!
 * Copyright 2025 Adobe. All rights reserved.
 *
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at <http://www.apache.org/licenses/LICENSE-2.0>
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */

.spectrum-Table {
	/* Animation */
	--spectrum-table-transition-duration: var(--spectrum-animation-duration-100);

	/* Background colors */
	--spectrum-table-header-background-color: var(--spectrum-gray-75);
	--spectrum-table-row-background-color: var(--spectrum-gray-25);

	--spectrum-table-summary-row-background-color: var(--spectrum-gray-200);
	--spectrum-table-section-header-background-color: var(--spectrum-gray-200);

	/* @todo Refactor or remove these properties once the RGB stripped value is available. */
	--spectrum-table-selected-row-background-color: rgb(var(--spectrum-table-selected-row-background-color-rgb), var(--spectrum-table-selected-row-background-opacity));
	--spectrum-table-selected-row-background-color-non-emphasized: rgb(var(--spectrum-gray-700-rgb), var(--spectrum-table-selected-row-background-opacity-non-emphasized));
	--spectrum-table-selected-row-background-color-hover: rgb(var(--spectrum-table-selected-row-background-color-rgb), var(--spectrum-table-selected-row-background-opacity-hover));
	--spectrum-table-selected-row-background-color-active: rgb(var(--spectrum-table-selected-row-background-color-rgb), var(--spectrum-table-selected-row-background-opacity-hover));
	--spectrum-table-selected-row-background-color-non-emphasized-focus: rgb(var(--spectrum-gray-700-rgb), var(--spectrum-table-selected-row-background-opacity-non-emphasized-hover));

	--spectrum-table-cell-background-color: var(--spectrum-table-row-background-color);
	--spectrum-table-selected-cell-background-color: var(--spectrum-table-selected-row-background-color-non-emphasized);

	--spectrum-table-drop-zone-background-color: rgb(var(--spectrum-drop-zone-background-color-rgb), var(--spectrum-drop-zone-background-color-opacity));
	--spectrum-table-drop-zone-outline-color: var(--spectrum-accent-visual-color);

	/* Row States */
	/* @todo Refactor or remove these properties once the RGB stripped value is available. */
	--spectrum-table-row-background-color-hover: rgb(var(--spectrum-gray-900-rgb), var(--spectrum-table-row-hover-opacity));
	--spectrum-table-row-background-color-active: rgb(var(--spectrum-gray-900-rgb), var(--spectrum-table-row-down-opacity)); /* active/down state background color */

	/* Border */
	--spectrum-table-border-color: var(--spectrum-gray-300);
	--spectrum-table-border-radius: var(--spectrum-corner-radius-medium-size-extra-small);
	--spectrum-table-border-width: var(--spectrum-table-border-divider-width);
	--spectrum-table-outer-border-inline-width: var(--spectrum-table-border-divider-width);

	/* Divider */
	--spectrum-table-divider-color: var(--spectrum-gray-300);

	/* Focus indicators */
	--spectrum-table-focus-indicator-thickness: var(--spectrum-focus-indicator-thickness);
	--spectrum-table-focus-indicator-color: var(--spectrum-focus-indicator-color);
	--spectrum-table-row-focus-indicator-width: var(--spectrum-side-focus-indicator);

	/* Individual focused table cells still have a border-radius */
	--spectrum-table-focused-cell-border-radius: var(--spectrum-corner-radius-small-default);

	--spectrum-table-selected-cell-background-color-focus: var(--spectrum-table-selected-row-background-color-non-emphasized-focus);

	/* Visual (avatar, icons, thumbnails) */
	--spectrum-table-icon-color-default: var(--spectrum-neutral-content-color-default);
	--spectrum-table-icon-color-hover: var(--spectrum-neutral-content-color-hover);
	--spectrum-table-icon-color-active: var(--spectrum-neutral-content-color-down);
	--spectrum-table-icon-color-key-focus: var(--spectrum-neutral-content-color-key-focus);
	--spectrum-table-disclosure-icon-size: var(--spectrum-component-height-100);
	--spectrum-table-icon-color: var(--spectrum-table-icon-color-default);

	--spectrum-table-header-icons-color-default: var(--spectrum-neutral-subdued-content-color-default);
	--spectrum-table-header-icons-color-hover: var(--spectrum-neutral-subdued-content-color-hover);
	--spectrum-table-header-icons-color-active: var(--spectrum-neutral-subdued-content-color-down);
	--spectrum-table-header-icons-color-key-focus: var(--spectrum-neutral-subdued-content-color-key-focus);

	/* Alignment */
	--spectrum-table-default-vertical-align: middle;

	/* Font */
	--spectrum-table-header-font-weight: var(--spectrum-bold-font-weight);
	--spectrum-table-header-text-color: var(--spectrum-body-color);

	--spectrum-table-row-font-family: var(--spectrum-sans-font-family-stack);
	--spectrum-table-row-font-weight: var(--spectrum-regular-font-weight);
	--spectrum-table-row-font-style: var(--spectrum-default-font-style);
	--spectrum-table-row-line-height: var(--spectrum-line-height-100);
	--spectrum-table-row-text-color: var(--spectrum-neutral-content-color-default);
	--spectrum-table-row-text-color-hover: var(--spectrum-neutral-content-color-hover);
	--spectrum-table-row-text-color-active: var(--spectrum-neutral-content-color-down);
	--spectrum-table-row-text-color-key-focus: var(--spectrum-neutral-content-color-key-focus);
	--spectrum-table-row-font-size: var(--spectrum-font-size-100);

	--spectrum-table-summary-row-font-weight: var(--spectrum-bold-font-weight);
	--spectrum-table-section-header-font-weight: var(--spectrum-bold-font-weight);

	/* Size and Spacing */
	--spectrum-table-min-header-row-height: var(--spectrum-component-height-100);
	--spectrum-table-header-row-top-to-text: var(--spectrum-table-column-header-row-top-to-text-medium);
	--spectrum-table-header-row-bottom-to-text: var(--spectrum-table-column-header-row-bottom-to-text-medium);

	--spectrum-table-min-row-height: var(--spectrum-table-row-height-medium);
	--spectrum-table-row-top-to-text: var(--spectrum-table-row-top-to-text-medium);
	--spectrum-table-row-bottom-to-text: var(--spectrum-table-row-bottom-to-text-medium);

	--spectrum-table-header-row-checkbox-block-spacing: var(--spectrum-table-header-row-checkbox-to-top-medium);
	--spectrum-table-row-checkbox-block-spacing: var(--spectrum-table-row-checkbox-to-top-medium);

	--spectrum-table-section-header-min-height: var(--spectrum-table-section-header-row-height-medium);
	--spectrum-table-section-header-block-start-spacing: var(--spectrum-component-top-to-text-100);
	--spectrum-table-section-header-block-end-spacing: var(--spectrum-component-bottom-to-text-100);

	--spectrum-table-visual-to-text: var(--spectrum-text-to-visual-300);
	--spectrum-table-thumbnail-size: var(--spectrum-thumbnail-size-100);
	--spectrum-table-avatar-size: var(--spectrum-avatar-size-75);

	--spectrum-table-cell-inline-spacing: var(--spectrum-table-edge-to-content);
	--spectrum-table-checkbox-to-cell-content: var(--spectrum-table-checkbox-to-text);

	--spectrum-table-collapsible-tier-indent: var(--spectrum-spacing-300);
	--spectrum-table-collapsible-disclosure-inline-spacing: 0px;
	--spectrum-table-collapsible-icon-animation-duration: var(--spectrum-animation-duration-100);

	/* @passthrough */
	--mod-thumbnail-size: var(--mod-table-thumbnail-size, var(--spectrum-table-thumbnail-size));
	--mod-avatar-block-size: var(--mod-table-avatar-size, var(--spectrum-table-avatar-size));
	--mod-avatar-inline-size: var(--mod-table-avatar-size, var(--spectrum-table-avatar-size));

	/* Button for menus in header cells */
	--mod-button-font-weight: var(--mod-table-header-font-weight, var(--spectrum-table-header-font-weight));
	--mod-button-font-size: var(--mod-table-header-font-size, var(--spectrum-table-row-font-size));
	--mod-button-font-family: var(--mod-table-header-font-family, var(--spectrum-table-row-font-family));
	--mod-button-line-height: var(--mod-table-header-line-height, var(--spectrum-table-row-line-height));
	--mod-button-background-color-default: transparent;
	--mod-button-background-color-hover: transparent;
	--mod-button-background-color-focus: transparent;
	--mod-button-background-color-down: transparent;
	--mod-button-content-color-default: var(--mod-table-header-text-color, var(--spectrum-table-header-text-color));
	--mod-button-content-color-hover: var(--mod-table-header-text-color, var(--spectrum-table-header-text-color));
	--mod-button-content-color-focus: var(--mod-table-header-text-color, var(--spectrum-table-header-text-color));
	--mod-button-content-color-down: var(--mod-table-header-text-color, var(--spectrum-table-header-text-color));
	--mod-button-edge-to-text: var(--mod-table-cell-inline-spacing, var(--spectrum-table-cell-inline-spacing));
	--mod-button-padding-label-to-icon: var(--mod-table-visual-to-text, var(--spectrum-table-visual-to-text));
	--mod-button-border-radius: calc(var(--mod-table-border-radius, var(--spectrum-table-focused-cell-border-radius)) - var(--mod-table-border-width, var(--spectrum-table-border-width)));
	--mod-button-focus-ring-border-radius: calc(var(--mod-table-border-radius, var(--spectrum-table-focused-cell-border-radius)) - var(--mod-table-border-width, var(--spectrum-table-border-width)));

	&:dir(rtl) {
		--spectrum-logical-rotation: matrix(-1, 0, 0, 1, 0, 0);
	}

	&:lang(ja),
	&:lang(zh),
	&:lang(ko) {
		--spectrum-table-row-line-height: var(--spectrum-cjk-line-height-100);
	}
}

/********* VARIANTS *********/
.spectrum-Table--compact {
	/* Size and Spacing */
	--spectrum-table-min-row-height: var(--mod-table-min-row-height-compact, var(--spectrum-table-row-height-medium-compact));
	--spectrum-table-row-top-to-text: var(--spectrum-table-row-top-to-text-medium-compact);
	--spectrum-table-row-bottom-to-text: var(--spectrum-table-row-bottom-to-text-medium-compact);

	/* Row Selection */
	--spectrum-table-row-checkbox-block-spacing: var(--mod-table-row-checkbox-block-spacing-compact, var(--spectrum-table-row-checkbox-to-top-medium-compact));

	/* Visuals */
	--mod-table-thumbnail-size: var(--mod-table-thumbnail-size-compact, var(--spectrum-thumbnail-size-75));
	--mod-table-avatar-size: var(--mod-table-avatar-size-compact, var(--spectrum-avatar-size-50));
}

.spectrum-Table--spacious {
	/* Size and Spacing */
	--spectrum-table-min-row-height: var(--mod-table-min-row-height-spacious, var(--spectrum-table-row-height-medium-spacious));
	--spectrum-table-row-top-to-text: var(--spectrum-table-row-top-to-text-medium-spacious);
	--spectrum-table-row-bottom-to-text: var(--spectrum-table-row-bottom-to-text-medium-spacious);

	/* Row Selection */
	--spectrum-table-row-checkbox-block-spacing: var(--mod-table-row-checkbox-block-spacing-spacious, var(--spectrum-table-row-checkbox-to-top-medium-spacious));

	/* Visuals */
	--mod-table-thumbnail-size: var(--mod-table-thumbnail-size-spacious, var(--spectrum-thumbnail-size-200));
	--mod-table-avatar-size: var(--mod-table-avatar-size-spacious, var(--spectrum-avatar-size-100));
}

.spectrum-Table--emphasized,
.spectrum-Table-row .is-emphasized {
	--spectrum-table-selected-cell-background-color: var(--spectrum-table-selected-row-background-color);
	--spectrum-table-selected-cell-background-color-focus: var(--spectrum-table-selected-row-background-color-hover);
}

.spectrum-Table--quiet {
	--spectrum-table-border-radius: var(--mod-table-border-radius-quiet, 0px);
	--spectrum-table-outer-border-inline-width: var(--mod-table-outer-border-inline-width-quiet, 0px);
}

.spectrum-Table-scroller {
	--spectrum-table-header-background-color: var(--mod-table-header-background-color-scrollable, var(--spectrum-gray-75));
}

.spectrum-Table-row {
	&:focus-visible,
	&:focus {
		--spectrum-table-row-text-color: var(--spectrum-table-row-text-color-key-focus);

		&:hover {
			--spectrum-table-row-text-color: var(--spectrum-table-row-text-color-key-focus);
		}
	}

	&:hover {
		--spectrum-table-cell-background-color: var(--spectrum-table-row-background-color-hover);
		--spectrum-table-row-text-color: var(--spectrum-table-row-text-color-hover);
	}

	&:active {
		--spectrum-table-cell-background-color: var(--spectrum-table-row-background-color-active);
		--spectrum-table-row-text-color: var(--spectrum-table-row-text-color-active);
	}

	&.is-selected {
		--spectrum-table-cell-background-color: var(--spectrum-table-selected-cell-background-color);
		--spectrum-table-divider-color: var(--spectrum-table-focus-indicator-color);
		--spectrum-table-border-color: var(--spectrum-table-focus-indicator-color);

		&:hover,
		&:focus-visible {
			--spectrum-table-cell-background-color: var(--spectrum-table-selected-cell-background-color-focus);
		}

		&:active {
			--spectrum-table-cell-background-color: var(--spectrum-table-selected-row-background-color-active);
		}
	}

	&.is-drop-target,
	.spectrum-Table-body.is-drop-target & {
		--spectrum-table-cell-background-color: var(--spectrum-table-drop-zone-background-color);
	}
}

.spectrum-Table-headCell {
	&.is-sortable,
	&.spectrum-Table-hasMenuButton,
	.spectrum-Table-sortButton {
		--spectrum-table-icon-color: var(--spectrum-table-header-icons-color-default);

		&:hover {
			--spectrum-table-icon-color: var(--spectrum-table-header-icons-color-hover);
		}

		&:active {
			--spectrum-table-icon-color: var(--spectrum-table-header-icons-color-active);
		}

		&:focus,
		&:focus-visible,
		&.is-keyboardFocused {
			--spectrum-table-icon-color: var(--spectrum-table-header-icons-color-key-focus);
		}
	}

	/* These styles get applied to the headCell when the headCell has the --hasMenuButton class. */
	&.spectrum-Table-hasMenuButton {
		--spectrum-table-cell-inline-spacing: 0;
		--spectrum-table-header-row-top-to-text: 0;
		--spectrum-table-header-row-bottom-to-text: 0;
	}

	/* These styles get applied to the icon within that menu button. */
	& .spectrum-Table-menuButton {
		--mod-icon-color: var(--spectrum-table-header-icons-color-default);

		&:hover {
			--mod-icon-color: var(--spectrum-table-header-icons-color-hover);
		}

		&:active {
			--mod-icon-color: var(--spectrum-table-header-icons-color-active);
		}

		&:focus,
		&:focus:hover,
		&:focus-visible {
			--mod-icon-color: var(--spectrum-table-header-icons-color-key-focus);
		}
	}
}

.spectrum-Table-row--summary {
	--spectrum-table-cell-background-color: var(--spectrum-table-summary-row-background-color);

	&:hover {
		--spectrum-table-cell-background-color: var(--spectrum-table-summary-row-background-color);
	}
}

.spectrum-Table-row--sectionHeader {
	--spectrum-table-cell-background-color: var(--spectrum-table-section-header-background-color);

	&:hover {
		--spectrum-table-cell-background-color: var(--spectrum-table-section-header-background-color);
	}
}

/********* REGULAR / DEFAULT TABLE *********/
.spectrum-Table:not(.spectrum-Table-scroller),
.spectrum-Table-main {
	border-collapse: separate;
	border-spacing: 0;
	display: table;
}

/********* HEAD CELLS *********/
.spectrum-Table-headRow {
	.spectrum-Table-headCell {
		box-sizing: border-box;
		text-align: start;
		vertical-align: var(--mod-table-header-vertical-align, var(--spectrum-table-default-vertical-align));

		font-family: var(--mod-table-header-font-family, var(--spectrum-table-row-font-family));
		font-size: var(--mod-table-header-font-size, var(--spectrum-table-row-font-size));
		font-weight: var(--mod-table-header-font-weight, var(--spectrum-table-header-font-weight));
		font-style: var(--mod-table-header-font-style, var(--spectrum-table-row-font-style));
		line-height: var(--mod-table-header-line-height, var(--spectrum-table-row-line-height));
		text-transform: var(--mod-table-header-text-transform, none);

		/* block-size functions as min-block-size when using display table-cell. */
		block-size: var(--mod-table-min-header-height, var(--spectrum-table-min-header-row-height));

		padding-block: var(--mod-table-header-row-top-to-text, var(--spectrum-table-header-row-top-to-text)) var(--mod-table-header-row-bottom-to-text, var(--spectrum-table-header-row-bottom-to-text));
		padding-inline: var(--mod-table-cell-inline-spacing, var(--spectrum-table-cell-inline-spacing));

		color: var(--mod-table-header-text-color, var(--spectrum-table-header-text-color));
		background-color: var(--mod-table-header-background-color, var(--spectrum-table-header-background-color));
		border-block-start: var(--mod-table-border-width, var(--spectrum-table-border-width)) solid var(--spectrum-table-border-color);

		cursor: var(--mod-table-cursor-header-default, initial);
		outline: 0;

		&.is-sortable {
			cursor: var(--mod-table-cursor-header-sortable, pointer);
		}
	}

	/* Places the focus indicator above the table cell borders. */
	.spectrum-ActionButton::after {
		z-index: 1;
	}

	&:first-child .spectrum-Table-headCell:first-child {
		border-start-start-radius: var(--mod-table-border-radius, var(--spectrum-table-border-radius));
		border-inline-start: var(--mod-table-border-width, var(--spectrum-table-border-width)) solid var(--spectrum-table-border-color);
	}

	&:last-child .spectrum-Table-headCell:last-child {
		border-start-end-radius: var(--mod-table-border-radius, var(--spectrum-table-border-radius));
		border-inline-end: var(--mod-table-border-width, var(--spectrum-table-border-width)) solid var(--spectrum-table-border-color);
	}

	/* Checkbox cell in header row */
	.spectrum-Table-checkboxCell {
		padding-inline-start: calc(var(--mod-table-cell-inline-spacing, var(--spectrum-table-cell-inline-spacing)) - var(--mod-table-outer-border-inline-width, var(--spectrum-table-outer-border-inline-width)));

		/* the calc subtraction is because the --spectrum-table-checkbox-to-text spacing value
		includes the inline start padding in the adjacent cell. */
		padding-inline-end: calc(var(--mod-table-checkbox-to-cell-content, var(--spectrum-table-checkbox-to-cell-content)) - var(--mod-table-cell-inline-spacing, var(--spectrum-table-cell-inline-spacing)));
		padding-block: var(--mod-table-header-row-checkbox-block-spacing, var(--spectrum-table-header-row-checkbox-block-spacing));

		.spectrum-Table-checkbox {
			--mod-checkbox-margin-block: 0px;

			min-block-size: initial;
		}
	}
}

/* Quiet table header rows do not have inline borders */
.spectrum-Table--quiet .spectrum-Table-headRow:first-child {
	.spectrum-Table-headCell:first-child {
		border-inline-start: 0;
	}

	.spectrum-Table-headCell:last-child {
		border-inline-end: 0;
	}
}

/********* ICONS- SORT, DISCLOSURE/MENU *********/
/* Head cell column text */
.spectrum-Table-columnTitle {
	display: inline-block;
	vertical-align: middle;
}

/* A "sortable-only" head cell has no padding around its button. */
.spectrum-Table-headCell.is-sortable {
	padding: 0;

	/* Ensure the button text color is the same as the header text color, particularly in high contrast mode. */
	.spectrum-Table-sortButton {
		color: var(--spectrum-table-header-text-color);

		/* Avoids flash of a different text color from the button in WHCM. */
		forced-color-adjust: none;

		&:hover,
		&:focus,
		&:focus-visible,
		&:active {
			color: var(--spectrum-table-header-text-color);
		}
	}

	/* Focus indicator- brings the focus indicator above the border and matches the table cell dimensions. */
	.spectrum-Table-sortButton::after {
		inset: calc(3 * var(--mod-table-border-width, var(--spectrum-table-border-width)));
		z-index: 1;
	}

	.spectrum-Table-sortButton .spectrum-Icon {
		color: var(--spectrum-table-icon-color);
		transition: transform var(--spectrum-table-transition-duration) ease-in-out;
	}
}

/* Head cell column text in the button that opens the menu */
.spectrum-Table-headCell.spectrum-Table-hasMenuButton {
	.spectrum-Table-sortButton {
		min-inline-size: 100%;
		justify-content: flex-start;
		color: var(--spectrum-table-header-text-color);

		/* Avoids flash of a different text color from the button in WHCM. */
		forced-color-adjust: none;

		&:hover {
			color: var(--spectrum-table-header-text-color);
		}

		/* Focus indicator- brings the focus indicator above the cell borders and matches the table cell dimensions. */
		&:focus-visible::after {
			inset: var(--mod-table-border-width, var(--spectrum-table-border-width));
			z-index: 1;

			/* Remove the box-shadow of .spectrum-Button, which was generating a different corner radius for the focus indicator. */
			box-shadow: none;

			/* Add focus indicator border to match the other table cell focus indicators. */
			border: var(--mod-table-focus-indicator-thickness, var(--spectrum-table-focus-indicator-thickness)) solid var(--spectrum-table-focus-indicator-color);
		}

		.spectrum-Button-label {
			vertical-align: middle;
			display: inline-block;
		}

		.spectrum-Button-label::after {
			content: "";
			display: inline-block;
			mask-image: url('data:image/svg+xml,<svg focusable="false" aria-hidden="true" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 10 10"><path d="M3 9.95a.875.875 0 0 1-.615-1.498L5.88 5 2.385 1.547A.875.875 0 0 1 3.615.302L7.74 4.377a.876.876 0 0 1 0 1.246L3.615 9.698A.87.87 0 0 1 3 9.95"></path></svg>');
			mask-size: contain;
			mask-repeat: no-repeat;
			mask-position: center;

			block-size: 10px;
			inline-size: 10px;
			background-color: var(--spectrum-table-icon-color);
			transform: rotate(90deg);
			vertical-align: middle;
			margin-inline-start: var(--mod-table-visual-to-text, var(--spectrum-table-visual-to-text));
		}

		& .spectrum-Icon {
			transition: transform var(--spectrum-table-transition-duration) ease-in-out;
			color: var(--spectrum-table-icon-color);
		}
	}
}

/********* TEXT ALIGNMENT *********/
.spectrum-Table-cell--alignStart {
	text-align: start;
}

.spectrum-Table-cell--alignEnd,
.spectrum-Table-headRow .spectrum-Table-headCell--alignEnd {
	text-align: end;
}

/********* TABLE BODY *********/
.spectrum-Table-body {
	position: relative;
	border: none;
	border-end-start-radius: calc(var(--mod-table-border-radius, var(--spectrum-table-border-radius)) - var(--mod-table-border-width, var(--spectrum-table-border-width)));
	border-end-end-radius: calc(var(--mod-table-border-radius, var(--spectrum-table-border-radius)) - var(--mod-table-border-width, var(--spectrum-table-border-width)));
	display: table-row-group;

	&.is-drop-target {
		/* Make sure borders are not visible behind the pseudo-element */
		--mod-table-border-color: transparent;

		/* Remove the outline since we'll replace it with an ::after pseudo-element */
		outline: none;
		position: relative;
		z-index: 0;

		&::after {
			content: "";
			position: absolute;
			inset: 0;
			border-end-start-radius: var(--mod-table-border-radius, var(--spectrum-table-border-radius));
			border-end-end-radius: var(--mod-table-border-radius, var(--spectrum-table-border-radius));
			border: var(--mod-table-focus-indicator-thickness, var(--spectrum-table-focus-indicator-thickness)) solid var(--spectrum-table-drop-zone-outline-color);
			pointer-events: none;
			z-index: 1;
		}
	}
}

/********* CELLS *********/
.spectrum-Table-cell {
	/* Outside border, row divider lines, and rounded corners:
    The tbody tag doesn't allow setting a border or border-radius. To make them work, border styles are
    instead applied to the individual cells around the outside, while using border-collapse: separate. */

	/* Row divider lines */
	border-block-start: var(--mod-table-border-width, var(--spectrum-table-border-width)) solid var(--spectrum-table-divider-color);

	/* Cells within table body */
	box-sizing: border-box;
	font-family: var(--mod-table-row-font-family, var(--spectrum-table-row-font-family));
	font-style: var(--mod-table-row-font-style, var(--spectrum-table-row-font-style));
	font-size: var(--mod-table-row-font-size, var(--spectrum-table-row-font-size));
	font-weight: var(--mod-table-row-font-weight, var(--spectrum-table-row-font-weight));
	line-height: var(--mod-table-row-line-height, var(--spectrum-table-row-line-height));
	vertical-align: var(--mod-table-default-vertical-align, var(--spectrum-table-default-vertical-align));
	color: var(--spectrum-table-row-text-color);
	background-color: var(--spectrum-table-cell-background-color);

	/* block-size functions as min-block-size when using display table-cell. */
	block-size: var(--mod-table-min-row-height, var(--spectrum-table-min-row-height));

	padding-block-start: calc(var(--mod-table-row-top-to-text, var(--spectrum-table-row-top-to-text)) - var(--mod-table-border-width, var(--spectrum-table-border-width)));
	padding-block-end: var(--mod-table-row-bottom-to-text, var(--spectrum-table-row-bottom-to-text));
	padding-inline: calc(var(--mod-table-cell-inline-spacing, var(--spectrum-table-cell-inline-spacing)) - var(--mod-table-outer-border-inline-width, var(--spectrum-table-outer-border-inline-width)));
}

/* Focus Indicator (Ring) */
.spectrum-Table-cell,
.spectrum-Table-headCell {
	position: relative;
	display: table-cell;

	&:focus,
	&:focus-visible {
		position: relative;

		/* Remove the outline since we'll replace it with an ::after pseudo-element */
		outline: none;
		z-index: 1; /* Ensure cell focus indicator appears above row focus indicator */

		&::after {
			content: "";
			position: absolute;
			inset: calc(-1 * var(--mod-table-border-width, var(--spectrum-table-border-width)));
			border-radius: calc(var(--mod-table-border-radius, var(--spectrum-table-focused-cell-border-radius)) - var(--mod-table-border-width, var(--spectrum-table-border-width)));
			border: var(--mod-table-focus-indicator-thickness, var(--spectrum-table-focus-indicator-thickness)) solid var(--spectrum-table-focus-indicator-color);
			pointer-events: none;
		}
	}
}

/* Cells that display a column divider (vertical border). */
.spectrum-Table-cell--divider {
	border-inline-end: var(--mod-table-border-width, var(--spectrum-table-border-width)) solid var(--spectrum-table-divider-color);
}

/********* ROWS *********/
/* Outside border (the table's border) */
.spectrum-Table-body .spectrum-Table-row {
	&:first-child .spectrum-Table-cell {
		border-block-start: var(--mod-table-border-width, var(--spectrum-table-border-width)) solid var(--spectrum-table-divider-color);
	}

	&:last-child .spectrum-Table-cell {
		border-block-end: var(--mod-table-border-width, var(--spectrum-table-border-width)) solid var(--spectrum-table-border-color);
	}

	.spectrum-Table-cell:first-child {
		border-inline-start: var(--mod-table-outer-border-inline-width, var(--spectrum-table-outer-border-inline-width)) solid var(--spectrum-table-border-color);
	}

	.spectrum-Table-cell:last-child {
		border-inline-end: var(--mod-table-outer-border-inline-width, var(--spectrum-table-outer-border-inline-width)) solid var(--spectrum-table-border-color);
	}
}

/* Rounded corners */
.spectrum-Table-row {
	/* Rows within table body */
	position: relative;
	transition: background-color var(--spectrum-table-transition-duration) ease-in-out;
	cursor: var(--mod-table-cursor-row-default, pointer);
	border-block-start: none;

	/* most cells within the table body have no border-radius */
	.spectrum-Table-cell {
		border-radius: 0;
	}

	/* first cell of first row in table body */
	&:first-child .spectrum-Table-cell:last-child {
		border-radius: 0;
	}

	/* first cell of last row in table body */
	&:last-child .spectrum-Table-cell:first-child {
		border-end-start-radius: var(--mod-table-border-radius, var(--spectrum-table-border-radius));
	}

	/* last cell of last row in table body */
	&:last-child .spectrum-Table-cell:last-child {
		border-end-end-radius: var(--mod-table-border-radius, var(--spectrum-table-border-radius));
	}

	&:first-child {
		/* Ensure that 'outline' will match the border-radius, when used on rows. */
		border-start-start-radius: var(--mod-table-border-radius, var(--spectrum-table-border-radius));
		border-start-end-radius: var(--mod-table-border-radius, var(--spectrum-table-border-radius));
	}

	&:last-child {
		border-end-start-radius: var(--mod-table-border-radius, var(--spectrum-table-border-radius));
		border-end-end-radius: var(--mod-table-border-radius, var(--spectrum-table-border-radius));
	}

	/* Selected rows */
	&.is-selected {
		.spectrum-Table-cell {
			/* Remove bottom border by default for all selected rows to conditionally add it back. */
			border-block-end: none;
		}
	}

	/* Adding the bottom border only to the last selected row in a sequence achieves 1px border between adjacent selected rows */
	&.is-selected:not(:has(+ .is-selected)) .spectrum-Table-cell {
		border-block-end: var(--mod-table-border-width, var(--spectrum-table-border-width)) solid var(--spectrum-table-focus-indicator-color);
	}

	/* Row focus indicator */
	&:focus-visible,
	&:focus {
		outline: none;

		/* First cell of focused rows need fancy new focus indicator borders & no border-radius, and the thicker row focus indicator */
		.spectrum-Table-cell:first-child {
			position: relative;
			border-inline-start: 0;

			/* Because the ::before element technically removes the table's inline border, the first cell needs the entire cell-inline-padding padding to avoid horizontal layout shift when a row is focused. */
			padding-inline-start: var(--mod-table-cell-inline-spacing, var(--spectrum-table-cell-inline-spacing));

			/* The side row focus indicator line */
			&::before {
				content: "";
				position: absolute;
				inset-block-start: 0;
				inset-block-end: 0;
				inset-inline-start: 0;
				inline-size: var(--spectrum-table-row-focus-indicator-width);
				background-color: var(--spectrum-table-focus-indicator-color);
				z-index: 1;
			}
		}

		/* In a focused row that is last in the table, the first cell needs rounded corners at the bottom of the row focus indicator line */
		&:last-child .spectrum-Table-cell:first-child::before {
			border-end-start-radius: var(--mod-table-border-radius, var(--spectrum-table-border-radius));
		}
	}

	&.is-drop-target {
		/* Make sure negative offset outline is not covered by borders. */
		--mod-table-border-color: transparent;
		border-start-start-radius: 0;
		border-start-end-radius: 0;

		outline-width: var(--mod-table-focus-indicator-thickness, var(--spectrum-table-focus-indicator-thickness));
		outline-style: solid;
		outline-color: var(--spectrum-table-drop-zone-outline-color);
		outline-offset: calc(-1 * var(--mod-table-focus-indicator-thickness, var(--spectrum-table-focus-indicator-thickness)));

		.spectrum-Table-cell {
			border-block-start-color: var(--spectrum-table-drop-zone-outline-color);
		}
	}
}

.spectrum-Table-row--summary {
	.spectrum-Table-cell {
		font-weight: var(--mod-table-summary-row-font-weight, var(--spectrum-table-summary-row-font-weight));

		/* Summary rows are typically the same dimensions as other non-header rows, but we make
		mods available to override the default row styles */
		block-size: var(--mod-table-summary-row-min-height, var(--spectrum-table-min-row-height));
		padding-block-start: calc(var(--mod-table-summary-row-top-to-text, var(--spectrum-table-row-top-to-text)) - var(--mod-table-border-width, var(--spectrum-table-border-width)));
		padding-block-end: var(--mod-table-summary-row-bottom-to-text, var(--spectrum-table-row-bottom-to-text));
		font-size: var(--mod-table-summary-row-font-size, var(--spectrum-table-row-font-size));
		font-family: var(--mod-table-summary-row-font-family, var(--spectrum-table-row-font-family));
		font-style: var(--mod-table-summary-row-font-style, var(--spectrum-table-row-font-style));
		line-height: var(--mod-table-summary-row-line-height, var(--spectrum-table-row-line-height));
		color: var(--spectrum-table-row-text-color);
	}
}

.spectrum-Table-row--sectionHeader {
	cursor: var(--mod-table-cursor-section-header, initial);

	.spectrum-Table-cell {
		font-weight: var(--mod-table-section-header-font-weight, var(--spectrum-table-section-header-font-weight));
		text-align: start;

		/* block-size functions as min-block-size when using display table-cell. */
		block-size: var(--mod-table-section-header-min-height, var(--spectrum-table-section-header-min-height));

		padding-block-start: calc(var(--mod-table-section-header-block-start-spacing, var(--spectrum-table-section-header-block-start-spacing)) - var(--mod-table-border-width, var(--spectrum-table-border-width)));
		padding-block-end: var(--mod-table-section-header-block-end-spacing, var(--spectrum-table-section-header-block-end-spacing));

		/* Make unique section header mods available to these default row styles: */
		padding-inline-start: calc(var(--mod-table-section-header-inline-start-spacing, var(--spectrum-table-cell-inline-spacing)) - var(--mod-table-outer-border-inline-width, var(--spectrum-table-outer-border-inline-width)));
		font-size: var(--mod-table-section-header-font-size, var(--spectrum-table-row-font-size));
		font-family: var(--mod-table-section-header-font-family, var(--spectrum-table-row-font-family));
		font-style: var(--mod-table-section-header-font-style, var(--spectrum-table-row-font-style));
		line-height: var(--mod-table-section-header-line-height, var(--spectrum-table-row-line-height));
		color: var(--spectrum-table-row-text-color);
	}
}

/* Checkbox cell styles are further down the cascade to override some of the checkbox styles for collapsible tables. */
/********* CHECKBOX CELLS *********/
.spectrum-Table-checkboxCell {
	/* Prevent width expansion with 100% width table. */
	inline-size: var(--spectrum-checkbox-control-size-small);

	/* The calc subtraction is because the --spectrum-table-checkbox-to-text spacing value
	includes the inline start padding in the adjacent cell. */
	padding-inline-end: calc(var(--mod-table-checkbox-to-cell-content, var(--spectrum-table-checkbox-to-cell-content)) - var(--mod-table-cell-inline-spacing, var(--spectrum-table-cell-inline-spacing)));
	padding-block-start: calc(var(--mod-table-row-checkbox-block-spacing, var(--spectrum-table-row-checkbox-block-spacing)) - var(--mod-table-border-width, var(--spectrum-table-border-width)));
	padding-block-end: var(--mod-table-row-checkbox-block-spacing, var(--spectrum-table-row-checkbox-block-spacing));

	.spectrum-Table-checkbox {
		--mod-checkbox-margin-block: 0px;

		min-block-size: initial;
	}
}

/********* DIVS *********/
/* Make sure markup that uses divs instead of <table> elements displays like a regular table. */
.spectrum-Table-head {
	display: table-header-group;
}

.spectrum-Table-row,
.spectrum-Table-head [role="row"] {
	display: table-row;
}

/********* SCROLLABLE *********/
/* Wrapper that allows a scrollable body and sticky column header. */
.spectrum-Table-scroller {
	box-sizing: border-box;
	display: inline-block;
	position: relative;
	overflow: auto;

	border-radius: var(--mod-table-border-radius, var(--spectrum-table-border-radius));
	border-block: var(--mod-table-border-width, var(--spectrum-table-border-width)) solid var(--spectrum-table-border-color);
	border-inline: var(--mod-table-outer-border-inline-width, var(--spectrum-table-outer-border-inline-width)) solid var(--spectrum-table-border-color);

	/* Make sure shift-tab reverse keyboard navigation keeps the whole cell in focus.
     --mod-table-current-header-height should be dynamically updated with JS to match the table header height. */
	scroll-padding-top: var(--mod-table-current-header-height, calc((var(--mod-table-header-line-height, var(--spectrum-table-row-line-height)) * var(--mod-table-header-font-size, var(--spectrum-table-row-font-size))) + var(--mod-table-header-row-top-to-text, var(--spectrum-table-header-row-top-to-text)) + var(--mod-table-header-row-bottom-to-text, var(--spectrum-table-header-row-bottom-to-text)) + var(--mod-table-border-width, var(--spectrum-table-border-width))));

	.spectrum-Table-head {
		position: sticky;
		inset-block-start: 0;
		z-index: 2;
	}

	/* Remove borders that have been replaced by borders on scroller wrapper or pseudo elements. */
	.spectrum-Table-headRow:first-child .spectrum-Table-headCell {
		border-block-end: var(--mod-table-border-width, var(--spectrum-table-border-width)) solid var(--spectrum-table-border-color);
		border-block-start: 0;
		border-inline: 0;
		border-radius: 0;
	}

	.spectrum-Table-body .spectrum-Table-row {
		&:first-child .spectrum-Table-cell {
			border-block-start: none;
			border-radius: 0;
		}

		&:last-child .spectrum-Table-cell {
			border-block-end: none;
			border-radius: 0;
		}

		.spectrum-Table-cell:first-child {
			border-inline-start: none;
		}

		.spectrum-Table-cell:last-child {
			border-inline-end: none;
		}
	}
}

/********* COLLAPSIBLE *********/
.spectrum-Table-row--collapsible {
	--spectrum-table-row-tier: 0;

	&[data-tier="1"] {
		--spectrum-table-row-tier: 1;
	}

	&[data-tier="2"] {
		--spectrum-table-row-tier: 2;
	}

	&[data-tier="3"] {
		--spectrum-table-row-tier: 3;
	}

	&[data-tier="4"] {
		--spectrum-table-row-tier: 4;
	}

	&[data-tier="5"] {
		--spectrum-table-row-tier: 5;
	}

	&[data-tier="6"] {
		--spectrum-table-row-tier: 6;
	}

	.spectrum-Table-checkboxCell {
		padding-inline-end: 0;
	}

	&.is-last-tier {
		.spectrum-Table-cell--collapsible {
			/* Last tier rows need additional space as wide as the disclosure icon, to be indented from previous tier. */
			padding-inline-start: calc((var(--spectrum-table-row-tier) * var(--spectrum-table-collapsible-tier-indent)) + var(--mod-table-disclosure-icon-size, var(--spectrum-table-disclosure-icon-size)) + (var(--mod-table-collapsible-disclosure-inline-spacing, var(--spectrum-table-collapsible-disclosure-inline-spacing)) * 2));
		}

		.spectrum-Table-disclosureIcon {
			display: none;
		}
	}

	.spectrum-Table-disclosureIcon {
		margin-inline: var(--mod-table-collapsible-disclosure-inline-spacing, var(--spectrum-table-collapsible-disclosure-inline-spacing));
		margin-block-start: max(0px, calc((var(--mod-table-min-row-height, var(--spectrum-table-min-row-height)) - var(--mod-table-disclosure-icon-size, var(--spectrum-table-disclosure-icon-size))) / 2));
	}

	&[hidden] {
		display: none;
	}
}

.spectrum-Table-cell--collapsible {
	padding-inline-start: calc(var(--spectrum-table-row-tier, 0px) * var(--spectrum-table-collapsible-tier-indent));
}

.spectrum-Table-collapseInner {
	display: flex;
	flex-direction: row;
	flex-wrap: nowrap;
	justify-content: flex-start;
	align-items: center;
}

.spectrum-Table-disclosureIcon.spectrum-Table-disclosureIcon {
	--spectrum-table-icon-color: var(--spectrum-table-icon-color-default);

	block-size: var(--mod-table-disclosure-icon-size, var(--spectrum-table-disclosure-icon-size));
	flex-basis: var(--mod-table-disclosure-icon-size, var(--spectrum-table-disclosure-icon-size));
	flex-grow: 0;
	flex-shrink: 0;
	transition: transform ease var(--mod-table-collapsible-icon-animation-duration, var(--spectrum-table-collapsible-icon-animation-duration));

	border-radius: 0;
	background: transparent;
	border: 0;
	color: var(--spectrum-table-icon-color);

	transform: var(--spectrum-logical-rotation);

	&[aria-expanded="true"] {
		transform: var(--spectrum-logical-rotation) rotate(90deg);
	}

	&::after {
		display: none;
	}

	&:hover {
		--spectrum-table-icon-color: var(--spectrum-table-icon-color-hover);
	}

	&:active {
		--spectrum-table-icon-color: var(--spectrum-table-icon-color-active);
	}

	&:focus {
		--spectrum-table-icon-color: var(--spectrum-table-icon-color-key-focus);

		&:hover {
			--spectrum-table-icon-color: var(--spectrum-table-icon-color-key-focus);
		}
	}

	&:focus-visible,
	&.is-keyboardFocused {
		--spectrum-table-icon-color: var(--spectrum-table-icon-color-key-focus);

		outline-width: var(--mod-table-focus-indicator-thickness, var(--spectrum-table-focus-indicator-thickness));
		outline-style: solid;
		outline-color: var(--spectrum-table-focus-indicator-color);
		outline-offset: calc((-1 * var(--mod-table-focus-indicator-thickness, var(--spectrum-table-focus-indicator-thickness))) - 2px);
	}
}

/********* VISUALS- THUMBNAILS, AVATARS, ICONS *********/
.spectrum-Table-visualInner {
	display: flex;
	flex-direction: row;
	flex-wrap: nowrap;
	justify-content: flex-start;
	align-items: center;
	gap: var(--spectrum-table-visual-to-text);

	.spectrum-Thumbnail,
	.spectrum-Icon,
	.spectrum-Avatar {
		flex-grow: 0;
		flex-shrink: 0;
		margin-inline-end: var(--mod-table-visual-to-text, var(--spectrum-table-visual-to-text));
		line-height: var(--mod-table-row-line-height, var(--spectrum-table-row-line-height));
	}
}

/********* SPARKLINE CHARTS *********/
.spectrum-Table-chartContent {
	.spectrum-Table-chartImage {
		display: block;
		inline-size: fit-content;
		block-size: auto;
	}
}
