/*!
Copyright 2023 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

.spectrum-Rating {
  /* Icon */
  --spectrum-rating-icon-height: var(--spectrum-workflow-icon-size-100);
  --spectrum-rating-icon-width: var(--spectrum-workflow-icon-size-100);
  /* Focus ring */
  --spectrum-rating-border-radius: var(--spectrum-corner-radius-100);
  --spectrum-rating-focus-indicator-thickness: var(--spectrum-focus-indicator-thickness);
  --spectrum-rating-focus-indicator-gap: var(--spectrum-focus-indicator-gap);
  --spectrum-rating-focus-indicator-color: var(--spectrum-focus-indicator-color);
  /* Spacing (top/bottom edge to icon) */
  --spectrum-rating-icon-spacing-vertical-top: var(--spectrum-component-top-to-workflow-icon-100);
  /* Indicator width */
  --spectrum-rating-indicator-width: var(--spectrum-rating-indicator-width);
  /* Indicator height */
  --spectrum-rating-indicator-height: var(--spectrum-border-width-200);
  /* Indicator spacing */
  --spectrum-rating-indicator-spacing: var(--spectrum-rating-indicator-to-icon);
  /* Colors */
  /* selected + emphasized */
  --spectrum-rating-emphasized-icon-color-default: var(--spectrum-accent-content-color-default);
  --spectrum-rating-emphasized-icon-color-hover: var(--spectrum-accent-content-color-hover);
  --spectrum-rating-emphasized-icon-color-down: var(--spectrum-accent-content-color-down);
  --spectrum-rating-emphasized-icon-color-key-focus: var(--spectrum-accent-content-color-key-focus);
  /* Disabled */
  --spectrum-rating-icon-color-disabled: var(--spectrum-rating-icon-color-disabled);
  --spectrum-rating-icon-count: var(--spectrum-rating-icon-count);
}

/* Spacing (between icons) */
.spectrum--medium {
  --spectrum-rating-icon-spacing: var(--spectrum-spacing-75);
}

.spectrum--large {
  --spectrum-rating-icon-spacing: var(--spectrum-spacing-100);
}

@media (forced-colors: active) {
  .spectrum-Rating {
    &.is-focused {
      outline: 1px solid var(--mod-rating-focus-indicator-color, var(--spectrum-rating-focus-indicator-color));
    }
    --spectrum-rating-icon-color-disabled: GrayText;
  }
}

.spectrum-Rating {
  position: relative;
  display: inline-flex;
  flex: 0 0 auto;

  inline-size: calc((var(--mod-rating-icon-width, var(--spectrum-rating-icon-width)) + var(--mod-rating-icon-spacing, var(--spectrum-rating-icon-spacing))) * var(--mod-rating-icon-count, var(--spectrum-rating-icon-count)));
  border-radius: var(--mod-rating-border-radius, var(--spectrum-rating-border-radius));

  block-size: var(--mod-rating-icon-height, var(--spectrum-rating-icon-height));

  cursor: pointer;

  &.is-disabled,
  &.is-readOnly {
    cursor: default;
    pointer-events: none;
  }

  /* When the entire component is hovered, show all solid icons */
  &:hover {
    .spectrum-Rating-icon {
      .spectrum-Rating-starActive {
        display: block;
      }
      .spectrum-Rating-starInactive {
        display: none;
      }
    }
  }
}

.spectrum-Rating-input {
  position: absolute;
  z-index: 0;
  inline-size: 100%;
  block-size: 100%;
  margin: 0;
  opacity: 0;
  pointer-events: none;
}

.spectrum-Rating-icon {
  position: relative;
  background-size: contain;
  background-repeat: no-repeat;
  inline-size: var(--mod-rating-icon-width, var(--spectrum-rating-icon-width));
  block-size: var(--mod-rating-icon-height, var(--spectrum-rating-icon-height));
  padding: var(--mod-rating-icon-spacing, var(--spectrum-rating-icon-spacing));
  padding-top: var(--mod-rating-icon-spacing-vertical-top, var(--spectrum-rating-icon-spacing-vertical-top));
  padding-bottom: var(--mod-rating-icon-spacing-vertical-top, var(--spectrum-rating-icon-spacing-vertical-top));

  .spectrum-Rating-starActive {
    display: none;
  }
  .spectrum-Rating-starInactive {
    display: block;
  }

  &.is-selected {
    .spectrum-Rating-starActive {
      display: block;
    }
    .spectrum-Rating-starInactive {
      display: none;
    }
  }

  &.is-currentValue {
    &:after {
      border-radius: var(--mod-rating-border-radius, var(--spectrum-rating-border-radius));
      content: '';
      block-size: var(--mod-rating-indicator-height, var(--spectrum-rating-indicator-height));
      position: absolute;
      inset-block-end: var(--mod-rating-indicator-spacing, var(--spectrum-rating-indicator-spacing));
      inset-inline-start: calc((var(--mod-rating-icon-width, var(--spectrum-rating-icon-width)) - var(--mod-rating-indicator-width, var(--spectrum-rating-indicator-width))) / 2);
      inset-inline-end: calc((var(--mod-rating-icon-width, var(--spectrum-rating-icon-width)) - var(--mod-rating-indicator-width, var(--spectrum-rating-indicator-width))) / 2);
    }
  }

  /* All stars following the hovered star */
  &:hover ~ .spectrum-Rating-icon {
    .spectrum-Rating-starActive {
      display: none;
    }
    .spectrum-Rating-starInactive {
      display: block;
    }
  }

  /* focus-ring */
  &:after {
    content: '';
    position: absolute;
    inset: calc(-2 * var(--mod-rating-focus-indicator-gap, var(--spectrum-rating-focus-indicator-gap)));

    opacity: 0;

    border-width: var(--mod-rating-focus-indicator-thickness, var(--spectrum-rating-focus-indicator-thickness));
    border-style: solid;
    border-color: var(--mod-rating-focus-indicator-color, var(--spectrum-rating-focus-indicator-color));
    border-radius: var(--mod-rating-border-radius, var(--spectrum-rating-border-radius));
  }
}

.spectrum-Rating-starActive,
.spectrum-Rating-starInactive {
  margin: 0 auto;
}

.spectrum-Rating {
  &.is-focused {
    box-shadow: 0 0 0 0
      var(--mod-rating-focus-indicator-color, var(--spectrum-rating-focus-indicator-color));
  }

  &:hover {
    .spectrum-Rating-icon {
      /* Make all stars colored when the component is hovered */
      color: var(--mod-rating-icon-color-default, var(--spectrum-rating-icon-color-default));

      &:hover {
        /* The icon that's actually hovered is darker */
        color: var(--mod-rating-icon-color-hover, var(--spectrum-rating-icon-color-hover));
      }

      &:active {
        /* The icon that's actually hovered is darker */
        color: var(--mod-rating-icon-color-down, var(--spectrum-rating-icon-color-down));
      }

      /* Show which star is currently selected */
      &.is-currentValue {
        &:after {
          /* Match the color of the star */
          background: currentColor;
        }
      }
    }
  }
}

.spectrum-Rating-icon {
  color: var(--mod-rating-icon-color-default, var(--spectrum-rating-icon-color-default));

  &.is-selected {
    color: var(--mod-rating-icon-color-key-focus, var(--spectrum-rating-icon-color-key-focus));
  }

  &:hover {
    /* All stars following the hovered star */
    & ~ .spectrum-Rating-icon {
      color: var(--mod-rating-icon-color-default, var(--spectrum-rating-icon-color-default));
    }
  }
}

.spectrum-Rating--emphasized {
  .spectrum-Rating-icon {
    color: var(--mod-rating-emphasized-icon-color-default, var(--spectrum-rating-emphasized-icon-color-default));

    &.is-selected {
      color: var(--mod-rating-emphasized-icon-color-key-focus, var(--spectrum-rating-emphasized-icon-color-key-focus));
    }

    &:hover {
      /* All stars following the hovered star */
      & ~ .spectrum-Rating-icon {
        color: var(--mod-rating-emphasized-icon-color-down, var(--spectrum-rating-emphasized-icon-color-down));
      }
    }
  }

  &:hover {
    .spectrum-Rating-icon {
      /* Make all stars selected when the component is hovered */
      color: var(--mod-rating-emphasized-icon-color-default, var(--spectrum-rating-emphasized-icon-color-default));

      &:hover {
        /* The icon that's actually hovered is darker */
        color: var(--mod-rating-emphasized-icon-color-hover, var(--spectrum-rating-emphasized-icon-color-hover));
      }

      &:active {
        color: var(--mod-rating-emphasized-icon-color-down, var(--spectrum-rating-emphasized-icon-color-down));
      }
    }
  }
}

/* Disabled */
.spectrum-Rating {
  &.is-disabled {
    .spectrum-Rating-icon {
      color: var(--mod-rating-icon-color-disabled, var(--spectrum-rating-icon-color-disabled));

      &.is-selected {
        color: var(--mod-rating-icon-color-disabled, var(--spectrum-rating-icon-color-disabled));
      }
    }
  }
}
