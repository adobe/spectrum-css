/*!
 * Copyright 2025 Adobe. All rights reserved.
 *
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at <http://www.apache.org/licenses/LICENSE-2.0>
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */

.spectrum-Rating {
	--spectrum-rating-width: var(--spectrum-rating-width-medium);

	/* Icon */
	--spectrum-rating-icon-height: var(--spectrum-workflow-icon-size-100);
	--spectrum-rating-icon-width: var(--spectrum-workflow-icon-size-100);
	--spectrum-rating-icon-color-default: var(--spectrum-neutral-content-color-default);
	--spectrum-rating-icon-color-hover: var(--spectrum-neutral-content-color-hover);
	--spectrum-rating-icon-color-down: var(--spectrum-neutral-content-color-down);

	/* Focus ring */
	--spectrum-rating-border-radius: var(--spectrum-corner-radius-medium-size-medium);
	--spectrum-rating-focus-indicator-thickness: var(--spectrum-focus-indicator-thickness);
	--spectrum-rating-focus-indicator-color: var(--spectrum-focus-indicator-color);

	/* Spacing */
	--spectrum-rating-icon-spacing: var(--spectrum-spacing-75);
	--spectrum-rating-top-to-content-area: var(--spectrum-rating-top-to-content-area-medium);
	--spectrum-rating-bottom-to-content-area: var(--spectrum-rating-bottom-to-content-area-medium);
	--spectrum-rating-edge-to-content-area: var(--spectrum-rating-edge-to-content-area-medium);

	/* Colors */
	/* selected + emphasized */
	--spectrum-rating-emphasized-icon-color-default: var(--spectrum-accent-content-color-default);
	--spectrum-rating-emphasized-icon-color-hover: var(--spectrum-accent-content-color-hover);
	--spectrum-rating-emphasized-icon-color-down: var(--spectrum-accent-content-color-down);

	/* Disabled */
	--spectrum-rating-icon-color-disabled: var(--spectrum-disabled-content-color);
	--spectrum-rating-icon-count: var(--spectrum-rating-icon-count);
}

.spectrum-Rating {
	position: relative;
	display: inline-flex;
	flex: 0 0 auto;
	justify-content: space-between;
	gap: var(--mod-rating-icon-spacing, var(--spectrum-rating-icon-spacing));
	padding-block: var(--mod-rating-top-to-content-area, var(--spectrum-rating-top-to-content-area)) var(--mod-rating-bottom-to-content-area, var(--spectrum-rating-bottom-to-content-area));
	padding-inline: var(--mod-rating-edge-to-content-area, var(--spectrum-rating-edge-to-content-area));

	border-radius: var(--mod-rating-border-radius, var(--spectrum-rating-border-radius));

	cursor: pointer;

	inline-size: var(--mod-rating-width, var(--spectrum-rating-width));

	&.is-keyboardFocused {
		box-shadow: 0 0 0 var(--mod-rating-focus-indicator-thickness, var(--spectrum-rating-focus-indicator-thickness)) var(--mod-rating-focus-indicator-color, var(--spectrum-rating-focus-indicator-color));
	}

	&:hover {
		.spectrum-Rating-icon {
			/* Make all stars colored when the component is hovered */
			color: var(--mod-rating-icon-color-default, var(--spectrum-rating-icon-color-default));
		}

		/* The icon that's actually hovered is darker */
		.spectrum-Rating-icon:hover {
			color: var(--mod-rating-icon-color-hover, var(--spectrum-rating-icon-color-hover));
		}

		.spectrum-Rating-icon:active {
			color: var(--mod-rating-icon-color-down, var(--spectrum-rating-icon-color-down));
		}

		/* When the entire component is hovered, show all solid icons */
		.spectrum-Rating-starActive {
			display: block;
		}

		.spectrum-Rating-starInactive {
			display: none;
		}
	}

	&.is-disabled,
	&.is-readOnly {
		cursor: default;
		pointer-events: none;
	}
}

.spectrum-Rating--sizeS {
	--mod-rating-width: var(--spectrum-rating-width-small);
	--mod-rating-top-to-content-area: var(--spectrum-rating-top-to-content-area-small);
	--mod-rating-edge-to-content-area: var(--spectrum-rating-edge-to-content-area-small);
	--mod-rating-bottom-to-content-area: var(--spectrum-rating-bottom-to-content-area-small);

	/* Icon */
	--mod-rating-icon-height: var(--spectrum-workflow-icon-size-75);
	--mod-rating-icon-width: var(--spectrum-workflow-icon-size-75);

	/* Focus ring */
	--mod-rating-border-radius: var(--spectrum-corner-radius-medium-size-small);
}

.spectrum-Rating-input {
	position: absolute;
	z-index: 0;
	inline-size: 100%;
	block-size: 100%;
	margin: 0;
	opacity: 0;
	pointer-events: none;
}

.spectrum-Rating-icon {
	--mod-icon-inline-size: var(--mod-rating-icon-width, var(--spectrum-rating-icon-width));
	--mod-icon-block-size: var(--mod-rating-icon-height, var(--spectrum-rating-icon-height));

	position: relative;
	background-size: contain;
	background-repeat: no-repeat;
	inline-size: var(--mod-rating-icon-width, var(--spectrum-rating-icon-width));
	block-size: var(--mod-rating-icon-height, var(--spectrum-rating-icon-height));

	.spectrum-Rating-starActive {
		display: none;
	}

	.spectrum-Rating-starInactive {
		display: block;
	}

	&.is-selected {
		.spectrum-Rating-starActive {
			display: block;
		}

		.spectrum-Rating-starInactive {
			display: none;
		}
	}

	/* All stars following the hovered star */
	&:hover ~ .spectrum-Rating-icon {
		.spectrum-Rating-starActive {
			display: none;
		}

		.spectrum-Rating-starInactive {
			display: block;
		}
	}
}

.spectrum-Rating-starActive,
.spectrum-Rating-starInactive {
	margin: 0 auto;
}

.spectrum-Rating-icon {
	color: var(--mod-rating-icon-color-default, var(--spectrum-rating-icon-color-default));

	&.is-selected {
		color: var(--mod-rating-icon-color-default, var(--spectrum-rating-icon-color-default));
	}

	&:hover {
		/* All stars following the hovered star */
		& ~ .spectrum-Rating-icon {
			color: var(--mod-rating-icon-color-default, var(--spectrum-rating-icon-color-default));
		}
	}
}

.spectrum-Rating--emphasized {
	.spectrum-Rating-icon {
		color: var(--mod-rating-icon-color-default, var(--spectrum-rating-icon-color-default));

		&.is-selected {
			color: var(--highcontrast-rating-emphasized-icon-color-default, var(--mod-rating-emphasized-icon-color-default, var(--spectrum-rating-emphasized-icon-color-default)));
		}

		/* All stars following the hovered star */
		&:hover ~ .spectrum-Rating-icon {
			color: var(--mod-rating-icon-color-default, var(--spectrum-rating-icon-color-default));
		}
	}

	&:hover .spectrum-Rating-icon {
		/* Make all stars selected when the component is hovered */
		color: var(--highcontrast-rating-emphasized-icon-color-default, var(--mod-rating-emphasized-icon-color-default, var(--spectrum-rating-emphasized-icon-color-default)));

		&:hover {
			/* The icon that's actually hovered is darker */
			color: var(--highcontrast-rating-emphasized-icon-color-hover, var(--mod-rating-emphasized-icon-color-hover, var(--spectrum-rating-emphasized-icon-color-hover)));
		}

		&:hover ~ .spectrum-Rating-icon {
			color: var(--mod-rating-icon-color-default, var(--spectrum-rating-icon-color-default));
		}

		&:active {
			color: var(--highcontrast-rating-emphasized-icon-color-down, var(--mod-rating-emphasized-icon-color-down, var(--spectrum-rating-emphasized-icon-color-down)));
		}
	}
}

/* Disabled */
.spectrum-Rating.is-disabled {
	.spectrum-Rating-icon {
		color: var(--highcontrast-rating-icon-color-disabled, var(--mod-rating-icon-color-disabled, var(--spectrum-rating-icon-color-disabled)));

		&.is-selected {
			color: var(--highcontrast-rating-icon-color-disabled, var(--mod-rating-icon-color-disabled, var(--spectrum-rating-icon-color-disabled)));
		}
	}
}

@media (forced-colors: active) {
	.spectrum-Rating {
		--highcontrast-rating-icon-color-disabled: GrayText;
		--highcontrast-rating-emphasized-icon-color-default: Highlight;
		--highcontrast-rating-emphasized-icon-color-hover: Highlight;
		--highcontrast-rating-emphasized-icon-color-down: Highlight;
		--highcontrast-rating-focus-color-outline: CanvasText;

		&.is-keyboardFocused {
			outline: 1px solid var(--highcontrast-rating-focus-color-outline);
		}
	}
}
