/*!
Copyright 2023 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

/*** TODO - Stepper was migrated using placeholder tokens, reevaluate when complete design specs are available ***/
/*** This migration combines existing Stepper styles with minimal new design instructions ***/

.spectrum-Stepper {
  /* set defaults to medium theme */
  --spectrum-stepper-width: var(--spectrum-component-height-200);
  --spectrum-stepper-height: var(--spectrum-component-height-100);
  --spectrum-stepper-border-radius: var(--spectrum-corner-radius-100);

  --spectrum-stepper-button-width: var(--spectrum-in-field-button-width-stacked-medium);

  --spectrum-stepper-button-padding: var(--spectrum-in-field-button-edge-to-fill);
  --spectrum-stepper-button-gap: var(--spectrum-in-field-button-stacked-inner-edge-to-fill);
  --spectrum-stepper-button-fill-padding-inline: var(--spectrum-in-field-button-edge-to-disclosure-icon-stacked-medium);
  --spectrum-stepper-button-fill-padding-outer-edge: var(--spectrum-in-field-button-outer-edge-to-disclosure-icon-stacked-medium);
  --spectrum-stepper-button-fill-padding-inner-edge: var(--spectrum-in-field-button-inner-edge-to-disclosure-icon-stacked-medium);


  &.spectrum-Stepper--sizeS {
    --spectrum-stepper-button-width: var(--spectrum-in-field-button-width-stacked-small);
    --spectrum-stepper-height: var(--spectrum-component-height-75);

    --spectrum-stepper-button-fill-padding-inline: var(--spectrum-in-field-button-edge-to-disclosure-icon-stacked-small);
    --spectrum-stepper-button-fill-padding-outer-edge: var(--spectrum-in-field-button-outer-edge-to-disclosure-icon-stacked-small);
    --spectrum-stepper-button-fill-padding-inner-edge: var(--spectrum-in-field-button-inner-edge-to-disclosure-icon-stacked-small);

  }

  &.spectrum-Stepper--sizeL {
    --spectrum-stepper-button-width: var(--spectrum-in-field-button-width-stacked-large);
    --spectrum-stepper-height: var(--spectrum-component-height-200);

    --spectrum-stepper-button-fill-padding-inline: var(--spectrum-in-field-button-edge-to-disclosure-icon-stacked-large);
    --spectrum-stepper-button-fill-padding-outer-edge: var(--spectrum-in-field-button-outer-edge-to-disclosure-icon-stacked-large);
    --spectrum-stepper-button-fill-padding-inner-edge: var(--spectrum-in-field-button-inner-edge-to-disclosure-icon-stacked-large);

  }

  &.spectrum-Stepper--sizeXL {
    --spectrum-stepper-button-width: var(--spectrum-in-field-button-width-stacked-extra-large);
    --spectrum-stepper-height: var(--spectrum-component-height-300);

    --spectrum-stepper-button-fill-padding-inline: var(--spectrum-in-field-button-edge-to-disclosure-icon-stacked-extra-large);
    --spectrum-stepper-button-fill-padding-outer-edge: var(--spectrum-in-field-button-outer-edge-to-disclosure-icon-stacked-extra-large);
    --spectrum-stepper-button-fill-padding-inner-edge: var(--spectrum-in-field-button-inner-edge-to-disclosure-icon-stacked-extra-large);

  }

 /*** :AFTER - this is for the :after element labeled below as hit area, but used as focus indicator in ActionButton ***/
  --spectrum-stepper-button-offset: calc(var(--spectrum-stepper-button-width) / 2 - var(--spectrum-stepper-icon-width) / 2);
    /* chevron = --spectrum-global-dimension-static-size-125 and --spectrum-global-dimension-static-size-150 = 10px and 12px */
  /* button width of 23px / 29px divided by 2 = 11.5px and 14.5px */
  /* chevron size of 10px and 12px divided by 2 = 5px and 6px */
  /* 11.5px minus 5px = 6.5px */
  /* 14.5px minus 6px = 8.5px */


  /*** New added tokens begin here - chosen to match textfield - reevaluate when fully migrating Stepper ***/
  --spectrum-stepper-animation-duration: var(--spectrum-animation-duration-100);
  
  /* background same as textfield */
  --spectrum-stepper-background-color: var(--spectrum-gray-50);
  --spectrum-stepper-background-color-disabled: var(--spectrum-disabled-background-color);

 /*** Quiet Variant ***/
  --spectrum-stepper-quiet-width: var(--spectrum-component-height-300); /* matches previous width token */
  --spectrum-stepper-quiet-button-width: var(--spectrum-stepper-button-width);

  /*** Disabled Colors ***/
  --spectrum-stepper-border-color-disabled: var(--spectrum-disabled-background-color);
  --spectrum-stepper-border-color-quiet-disabled: var(--spectrum-disabled-border-color);

  /*** Invalid Colors ***/
  --spectrum-stepper-border-color-invalid-default: var(--spectrum-negative-border-color-default);
  --spectrum-stepper-border-color-invalid-hover: var(--spectrum-negative-border-color-hover);
  --spectrum-stepper-border-color-invalid-focus: var(--spectrum-negative-border-color-focus);
  --spectrum-stepper-border-color-invalid-focus-hover: var(--spectrum-negative-border-color-focus-hover);
  --spectrum-stepper-border-color-invalid-keyboard-focus: var(--spectrum-negative-border-color-key-focus);

  /*** Focus Indicator ***/
  --spectrum-stepper-focus-indicator-width: var(--spectrum-focus-indicator-thickness);
  --spectrum-stepper-focus-indicator-gap: var(--spectrum-focus-indicator-gap);

  /*** Focus Indicator Color ***/
  --spectrum-stepper-focus-indicator-color: var(--spectrum-focus-indicator-color);
}


/********* WHCM *********/
@media (forced-colors: active) {
  .spectrum-Stepper {
    --highcontrast-stepper-border-color: CanvasText;
    --highcontrast-stepper-border-color-hover: Highlight;
    --highcontrast-stepper-border-color-focus: Highlight;
    --highcontrast-stepper-border-color-focus-hover: Highlight;
    --highcontrast-stepper-border-color-keyboard-focus: CanvasText;

    --highcontrast-stepper-border-color-disabled: GrayText;
    --highcontrast-stepper-border-color-quiet-disabled: GrayText;

    --highcontrast-stepper-border-color-invalid-default: Highlight;
    --highcontrast-stepper-border-color-invalid-hover: Highlight;
    --highcontrast-stepper-border-color-invalid-focus: Highlight;
    --highcontrast-stepper-border-color-invalid-focus-hover: Highlight;
    --highcontrast-stepper-border-color-invalid-keyboard-focus: Highlight;

    --highcontrast-stepper-button-background-color-default: Canvas;
    --highcontrast-stepper-button-background-color-hover: Canvas;
    --highcontrast-stepper-button-background-color-focus: Canvas;
    --highcontrast-stepper-button-background-color-keyboard-focus: Canvas;

    --highcontrast-stepper-focus-indicator-color: Highlight;
  }
}
.x {
 border-radius: var(--spectrum-stepper-button-border-radius-reset);
}

.spectrum-Stepper {
  position: relative;
  display: inline-flex;
  flex-direction: row;
  flex-wrap: nowrap;

  inline-size: calc(var(--mod-stepper-width, var(--spectrum-stepper-width)) + var(--mod-stepper-button-width, var(--spectrum-stepper-button-width)));
  block-size: var(--mod-stepper-height, var(--spectrum-stepper-height));
  border-radius: var(--mod-stepper-border-radius, var(--spectrum-stepper-border-radius));
  border-color: var(--mod-stepper-border-color, var(--spectrum-stepper-border-color));

  /*** Hover ***/
  &:hover:not(.is-disabled):not(.is-invalid) {
    .spectrum-Stepper-input {
      border-color: var(--highcontrast-stepper-border-color-hover, var(--mod-stepper-border-color-hover, var(--spectrum-stepper-border-color-hover)));
    }
  }


  /*** Focused ***/
  &.is-focused {
    .spectrum-Stepper-input {
      outline: none;
    }
    .spectrum-Stepper-input,
    .spectrum-Stepper-buttons,
    .spectrum-Stepper-stepUp,
    .spectrum-Stepper-stepDown {
      border-color: var(--highcontrast-stepper-border-color-focus, var(--mod-stepper-border-color-focus, var(--spectrum-stepper-border-color-focus)));
    }

    .spectrum-Stepper-stepUp,
    .spectrum-Stepper-stepDown {
      background-color: var(--highcontrast-stepper-button-background-color-focus, var(--mod-stepper-button-background-color-focus, var(--spectrum-stepper-button-background-color-focus)));
    }

    /* focused invalid */
    &.is-invalid {
      .spectrum-Stepper-input,
      .spectrum-Stepper-buttons,
      .spectrum-Stepper-stepUp,
      .spectrum-Stepper-stepDown {
        border-color: var(--highcontrast-stepper-border-color-invalid-focus, var(--mod-stepper-border-color-invalid-focus, var(--spectrum-stepper-border-color-invalid-focus)));
      }
    }
  }


  /*** Keyboard Focused ***/
  &.is-keyboardFocused,
  &:focus-visible {

    /* keyboard focus indicator is visible */
    outline: var(--mod-stepper-focus-indicator-width, var(--spectrum-stepper-focus-indicator-width)) solid;
    outline-color: var(--highcontrast-stepper-focus-indicator-color, var(--mod-stepper-focus-indicator-color, var(--spectrum-stepper-focus-indicator-color)));
    outline-offset: var(--mod-stepper-focus-indicator-gap, var(--spectrum-stepper-focus-indicator-gap));

    .spectrum-Stepper-input {
      outline: none;
    }
    
    .spectrum-Stepper-input,
    .spectrum-Stepper-buttons,
    .spectrum-Stepper-stepUp,
    .spectrum-Stepper-stepDown {
      border-color: var(--highcontrast-stepper-border-color-keyboard-focus, var(--mod-stepper-border-color-keyboard-focus, var(--spectrum-stepper-border-color-keyboard-focus)));
    }

    .spectrum-Stepper-stepUp,
    .spectrum-Stepper-stepDown {
      background-color: var(--highcontrast-stepper-button-background-color-keyboard-focus, var(--mod-stepper-button-background-color-keyboard-focus, var(--spectrum-stepper-button-background-color-keyboard-focus)));
    }

    /* keyboard focused invalid */
    &.is-invalid {
      .spectrum-Stepper-input,
      .spectrum-Stepper-buttons,
      .spectrum-Stepper-stepUp,
      .spectrum-Stepper-stepDown {
        border-color: var(--highcontrast-stepper-border-color-invalid-keyboard-focus, var(--mod-stepper-border-color-invalid-keyboard-focus, var(--spectrum-stepper-border-color-invalid-keyboard-focus)));
      }
    }
  }


  /*** Invalid ***/
  &.is-invalid {
    .spectrum-Stepper-input,
    .spectrum-Stepper-buttons,
    .spectrum-Stepper-stepUp,
    .spectrum-Stepper-stepDown {
      border-color: var(--highcontrast-stepper-border-color-invalid-default, var(--mod-stepper-border-color-invalid-default, var(--spectrum-stepper-border-color-invalid-default)));
    }

    /* invalid hover */
    &:hover {
      .spectrum-Stepper-input,
      .spectrum-Stepper-buttons,
      .spectrum-Stepper-stepUp,
      .spectrum-Stepper-stepDown {
        border-color: var(--highcontrast-stepper-border-color-invalid-hover, var(--mod-stepper-border-color-invalid-hover, var(--spectrum-stepper-border-color-invalid-hover)));
      }
    }

    /* invalid focused */
    &.is-focused {
      .spectrum-Stepper-input,
      .spectrum-Stepper-buttons,
      .spectrum-Stepper-stepUp,
      .spectrum-Stepper-stepDown {
        border-color: var(--highcontrast-stepper-border-color-invalid-focus, var(--mod-stepper-border-color-invalid-focus, var(--spectrum-stepper-border-color-invalid-focus)));
      }

      /* invalid focused hover */
      &:hover {
        .spectrum-Stepper-input,
        .spectrum-Stepper-buttons,
        .spectrum-Stepper-stepUp,
        .spectrum-Stepper-stepDown {
          border-color: var(--highcontrast-stepper-border-color-invalid-focus-hover, var(--mod-stepper-border-color-invalid-focus-hover, var(--spectrum-stepper-border-color-invalid-focus-hover)));
        }
      }
    }

    /* invalid keyboard focused */
    &.is-keyboardFocused {
      .spectrum-Stepper-input,
      .spectrum-Stepper-buttons,
      .spectrum-Stepper-stepUp,
      .spectrum-Stepper-stepDown {
        border-color: var(--highcontrast-stepper-border-color-invalid-keyboard-focus, var(--mod-stepper-border-color-invalid-keyboard-focus, var(--spectrum-stepper-border-color-invalid-keyboard-focus)));
      }
    }
  }


  /*** Disabled ***/
  &.is-disabled {
    .spectrum-Stepper-input,
    .spectrum-Stepper-buttons,
    .spectrum-Stepper-stepUp,
    .spectrum-Stepper-stepDown {
      border-color: var(--highcontrast-stepper-border-color-disabled, var(--mod-stepper-border-color-disabled, var(--spectrum-stepper-border-color-disabled)));
    }

    .spectrum-Stepper-stepUp,
    .spectrum-Stepper-stepDown {
      background-color: transparent;
    }

    .spectrum-Stepper-buttons {
      background-color: var(--spectrum-stepper-background-color-disabled);
    }
  }


  /*** Quiet ***/
  &--quiet {
    /* quiet corners not rounded */
    border-radius: 0;
    inline-size: var(--mod-stepper-quiet-width, var(--spectrum-stepper-quiet-width));

    &::after {
      content: '';
      position: absolute;
      bottom: calc(-1 * (var(--mod-stepper-focus-indicator-gap, var(--spectrum-stepper-focus-indicator-gap)) + var(--mod-stepper-focus-indicator-width, var(--spectrum-stepper-focus-indicator-width))));
      left: 0;
      inline-size: 100%;
      block-size: var(--mod-stepper-focus-indicator-width, var(--spectrum-stepper-focus-indicator-width));
    }

    .spectrum-Stepper-buttons {
      border-radius: 0;
      border-width: 0 0 var(--mod-stepper-border-width, var(--spectrum-stepper-border-width)) 0;
    }

    .spectrum-Stepper-stepUp,
    .spectrum-Stepper-stepDown {
      inline-size: var(--mod-stepper-quiet-button-width, var(--spectrum-stepper-quiet-button-width));
      min-inline-size: 0;

      border-block-start: none;
      border-inline-start: none;
      border-inline-end: none;
      border-radius: 0;
      border-width: 0;

      padding-inline-end: 0;
      justify-content: flex-end;

      /* More hitarea */
      &::after {
        content: '';
        position: absolute;
        block-size: 100%;
        inline-size: var(--mod-stepper-button-offset, var(--spectrum-stepper-button-offset));
        inset-inline-end: calc(var(--mod-stepper-button-offset, var(--spectrum-stepper-button-offset)) * -1);
      }
    }

    .spectrum-Stepper-input,
    .spectrum-Stepper-buttons,
    .spectrum-Stepper-stepUp,
    .spectrum-Stepper-stepDown {
      background-color: transparent;
    }

    /* quiet hover */
    &:hover {
      .spectrum-Stepper-buttons,
      .spectrum-Stepper-stepUp,
      .spectrum-Stepper-stepDown {
        background-color: transparent;
      }
    }

    /* quiet disabled */
    &.is-disabled {
      .spectrum-Stepper-input,
      .spectrum-Stepper-buttons,
      .spectrum-Stepper-stepUp,
      .spectrum-Stepper-stepDown {
        border-color: var(--highcontrast-stepper-border-color-quiet-disabled, var(--mod-stepper-border-color-quiet-disabled, var(--spectrum-stepper-border-color-quiet-disabled)));
        background-color: transparent;
      }
    }

    /* quiet invalid */
    &.is-invalid {
      .spectrum-Stepper-input,
      .spectrum-Stepper-buttons,
      .spectrum-Stepper-stepDown {
        border-color: var(--highcontrast-stepper-border-color-invalid-default, var(--mod-stepper-border-color-invalid-default, var(--spectrum-stepper-border-color-invalid-default)));
      }

      .spectrum-Stepper-stepUp,
      .spectrum-Stepper-stepDown {
        background-color: transparent;
      }
    }

    /* quiet focused */
    &.is-focused {
      .spectrum-Stepper-input,
      .spectrum-Stepper-buttons,
      .spectrum-Stepper-stepDown {
        border-color: var(--highcontrast-stepper-border-color-focus, var(--mod-stepper-border-color-focus, var(--spectrum-stepper-border-color-focus)));
      }

      .spectrum-Stepper-stepUp,
      .spectrum-Stepper-stepDown {
        background-color: transparent;
      }

      /* quiet focused hover */
      &:hover {
        .spectrum-Stepper-input,
        .spectrum-Stepper-buttons,
        .spectrum-Stepper-stepUp,
        .spectrum-Stepper-stepDown {
          border-color: var(--highcontrast-stepper-border-color-focus-hover, var(--mod-stepper-border-color-focus-hover, var(--spectrum-stepper-border-color-focus-hover)));
        }
      }

      /* quiet invalid */
      &.is-invalid {
        .spectrum-Stepper-input,
        .spectrum-Stepper-buttons,
        .spectrum-Stepper-stepDown {
          border-color: var(--highcontrast-stepper-border-color-invalid-focus, var(--mod-stepper-border-color-invalid-focus, var(--spectrum-stepper-border-color-invalid-focus)));
        }
      }
    }

    /* quiet keyboard focused */
    &.is-keyboardFocused {

      outline: none;

      /* quiet focus indicator only on bottom border */
      &::after {
        background-color: var(--highcontrast-stepper-focus-indicator-color, var(--mod-stepper-focus-indicator-color, var(--spectrum-stepper-focus-indicator-color)));
      }

      .spectrum-Stepper-stepUp,
      .spectrum-Stepper-stepDown {
        background-color: transparent;
      }

      .spectrum-Stepper-buttons,
      .spectrum-Stepper-stepDown {
        border-color: var(--highcontrast-stepper-border-color-keyboard-focus, var(--mod-stepper-border-color-keyboard-focus, var(--spectrum-stepper-border-color-keyboard-focus)));
      }

      /* quiet keyboard focused invalid */
      &.is-invalid {
        .spectrum-Stepper-input,
        .spectrum-Stepper-buttons,
        .spectrum-Stepper-stepDown {
          border-color: var(--highcontrast-stepper-border-color-invalid-keyboard-focus, var(--mod-stepper-border-color-invalid-keyboard-focus, var(--spectrum-stepper-border-color-invalid-keyboard-focus)));
        }
      }
    }
  }
}

.spectrum-Stepper::before {
  content: '';
}

/* container for stepUp and stepDown buttons */
.spectrum-Stepper-buttons {
  position: absolute;
  inset-inline-end: 0;

  display: flex;
  flex-direction: column;
  justify-content: center;
  /* allow express buttons to have a gap the size of the stepper border */
  row-gap: var(--mod-stepper-button-gap, var(--spectrum-stepper-button-gap));
  box-sizing: border-box;

  block-size: var(--mod-stepper-height, var(--spectrum-stepper-height));
  inline-size: var(--mod-stepper-button-width, var(--spectrum-stepper-button-width));

  padding-inline-start: var(--mod-stepper-button-padding, var(--spectrum-stepper-button-padding));
  padding-inline-end: var(--mod-stepper-button-padding, var(--spectrum-stepper-button-padding));
  padding-block-start: var(--mod-stepper-button-padding, var(--spectrum-stepper-button-padding));
  padding-block-end: var(--mod-stepper-button-padding, var(--spectrum-stepper-button-padding));

  border-color: inherit;
  border-style: none;

  /* Have to add border radius here to avoid overlapping textfield border */
  border-start-end-radius: var(--mod-stepper-border-radius, var(--spectrum-stepper-border-radius));
  border-end-end-radius: var(--mod-stepper-border-radius, var(--spectrum-stepper-border-radius));

  background-color: transparent;
  transition: border-color var(--mod-stepper-animation-duration, var(--spectrum-stepper-animation-duration)) ease-in-out;

}

.spectrum-Stepper-stepUp,
.spectrum-Stepper-stepDown {
  box-sizing: border-box;
  block-size: calc((var(--mod-stepper-height, var(--spectrum-stepper-height)) / 2) - (var(--mod-stepper-button-gap, var(--spectrum-stepper-button-gap)) * 2.5));
  inline-size: var(--mod-stepper-button-width, var(--spectrum-stepper-button-width));
  min-inline-size: 0;

  border-color: inherit;
  border-width: var(--mod-stepper-button-border-width, var(--spectrum-stepper-button-border-width));
  background-color: var(--highcontrast-stepper-button-background-color-default, var(--mod-stepper-button-background-color-default, var(--spectrum-stepper-button-background-color-default)));

  border-start-start-radius: 0;
  border-start-end-radius: var(--mod-stepper-border-radius, var(--spectrum-stepper-border-radius));
  border-end-end-radius: var(--mod-stepper-border-radius, var(--spectrum-stepper-border-radius));
  border-end-start-radius: 0;

  padding-inline-start: calc(var(--mod-stepper-button-fill-padding-inline, var(--spectrum-stepper-button-fill-padding-inline)) - var(--mod-stepper-button-border-width, var(--spectrum-stepper-button-border-width)));
  padding-inline-end: calc(var(--mod-stepper-button-fill-padding-inline, var(--spectrum-stepper-button-fill-padding-inline)) - var(--mod-stepper-button-border-width, var(--spectrum-stepper-button-border-width)));

  .spectrum-Icon {
    opacity: 1;
    margin: 0px;
  }

  /*** Action Buttons Hover ***/
  &:hover {
    background-color: var(--highcontrast-stepper-button-background-color-hover, var(--mod-stepper-button-background-color-hover, var(--spectrum-stepper-button-background-color-hover)));
  }

  /*** Action Buttons Disabled **/
  &:disabled {
    border-color: var(--highcontrast-stepper-border-color-quiet-disabled, var(--mod-stepper-border-color-quiet-disabled, var(--spectrum-stepper-border-color-quiet-disabled)));
    border-color: transparent;
  }
}

.spectrum-Stepper-stepUp {
  padding-block-start: var(--mod-stepper-button-fill-padding-outer-edge, var(--spectrum-stepper-button-fill-padding-outer-edge));
  padding-block-end: var(--mod-stepper-button-fill-padding-inner-edge, var(--spectrum-stepper-button-fill-padding-inner-edge));;

  border-start-start-radius: var(--mod-stepper-button-top-border-radius-start-start, var(--spectrum-stepper-button-top-border-radius-start-start));
  border-start-end-radius: var(--mod-stepper-button-border-radius, var(--spectrum-stepper-button-border-radius));
  border-end-start-radius: var(--mod-stepper-button-border-radius-reset, var(--spectrum-stepper-button-border-radius-reset));
  border-end-end-radius: var(--mod-stepper-button-border-radius-reset, var(--spectrum-stepper-button-border-radius-reset));
}

.spectrum-Stepper-stepDown {
  padding-block-start: var(--mod-stepper-button-fill-padding-inner-edge, var(--spectrum-stepper-button-fill-padding-inner-edge));;
  padding-block-end: var(--mod-stepper-button-fill-padding-outer-edge, var(--spectrum-stepper-button-fill-padding-outer-edge));

  border-block-start-width: 0;
  border-start-start-radius: var(--mod-stepper-button-border-radius-reset, var(--spectrum-stepper-button-border-radius-reset));
  border-start-end-radius: var(--mod-stepper-button-border-radius-reset, var(--spectrum-stepper-button-border-radius-reset)); 
  border-end-end-radius: var(--mod-stepper-button-border-radius, var(--spectrum-stepper-button-border-radius));
  border-end-start-radius: var(--mod-stepper-button-bottom-border-radius-end-start, var(--spectrum-stepper-button-bottom-border-radius-end-start));
}

/* Only remove input border if stepper is visible */
.spectrum-Stepper.hide-stepper .spectrum-Stepper-input {
  border-start-end-radius: var(--mod-stepper-border-radius, var(--spectrum-stepper-border-radius));
  border-end-end-radius: var(--mod-stepper-border-radius, var(--spectrum-stepper-border-radius));
  border-inline-end-width: var(--mod-stepper-border-width, var(--spectrum-stepper-border-width));
}
