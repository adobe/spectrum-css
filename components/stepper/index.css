/*!
Copyright 2023 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

.spectrum-Stepper {
  /* Set defaults to medium size */
  --spectrum-stepper-height: var(--spectrum-component-height-100);
  --spectrum-stepper-border-radius: var(--spectrum-corner-radius-100);

  --spectrum-stepper-button-width: var(--spectrum-in-field-button-width-stacked-medium);
  --spectrum-stepper-button-padding: var(--spectrum-in-field-button-edge-to-fill);

  --spectrum-stepper-width: calc(
    var(--mod-stepper-height, var(--spectrum-stepper-height)) * var(--mod-stepper-min-width-multiplier, var(--spectrum-text-field-minimum-width-multiplier)) +
    var(--mod-stepper-button-width, var(--spectrum-stepper-button-width)) +
    (var(--mod-stepper-border-width, var(--spectrum-stepper-border-width)) * 2)
  );

  /*** Focus Indicator ***/
  --spectrum-stepper-focus-indicator-width: var(--spectrum-focus-indicator-thickness);
  --spectrum-stepper-focus-indicator-gap: var(--spectrum-focus-indicator-gap);
  --spectrum-stepper-focus-indicator-color: var(--spectrum-focus-indicator-color);

  /*** :AFTER - this is for the :after element labeled below as hit area, but used as focus indicator in ActionButton ***/
  --spectrum-stepper-button-offset: calc(var(--spectrum-stepper-button-width) / 2);

  --spectrum-stepper-animation-duration: var(--spectrum-animation-duration-100);

  /*** MODS for sub components ***/
  --mod-infield-button-border-color: var(--highcontrast-stepper-border-color, var(--mod-stepper-border-color, var(--spectrum-stepper-border-color)));
  --mod-infield-button-border-width: var(--mod-stepper-border-width, var(--spectrum-stepper-border-width));
  --mod-textfield-border-width: var(--mod-stepper-border-width, var(--spectrum-stepper-border-width));

  &.spectrum-Stepper--sizeS {
    --spectrum-stepper-button-width: var(--spectrum-in-field-button-width-stacked-small);
    --spectrum-stepper-height: var(--spectrum-component-height-75);
  }

  &.spectrum-Stepper--sizeL {
    --spectrum-stepper-button-width: var(--spectrum-in-field-button-width-stacked-large);
    --spectrum-stepper-height: var(--spectrum-component-height-200);
  }

  &.spectrum-Stepper--sizeXL {
    --spectrum-stepper-button-width: var(--spectrum-in-field-button-width-stacked-extra-large);
    --spectrum-stepper-height: var(--spectrum-component-height-300);
  }

  /*** Quiet ***/
  &.spectrum-Stepper--quiet {
    --mod-infield-button-width-stacked: var(--mod-stepper-button-width-quiet, var(--spectrum-stepper-button-width));
    --mod-textfield-focus-indicator-color: transparent;
  }

  &.is-disabled {
    --mod-infield-button-border-color-quiet-disabled: var(--spectrum-disabled-border-color);
  }

  /*** Invalid ***/
  &.is-invalid {
    --mod-stepper-border-color: var(--mod-stepper-border-color-invalid, var(--spectrum-negative-border-color-default));
    --mod-stepper-border-color-hover: var(--mod-stepper-border-color-hover-invalid, var(--spectrum-negative-border-color-hover));
    --mod-stepper-border-color-focus: var(--mod-stepper-border-color-focus-invalid, var(--spectrum-negative-border-color-focus));
    --mod-stepper-border-color-focus-hover: var(--mod-stepper-border-color-focus-hover-invalid, var(--spectrum-negative-border-color-focus-hover));
    --mod-stepper-border-color-keyboard-focus: var(--mod-stepper-border-color-keyboard-focus-invalid, var(--spectrum-negative-border-color-key-focus));
    --mod-infield-button-border-color: var(--mod-stepper-border-color-invalid, var(--spectrum-negative-border-color-default));
  }
}


/********* WHCM *********/
@media (forced-colors: active) {
  .spectrum-Stepper {
    --highcontrast-stepper-border-color: CanvasText;
    --highcontrast-stepper-border-color-hover: Highlight;
    --highcontrast-stepper-border-color-focus: Highlight;
    --highcontrast-stepper-border-color-focus-hover: Highlight;
    --highcontrast-stepper-border-color-keyboard-focus: CanvasText;

    &.is-disabled {
      --highcontrast-stepper-border-color: GrayText;
    }

    &.is-invalid {
      --highcontrast-stepper-border-color: Highlight;
      --highcontrast-stepper-border-color-hover: Highlight;
      --highcontrast-stepper-border-color-focus: Highlight;
      --highcontrast-stepper-border-color-focus-hover: Highlight;
      --highcontrast-stepper-border-color-keyboard-focus: Highlight;
    }

    --highcontrast-stepper-button-background-color-default: Canvas;
    --highcontrast-stepper-button-background-color-hover: Canvas;
    --highcontrast-stepper-button-background-color-focus: Canvas;
    --highcontrast-stepper-button-background-color-keyboard-focus: Canvas;

    --highcontrast-stepper-focus-indicator-color: Highlight;
  }
}
.x {
 border-radius: var(--spectrum-stepper-button-border-radius-reset);
}

.spectrum-Stepper {
  position: relative;
  display: inline-flex;
  flex-flow: row nowrap;

  inline-size: var(--mod-stepper-width, var(--spectrum-stepper-width));
  block-size: var(--mod-stepper-height, var(--spectrum-stepper-height));
  border-radius: var(--mod-stepper-border-radius, var(--spectrum-stepper-border-radius));
  border-color: var(--highcontrast-stepper-border-color, var(--mod-stepper-border-color, var(--spectrum-stepper-border-color)));

  .spectrum-Stepper-input {
    border-color: var(--highcontrast-stepper-border-color, var(--mod-stepper-border-color, var(--spectrum-stepper-border-color)));
    border-start-end-radius: 0;
    border-end-end-radius: 0;
    border-inline-end-width: 0;
  }

  /*** Hover ***/
  &:hover:not(.is-disabled) {
    --mod-infield-button-border-color: var(--highcontrast-stepper-border-color-hover, var(--mod-stepper-border-color-hover, var(--spectrum-stepper-border-color-hover)));

    .spectrum-Stepper-input,
    .spectrum-Stepper-buttons {
      border-color: var(--highcontrast-stepper-border-color-hover, var(--mod-stepper-border-color-hover, var(--spectrum-stepper-border-color-hover)));
    }
  }

  /*** Focused ***/
  &.is-focused,
  &:focus {
    --mod-infield-button-background-color: var(--highcontrast-stepper-button-background-color-focus, var(--mod-stepper-button-background-color-focus, var(--spectrum-stepper-button-background-color-focus)));
    --mod-infield-button-border-color: var(--highcontrast-stepper-border-color-focus, var(--mod-stepper-border-color-focus, var(--spectrum-stepper-border-color-focus)));

    .spectrum-Stepper-input {
      outline: none;
    }
    .spectrum-Stepper-input,
    .spectrum-Stepper-buttons {
      border-color: var(--highcontrast-stepper-border-color-focus, var(--mod-stepper-border-color-focus, var(--spectrum-stepper-border-color-focus)));
    }

    &:hover {
      --mod-infield-button-border-color: var(--highcontrast-stepper-border-color-focus-hover, var(--mod-stepper-border-color-focus-hover, var(--spectrum-stepper-border-color-focus-hover)));
      
      .spectrum-Stepper-input,
      .spectrum-Stepper-buttons {
        border-color: var(--highcontrast-stepper-border-color-focus-hover, var(--mod-stepper-border-color-focus-hover, var(--spectrum-stepper-border-color-focus-hover)));
      }
    } 
  }

  /*** Keyboard Focused ***/
  &.is-keyboardFocused,
  &:focus-visible {
    --mod-infield-button-background-color: var(--highcontrast-stepper-button-background-color-keyboard-focus, var(--mod-stepper-button-background-color-keyboard-focus, var(--spectrum-stepper-button-background-color-keyboard-focus)));
    --mod-infield-button-border-color: var(--highcontrast-stepper-border-color-keyboard-focus, var(--mod-stepper-border-color-keyboard-focus, var(--spectrum-stepper-border-color-keyboard-focus)));

    /* keyboard focus indicator is visible */
    outline: var(--mod-stepper-focus-indicator-width, var(--spectrum-stepper-focus-indicator-width)) solid;
    outline-color: var(--highcontrast-stepper-focus-indicator-color, var(--mod-stepper-focus-indicator-color, var(--spectrum-stepper-focus-indicator-color)));
    outline-offset: var(--mod-stepper-focus-indicator-gap, var(--spectrum-stepper-focus-indicator-gap));

    .spectrum-Stepper-input {
      outline: none;
    }
    
    .spectrum-Stepper-input,
    .spectrum-Stepper-buttons {
      border-color: var(--highcontrast-stepper-border-color-keyboard-focus, var(--mod-stepper-border-color-keyboard-focus, var(--spectrum-stepper-border-color-keyboard-focus)));
    }
  }

}

/*** Quiet ***/
.spectrum-Stepper.spectrum-Stepper--quiet {
  /* quiet corners are not rounded */
  border-start-start-radius: 0;
  border-start-end-radius: 0;
  border-end-start-radius: 0;
  border-end-end-radius: 0;

  &.hide-stepper .spectrum-Stepper-input {
    border-inline-end-width: 0;
    border-end-end-radius: 0;
  }

  &::after {
    content: '';
    position: absolute;
    inset-block-end: calc(-1 * (var(--mod-stepper-focus-indicator-gap, var(--spectrum-stepper-focus-indicator-gap)) + var(--mod-stepper-focus-indicator-width, var(--spectrum-stepper-focus-indicator-width))));
    inset-inline-start: 0;
    inline-size: 100%;
    block-size: var(--mod-stepper-focus-indicator-width, var(--spectrum-stepper-focus-indicator-width));
  }

  .spectrum-Stepper-buttons {
    border: none;
  }

  .spectrum-Stepper-button {
    padding: 0;
  }

  .spectrum-Stepper-button.spectrum-InfieldButton--bottom .spectrum-InfieldButton-fill {
    border-block-end-width: var(--mod-stepper-border-width, var(--spectrum-stepper-border-width));
    border-end-end-radius: 0;
    border-end-start-radius: 0;
  }

  .spectrum-Stepper-button .spectrum-InfieldButton-fill {
    justify-content: flex-end;
  }

  .spectrum-Stepper-input,
  .spectrum-Stepper-buttons {
    background-color: transparent;
  }

  /* quiet hover */
  &:hover {
    .spectrum-Stepper-buttons{
      background-color: transparent;
    }
  }

  /* quiet keyboard focused */
  &.is-keyboardFocused {

    outline: none;

    /* quiet focus indicator only on bottom border */
    &::after {
      background-color: var(--highcontrast-stepper-focus-indicator-color, var(--mod-stepper-focus-indicator-color, var(--spectrum-stepper-focus-indicator-color)));
    }
  }
}

.spectrum-Stepper::before {
  content: '';
}

/* container for stepUp and stepDown buttons */
.spectrum-Stepper-buttons {
  display: flex;
  flex-direction: column;
  justify-content: center;
  box-sizing: border-box;

  block-size: var(--mod-stepper-height, var(--spectrum-stepper-height));
  inline-size: var(--mod-stepper-button-width, var(--spectrum-stepper-button-width));

  border-color: var(--highcontrast-stepper-border-color, var(--mod-stepper-border-color, var(--spectrum-stepper-border-color)));
  border-style: var(--mod-stepper-buttons-border-style, var(--spectrum-stepper-buttons-border-style));
  border-width: var(--mod-stepper-buttons-border-width, var(--spectrum-stepper-buttons-border-width));
  border-inline-start-width: 0;

  /* Have to add border radius here to avoid overlapping textfield border */
  border-start-end-radius: var(--mod-stepper-border-radius, var(--spectrum-stepper-border-radius));
  border-end-end-radius: var(--mod-stepper-border-radius, var(--spectrum-stepper-border-radius));

  background-color: var(--highcontrast-stepper-buttons-background-color, var(--mod-stepper-buttons-background-color, var(--spectrum-stepper-buttons-background-color)));
  transition: border-color var(--mod-stepper-animation-duration, var(--spectrum-stepper-animation-duration)) ease-in-out;
}

.spectrum-Stepper-button.spectrum-InfieldButton--top {
  padding-block-start: calc(var(--mod-stepper-button-padding, var(--spectrum-stepper-button-padding)) - var(--mod-stepper-border-width, var(--spectrum-stepper-border-width)));
}

.spectrum-Stepper-button.spectrum-InfieldButton--bottom {
  padding-block-end: calc(var(--mod-stepper-button-padding, var(--spectrum-stepper-button-padding)) - var(--mod-stepper-border-width, var(--spectrum-stepper-border-width)));
}

/* hide-stepper */
.spectrum-Stepper.hide-stepper .spectrum-Stepper-input {
  border-start-end-radius: var(--mod-stepper-border-radius, var(--spectrum-stepper-border-radius));
  border-end-end-radius: var(--mod-stepper-border-radius, var(--spectrum-stepper-border-radius));
  border-inline-end-width: var(--mod-stepper-border-width, var(--spectrum-stepper-border-width));
}
