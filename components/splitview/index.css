/*!
 * Copyright 2024 Adobe. All rights reserved.
 *
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at <http://www.apache.org/licenses/LICENSE-2.0>
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */

 @import "themes/spectrum-two.css";

.spectrum-SplitView {
	overflow: hidden;
	display: flex;
}

.spectrum-SplitView-pane {
	block-size: 100%;
	color: var(--mod-splitview-content-color, var(--spectrum-splitview-content-color));
	background-color: var(--mod-splitview-background-color, var(--spectrum-splitview-background-color));
}

.spectrum-SplitView-gripper {
	/* Prevent touch-action on handle */
	touch-action: none;
	content: "";
	position: absolute;

	inset-block-start: 50%;

	/* half of (width + horizontal border - handle width) * -1 (for negative opposite) */
	inset-inline-start: calc(((var(--mod-splitview-gripper-width, var(--spectrum-splitview-gripper-width)) + (2 * var(--mod-splitview-gripper-border-width-vertical, var(--spectrum-splitview-gripper-border-width-vertical))) - var(--mod-splitview-gripper-width, var(--spectrum-splitview-gripper-width))) / 2) * -1);
	transform: translate(0, -50%);
	display: block;
	inline-size: var(--mod-splitview-gripper-width, var(--spectrum-splitview-gripper-width));
	block-size: var(--mod-splitview-gripper-height, var(--spectrum-splitview-gripper-height));
	border-color: var(--highcontrast-splitview-handle-background-color, var(--mod-splitview-handle-background-color, var(--spectrum-splitview-handle-background-color)));
	border-style: solid;
	border-block-width: var(--mod-splitview-gripper-border-width-vertical, var(--spectrum-splitview-gripper-border-width-vertical));
	border-inline-width: var(--mod-splitview-gripper-border-width-horizontal, var(--spectrum-splitview-gripper-border-width-horizontal));
	border-radius: var(--mod-splitview-gripper-border-radius, var(--spectrum-splitview-gripper-border-radius));

	&::before {
		background-color: var(--highcontrast-splitview-handle-background-color, var(--mod-splitview-handle-background-color, var(--spectrum-splitview-handle-background-color)));
	}
}

.spectrum-SplitView-splitter {
	/* Prevent text selection while dragging */
	user-select: none;

	/* Contains the gripper */
	position: relative;
	z-index: 1;

	inline-size: var(--mod-splitview-handle-width, var(--spectrum-splitview-handle-width));
	block-size: 100%;

	background-color: var(--highcontrast-splitview-handle-background-color, var(--mod-splitview-handle-background-color, var(--spectrum-splitview-handle-background-color)));

	&.is-collapsed-start,
	&.is-collapsed-end {
		/* make the center line of the gripper */
		.spectrum-SplitView-gripper::before {
			content: "";
			position: absolute;

			inset-block-start: 0;
			inset-inline-start: calc(50% - calc(var(--mod-splitview-handle-width, var(--spectrum-splitview-handle-width)) / 2));
			inline-size: var(--mod-splitview-handle-width, var(--spectrum-splitview-handle-width));
			block-size: 100%;
		}
	}

	&.is-collapsed-start {
		.spectrum-SplitView-gripper {
			inset-inline-start: 0;
		}
	}

	&.is-collapsed-end {
		.spectrum-SplitView-gripper {
			inset-inline-start: auto;
			inset-inline-end: 0;
		}
	}
}

.spectrum-SplitView-splitter.is-draggable {
	&:hover,
	&.is-hovered {
		background-color: var(--highcontrast-splitview-handle-background-color-hover, var(--mod-splitview-handle-background-color-hover, var(--spectrum-splitview-handle-background-color-hover)));

		.spectrum-SplitView-gripper {
			border-color: var(--highcontrast-splitview-handle-background-color-hover, var(--mod-splitview-handle-background-color-hover, var(--spectrum-splitview-handle-background-color-hover)));
		}

		.spectrum-SplitView-gripper::before {
			background-color: var(--highcontrast-splitview-handle-background-color-hover, var(--mod-splitview-handle-background-color-hover, var(--spectrum-splitview-handle-background-color-hover)));
		}
	}

	&:active,
	&.is-active {
		background-color: var(--highcontrast-splitview-handle-background-color-down, var(--mod-splitview-handle-background-color-down, var(--spectrum-splitview-handle-background-color-down)));

		.spectrum-SplitView-gripper {
			border-color: var(--highcontrast-splitview-handle-background-color-down, var(--mod-splitview-handle-background-color-down, var(--spectrum-splitview-handle-background-color-down)));
		}

		/* Center line of gripper */
		.spectrum-SplitView-gripper::before {
			background-color: var(--highcontrast-splitview-handle-background-color-down, var(--mod-splitview-handle-background-color-down, var(--spectrum-splitview-handle-background-color-down)));
		}
	}

	&:focus {
		outline: none;
	}

	&:focus-visible {
		background-color: var(--highcontrast-splitview-handle-background-color-focus, var(--mod-splitview-handle-background-color-focus, var(--spectrum-splitview-handle-background-color-focus)));
		outline: none;

		.spectrum-SplitView-gripper {
			border-color: var(--highcontrast-splitview-handle-background-color-focus, var(--mod-splitview-handle-background-color-focus, var(--spectrum-splitview-handle-background-color-focus)));
			box-shadow: 0 0 0 1px var(--highcontrast-splitview-handle-background-color-focus, var(--mod-splitview-handle-background-color-focus, var(--spectrum-splitview-handle-background-color-focus)));
		}

		.spectrum-SplitView-gripper::before {
			background-color: var(--highcontrast-splitview-handle-background-color-focus, var(--mod-splitview-handle-background-color-focus, var(--spectrum-splitview-handle-background-color-focus)));
		}
	}
}

.spectrum-SplitView--vertical {
	flex-direction: column;

	.spectrum-SplitView-pane {
		inline-size: var(--mod-splitview-vertical-width, var(--spectrum-splitview-vertical-width));
		block-size: auto;
	}

	.spectrum-SplitView-gripper {
		/* half of (height + vertical border - handle width) * -1 (for negative opposite) */
		inset-block-start: calc(((var(--mod-splitview-gripper-width, var(--spectrum-splitview-gripper-width)) + (2 * var(--mod-splitview-gripper-border-width-vertical, var(--spectrum-splitview-gripper-border-width-vertical))) - var(--mod-splitview-gripper-width, var(--spectrum-splitview-gripper-width))) / 2) * -1);
		inset-inline-start: var(--mod-splitview-vertical-gripper-width, var(--spectrum-splitview-vertical-gripper-width));

		transform: translate(calc(-1 * var(--mod-splitview-vertical-gripper-width, var(--spectrum-splitview-vertical-gripper-width))), 0);
		inline-size: var(--mod-splitview-gripper-height, var(--spectrum-splitview-gripper-height));
		block-size: var(--mod-splitview-gripper-width, var(--spectrum-splitview-gripper-width));

		/* opposite of default border-width */
		border-block-width: var(--mod-splitview-gripper-border-width-horizontal, var(--spectrum-splitview-gripper-border-width-horizontal));
		border-inline-width: var(--mod-splitview-gripper-border-width-vertical, var(--spectrum-splitview-gripper-border-width-vertical));
	}

	.spectrum-SplitView-splitter {
		inline-size: var(--mod-splitview-vertical-width, var(--spectrum-splitview-vertical-width));
		block-size: var(--mod-splitview-handle-width, var(--spectrum-splitview-handle-width));
	}

	.spectrum-SplitView-splitter.is-collapsed-start,
	.spectrum-SplitView-splitter.is-collapsed-end {
		.spectrum-SplitView-gripper {
			inset-inline-start: var(--mod-splitview-vertical-gripper-width, var(--spectrum-splitview-vertical-gripper-width));
		}

		/* make the center line of the gripper */
		.spectrum-SplitView-gripper::before {
			inset-block-start: calc(var(--mod-splitview-vertical-gripper-width, var(--spectrum-splitview-vertical-gripper-width)) - calc(var(--mod-splitview-handle-width, var(--spectrum-splitview-handle-width)) / 2));
			inset-inline-start: var(--mod-splitview-vertical-gripper-reset, var(--spectrum-splitview-vertical-gripper-reset));
			inline-size: var(--mod-splitview-vertical-gripper-outer-width, var(--spectrum-splitview-vertical-gripper-outer-width));
			block-size: var(--mod-splitview-handle-width, var(--spectrum-splitview-handle-width));
		}
	}

	.spectrum-SplitView-splitter.is-collapsed-start {
		.spectrum-SplitView-gripper {
			inset-block-start: var(--mod-splitview-vertical-gripper-reset, var(--spectrum-splitview-vertical-gripper-reset));
		}
	}

	.spectrum-SplitView-splitter.is-collapsed-end {
		.spectrum-SplitView-gripper {
			inset-block-start: auto;
			inset-block-end: var(--mod-splitview-vertical-gripper-reset, var(--spectrum-splitview-vertical-gripper-reset));
		}
	}
}

@media (forced-colors: active) {
	.spectrum-SplitView {
		--highcontrast-splitview-handle-background-color: CanvasText;
		--highcontrast-splitview-handle-background-color-hover: CanvasText;
		--highcontrast-splitview-handle-background-color-down: CanvasText;
		--highcontrast-splitview-handle-background-color-focus: Highlight;
	}
}
