/*
Copyright 2023 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/
.spectrum-ColorLoupe {
  --spectrum-colorloupe-width: var(--spectrum-color-loupe-width);
  --spectrum-colorloupe-height: var(--spectrum-color-loupe-height);

  /* Distance between the loupe and the handle */
  --spectrum-colorloupe-offset: var(--spectrum-color-loupe-bottom-to-color-handle);

  /* How much to animate up to the offset distance */
  --spectrum-colorloupe-animation-distance: 8px; /* TODO: replace with forthcoming animation token */

  --spectrum-colorloupe-drop-shadow-x: var(--spectrum-drop-shadow-x);
  --spectrum-colorloupe-drop-shadow-y: var(--spectrum-color-loupe-drop-shadow-y);
  --spectrum-colorloupe-drop-shadow-blur: var(--spectrum-drop-shadow-blur);
  --spectrum-colorloupe-drop-shadow-color: var(--spectrum-drop-shadow-color);

  --spectrum-colorloupe-outer-border-width: var(--spectrum-color-loupe-outer-border-width);
  --spectrum-colorloupe-inner-border-width: 1px; /* TODO: replace with update token for color-loupe-inner-border-width */
  --spectrum-colorloupe-outer-border-color: var(--spectrum-color-loupe-outer-border);
  --spectrum-colorloupe-inner-border-color: var(--spectrum-color-loupe-inner-border);
}

.spectrum-ColorLoupe {
  inline-size: var(--spectrum-colorloupe-width);
  block-size: var(--spectrum-colorloupe-height);

  position: absolute;
  transform: translate(0, var(--spectrum-colorloupe-animation-distance));
  opacity: 0;
  transform-origin: bottom center;
  inset-block-end: calc(var(--spectrum-colorhandle-size) + var(--spectrum-colorloupe-offset));
  inset-inline: calc(40% - calc(var(--spectrum-colorloupe-width) / 2));
  transition: transform 100ms ease-in-out, opacity 125ms ease-in-out;
  pointer-events: none;

  filter:drop-shadow(
    var(--spectrum-colorloupe-drop-shadow-x)
    var(--spectrum-colorloupe-drop-shadow-y)
    var(--spectrum-colorloupe-drop-shadow-blur)
    var(--spectrum-colorloupe-drop-shadow-color)
  );

  &.is-open {
    transform: translate(0, 0);
    opacity: 1;
  }
}

.spectrum-ColorLoupe-inner-border {
  fill: var(--spectrum-picked-color);
  stroke: var(--spectrum-colorloupe-inner-border-color);
  stroke-width: var(--spectrum-colorloupe-inner-border-width);
}

.spectrum-ColorLoupe-outer-border {
  fill: none;
  stroke: var(--spectrum-colorloupe-outer-border-color);
  stroke-width: calc(var(--spectrum-colorloupe-outer-border-width) + var(--spectrum-colorloupe-inner-border-width));
}

.spectrum-ColorLoupe-spectrum {
  display: var(--spectrum-colorloupe-spectrum-visibility);
}

.spectrum-ColorLoupe-express {
  display: var(--spectrum-colorloupe-express-visibility);
}

.spectrum-colorloupe-express-loupe {
  clip-path: var(--spectrum-colorloupe-express-loupe);
}

.spectrum-colorloupe-express-m-borders {
  display: var(--spectrum-colorloupe-express-m-border);
}

.spectrum-colorloupe-express-l-borders {
  display: var(--spectrum-colorloupe-express-l-border);
}

/* hack: make sure we don't complain about this color being undefined */
.ðŸ¤« {
  --spectrum-picked-color: 0;
}

@media (forced-colors: active) {
  .spectrum-ColorLoupe {
    --spectrum-colorloupe-outer-border-color: CanvasText;
  }
}