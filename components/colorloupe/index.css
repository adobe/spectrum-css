/*!
 * Copyright 2024 Adobe. All rights reserved.
 *
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at <http://www.apache.org/licenses/LICENSE-2.0>
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */

@import "themes/spectrum-two.css";

.spectrum-ColorLoupe {
	pointer-events: none;

	position: absolute;
	inset-block-end: calc((var(--spectrum-color-handle-size) - var(--spectrum-color-handle-outer-border-width)) + var(--mod-colorloupe-offset, var(--spectrum-colorloupe-offset)));
	inset-inline-end: calc(50% - (var(--spectrum-colorloupe-width) / 2));
	transform-origin: bottom center;
	transform: translate(0, var(--mod-colorloupe-animation-distance, var(--spectrum-colorloupe-animation-distance)));
	inline-size: var(--spectrum-colorloupe-width);
	block-size: var(--spectrum-colorloupe-height);
	opacity: 0;

	filter: drop-shadow(var(--mod-colorloupe-drop-shadow-x, var(--spectrum-colorloupe-drop-shadow-x)) var(--mod-colorloupe-drop-shadow-y, var(--spectrum-colorloupe-drop-shadow-y)) var(--mod-colorloupe-drop-shadow-blur, var(--spectrum-colorloupe-drop-shadow-blur)) var(--mod-colorloupe-drop-shadow-color, var(--spectrum-colorloupe-drop-shadow-color)));

	transition:
		transform 100ms ease-in-out,
		opacity 125ms ease-in-out;

	&:dir(rtl) {
		inset-inline-end: calc(50% - (var(--spectrum-colorloupe-width) / 2) - 1px);
	}

	&.is-open {
		transform: translate(0, 0);
		opacity: 1;
	}
}

.spectrum-ColorLoupe-inner-border {
	/* Undefined variable allows custom stylesheet or JS to pass the value to this element */
	fill: var(--spectrum-picked-color);
	stroke: var(--mod-colorloupe-inner-border-color, var(--spectrum-colorloupe-inner-border-color));
	stroke-width: var(--mod-colorloupe-inner-border-width, var(--spectrum-colorloupe-inner-border-width));
}

.spectrum-ColorLoupe-outer-border {
	fill: none;
	stroke: var(--highcontrast-colorloupe-outer-border-color, var(--mod-colorloupe-outer-border-color, var(--spectrum-colorloupe-outer-border-color)));
	stroke-width: calc(var(--mod-colorloupe-outer-border-width, var(--spectrum-colorloupe-outer-border-width)) + 2px);
}

/* The checkerboard classes use opacity checkerboard tokens for dark and light color.
 The opacity-checkerboard-square-size token is not able to be used witin the SVG pattern and instead colorloupe.yml is using two different patterns toggled by --spectrum-colorloupe-checkerboard-fill */

.spectrum-ColorLoupe-checkerboard-pattern {
	fill: var(--spectrum-colorloupe-checkerboard-dark-color);
}

.spectrum-ColorLoupe-checkerboard-background {
	fill: var(--spectrum-colorloupe-checkerboard-light-color);
}

.spectrum-ColorLoupe-checkerboard-fill {
	fill: var(--spectrum-colorloupe-checkerboard-fill);
}

@media (forced-colors: active) {
	.spectrum-ColorLoupe {
		--highcontrast-colorloupe-outer-border-color: CanvasText;
	}
}
