/*
Copyright 2019 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/



.spectrum-Switch--sizeS {
  --spectrum-switch-height: var(--spectrum-component-height-75);
  --spectrum-switch-control-width: var(--spectrum-switch-control-width-small);
  --spectrum-switch-control-height: var(--spectrum-switch-control-height-small);
  --spectrum-switch-control-label-spacing: var(--spectrum-text-to-control-75);
  --spectrum-switch-spacing-top-to-control: var(--spectrum-switch-top-to-control-small);
  --spectrum-switch-spacing-top-to-label: var(--spectrum-component-top-to-text-75);

  --spectrum-switch-font-size: var(--spectrum-font-size-75);
}


.spectrum-Switch--sizeM {
  --spectrum-switch-height: var(--spectrum-component-height-100);
  --spectrum-switch-control-width: var(--spectrum-switch-control-width-medium);
  --spectrum-switch-control-height: var(--spectrum-switch-control-height-medium);
  --spectrum-switch-control-label-spacing: var(--spectrum-text-to-control-100);
  --spectrum-switch-spacing-top-to-control: var(--spectrum-switch-top-to-control-medium);
  --spectrum-switch-spacing-top-to-label: var(--spectrum-component-top-to-text-100);

  --spectrum-switch-font-size: var(--spectrum-font-size-100);

}

.spectrum-Switch--sizeL {
  --spectrum-switch-height: var(--spectrum-component-height-200);
  --spectrum-switch-control-width: var(--spectrum-switch-control-width-large);
  --spectrum-switch-control-height: var(--spectrum-switch-control-height-large);
  --spectrum-switch-control-label-spacing: var(--spectrum-text-to-control-200);
  --spectrum-switch-spacing-top-to-control: var(--spectrum-switch-top-to-control-large);
  --spectrum-switch-spacing-top-to-label: var(--spectrum-component-top-to-text-200);

  --spectrum-switch-font-size: var(--spectrum-font-size-200);

}

.spectrum-Switch--sizeXL {
  --spectrum-switch-height: var(--spectrum-component-height-300);
  --spectrum-switch-control-width: var(--spectrum-switch-control-width-extra-large);
  --spectrum-switch-control-height: var(--spectrum-switch-control-height-extra-large);
  --spectrum-switch-control-label-spacing: var(--spectrum-text-to-control-300);
  --spectrum-switch-spacing-top-to-control: var(--spectrum-switch-top-to-control-extra-large);
  --spectrum-switch-spacing-top-to-label: var(--spectrum-component-top-to-text-300);

  --spectrum-switch-font-size: var(--spectrum-font-size-300);
}


.spectrum-Switch {
  display: inline-flex;
  align-items: flex-start;

  position: relative;

  min-block-size: var(--mod-switch-height, var(--spectrum-switch-height));
  max-inline-size: 100%;

  vertical-align: top;

}

.spectrum-Switch-input {
  /* Remove the margin for input in Firefox and Safari. */
  margin: 0;

  /* Add the correct box sizing for [type="checkbox"] in IE 10-. */
  box-sizing: border-box;

  /* Remove the padding for [type="checkbox"] in IE 10-. */
  padding: 0;

  position: absolute;
  inline-size: 100%;
  block-size: 100%;
  inset-block-start: 0;
  inset-inline-start: 0;
  opacity: 0;
  z-index: 1;

  cursor: pointer;

  &:checked+.spectrum-Switch-switch {
    [dir="ltr"] &::before {
      transform: translateX(calc(var(--mod-switch-control-width, var(--spectrum-switch-control-width)) - 100%));
    }

    [dir="rtl"] &::before {
      transform: translateX(calc(-1 * (var(--mod-switch-control-width, var(--spectrum-switch-control-width)) - 100%)));
    }
  }

  &:disabled,
  &[disabled] {
    cursor: default;
  }


  &:focus-ring {
    +.spectrum-Switch-switch {
      &:after {
        margin: calc(var(--mod-focus-ring-gap, var(--spectrum-focus-ring-gap)) * -1);
      }
    }
  }
}

.spectrum-Switch-label {
  color: var(--highcontrast-switch-label-color,
      var(--mod-switch-label-color,
        var(--spectrum-switch-label-color)));
  margin-inline: var(--mod-switch-control-label-spacing, var(--spectrum-switch-control-label-spacing));
  margin-block-start: var(--mod-switch-spacing-top-to-label, var(--spectrum-switch-spacing-top-to-label));
  margin-block-end: 0;
  font-size: var(--mod-switch-font-size, var(--spectrum-switch-font-size));
  line-height: var(--mod-line-height-100, var(--spectrum-line-height-100));
  transition: color var(--mod-animation-duration-200, var(--spectrum-animation-duration-200)) ease-in-out;
}

.spectrum-Switch-switch {
  display: inline-block;
  box-sizing: border-box;
  /* positions the pseudo elements relative to this one */
  position: relative;

  inline-size: var(--spectrum-switch-control-width, var(--spectrum-switch-control-width));

  /* Fix vertical alignment when not wrapping since we're flex-start */
  margin-block: calc(var(--mod-switch-height, var(--spectrum-switch-height)) - var(--mod-switch-control-height, var(--spectrum-switch-control-height)) - var(--mod-switch-spacing-top-to-control, var(--spectrum-switch-spacing-top-to-control)));
  margin-inline: 0;

  flex-grow: 0;
  flex-shrink: 0;

  vertical-align: middle;

  transition: background var(--mod-animation-duration-100, var(--spectrum-animation-duration-100)) ease-in-out,
    border var(--mod-animation-duration-100, var(--spectrum-animation-duration-100)) ease-in-out;

  block-size: var(--mod-switch-control-height, var(--spectrum-switch-control-height));

  inset-inline-start: 0;
  inset-inline-end: 0;

  border-radius: calc(var(--mod-switch-control-height, var(--spectrum-switch-control-height)) / 2);

  &:before {
    display: block;
    position: absolute;
    content: "";
    box-sizing: border-box;
  }

  /* :before is used for the handle of the switch */
  &:before {
    transition: background var(--mod-animation-duration-100, var(--spectrum-animation-duration-100)) ease-in-out,
      border var(--mod-animation-duration-100, var(--spectrum-animation-duration-100)) ease-in-out,
      transform var(--mod-animation-duration-100, var(--spectrum-animation-duration-100)) ease-in-out,
      box-shadow var(--mod-animation-duration-100, var(--spectrum-animation-duration-100)) ease-in-out;

    inline-size: var(--mod-switch-control-height, var(--spectrum-switch-control-height));
    block-size: var(--mod-switch-control-height, var(--spectrum-switch-control-height));

    inset-block-start: 0;
    inset-inline-start: 0;

    border-width: var(--mod-border-width-200, var(--spectrum-border-width-200));
    border-radius: var(--mod-corner-radius-200, var(--spectrum-corner-radius-200));
    border-style: solid;
  }

  /* :after is used for the focus halo */
  &:after {
    border-radius: calc(calc(var(--mod-switch-control-height, var(--spectrum-switch-control-height)) / 2) + var(--mod-focus-ring-gap, var(--spectrum-focus-ring-gap)) * 2);
    content: "";
    display: block;
    position: absolute;
    inset-inline-start: 0;
    inset-inline-end: 0;
    inset-block-end: 0;
    inset-block-start: 0;
    margin: 0;

    transition: opacity var(--mod-animation-duration-100, var(--spectrum-animation-duration-100)) ease-out,
      margin var(--spectrum-animation-duration-100, var(--spectrum-animation-duration-100)) ease-out;
  }
}


/* Core Token Theming */

.spectrum-Switch {
  --spectrum-switch-label-color: var(--spectrum-neutral-content-color-default);
  --spectrum-switch-label-color-disabled: var(--spectrum-disabled-content-color);

  --spectrum-switch-background-color: var(--spectrum-gray-300);
  --spectrum-switch-background-color-selected: var(--spectrum-gray-700);

  --spectrum-switch-background-color-disabled: var(--spectrum-gray-300);

  --spectrum-switch-focus-ring-thickness: var(--mod-focus-ring-thickness, var(--spectrum-focus-ring-thickness));
  --spectrum-switch-focus-ring-color: var(--spectrum-focus-ring-color);

  --spectrum-switch-handle-background-color: var(--spectrum-gray-75);

  --spectrum-switch-handle-border-color: var(--spectrum-gray-600);
  --spectrum-switch-handle-border-color-hover: var(--spectrum-gray-700);
  --spectrum-switch-handle-border-color-down: var(--spectrum-gray-700);
  --spectrum-switch-handle-border-color-active: var(--spectrum-gray-800);

  --spectrum-switch-handle-border-color-disabled: var(--spectrum-gray-400);


  .spectrum-Switch-switch {
    background-color: var(--highcontrast-switch-background-color,
        var(--mod-switch-background-color,
          var(--spectrum-switch-background-color)));

    &:before {
      background-color: var(--highcontrast-switch-handle-background-color,
          var(--mod-switch-handle-background-color,
            var(--spectrum-switch-handle-background-color)));
      border-color: var(--highcontrast-switch-handle-border-color,
          var(--mod-switch-handle-border-color,
            var(--spectrum-switch-handle-border-color)));
    }
  }

  &:hover {
    .spectrum-Switch-switch {

      &:before {
        border-color: var(--highcontrast-switch-handle-border-color-hover,
            var(--mod-switch-handle-border-color-hover,
              var(--spectrum-switch-handle-border-color-hover)));
      }
    }
  }

  /* when transitioning to active aka selected state */
  &:active {
    .spectrum-Switch-switch {
      &:before {
        border-color: var(--highcontrast-switch-handle-border-color-down,
            var(--mod-switch-handle-border-color-down,
              var(--spectrum-switch-handle-border-color-down)));
      }
    }
  }

  &.is-focused {
    .spectrum-Switch-switch {
      &:before {
        border-color: var(--highcontrast-switch-handle-border-color-active,
            var(--spectrum-switch-handle-border-color-active,
              var(--spectrum-switch-handle-border-color-active)));
      }
    }
  }
}

/* when checked, after transition or set manually */
.spectrum-Switch-input {
  &:checked+ {
    .spectrum-Switch-switch {
      background-color: var(--highcontrast-switch-background-color-selected,
          var(--mod-switch-background-color-selected,
            var(--spectrum-switch-background-color-selected)));

      &:before {
        border-color: var(--highcontrast-switch-background-color-selected,
            var(--mod-switch-background-color-selected,
              var(--spectrum-switch-background-color-selected)));
      }
    }


  }

  /* disabled, un-mutable */
  &:disabled,
  &[disabled] {
    &+.spectrum-Switch-switch {
      background-color: var(--highcontrast-switch-background-color-disabled,
          var(--mod-switch-background-color-disabled,
            var(--spectrum-switch-background-color-disabled)));


      &:before {
        border-color: var(--highcontrast-switch-handle-border-color-disabled,
            var(--mod-switch-handle-border-color-disabled,
              var(--spectrum-switch-handle-border-color-disabled)));
      }


      ~.spectrum-Switch-label {
        color: var(--highcontrast-switch-label-color-disabled,
            var(--mod-switch-label-color-disabled,
              var(--spectrum-switch-label-color-disabled)));
      }
    }

  }
}

/* Key Focus ring */
.spectrum-Switch,
.spectrum-Switch:hover {
  .spectrum-Switch-input:focus-ring {
    &+.spectrum-Switch-switch {
      &:after {
        box-shadow: 0 0 0 var(--mod-switch-focus-ring-thickness, var(--spectrum-switch-focus-ring-thickness)) var(--highcontrast-switch-focus-ring-color,
            var(--mod-switch-focus-ring-color) var(--spectrum-switch-focus-ring-color)));
      }
    }
  }
}


/* high contrast mode */
@media (forced-colors: active) {
  .spectrum-Switch {
    forced-color-adjust: none;

    --highcontrast-switch-label-color: ButtonText;
    --highcontrast-switch-label-color-disabled: ButtonText;
    
    --highcontrast-switch-handle-background-color: ButtonFace;
    
    --highcontrast-switch-handle-border-color: ButtonText;
    --highcontrast-switch-handle-border-color-hover: Highlight;
    --highcontrast-switch-handle-border-color-down: Highlight;
    --highcontrast-switch-handle-border-color-active: Highlight;
    --highcontrast-switch-handle-border-color-disabled: Highlight;


    --highcontrast-switch-background-color: ButtonFace;
    --highcontrast-switch-background-color-selected: Highlight;
    /* disable hover as well */
    --highcontrast-switch-handle-border-color-hover: Highlight;
    --highcontrast-switch-handle-border-color-down: Highlight;
    --highcontrast-switch-focus-ring-color: ButtonText;

    .spectrum-Switch-input {
      &:not(:checked)+.spectrum-Switch-switch {
        box-shadow: inset 0 0 0 1px ButtonText;
      }
    }

    &:hover {
      .spectrum-Switch-input {
        &:not(:checked)+.spectrum-Switch-switch {
          box-shadow: inset 0 0 0 1px Highlight;
        }
      }
    }

    /* over-writes for disabled button */

    .spectrum-Switch-input {
      &:disabled,
      &[disabled] {
        &:not(:checked)+.spectrum-Switch-switch {
          box-shadow: inset 0 0 0 1px GrayText;
          background-color: ButtonFace;

          &:before {
            border-color: GrayText;
            background-color: ButtonFace;
          }
        }

        &:checked+.spectrum-Switch-switch {
          box-shadow: inset 0 0 0 1px GrayText;
          background-color: GrayText;

          &:before {
            border-color: GrayText;
            background-color: ButtonFace;
          }
        }

        
        & ~.spectrum-Switch-label {
          color: GrayText;
        }
      }
    }
  }
}