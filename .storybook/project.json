{
	"name": "storybook",
	"namedInputs": {
		"tools": [
			"{projectRoot}/assets",
			"{projectRoot}/decorators",
			"{projectRoot}/guides",
			"{projectRoot}/*.{js,html,mdx}"
		]
	},
	"targets": {
		"build": {
			"configurations": {
				"ci": {
					"commands": ["storybook build --config-dir ."]
				},
				"docs": {
					"commands": [
						"storybook build --config-dir . --output-dir ../dist/preview"
					],
					"outputs": ["{workspaceRoot}/dist/preview"]
				}
			},
			"dependsOn": ["clean", "^build"],
			"executor": "nx:run-commands",
			"inputs": ["tools", { "externalDependencies": ["storybook"] }],
			"options": {
				"commands": [
					"storybook build --config-dir . --output-dir ./storybook-static"
				],
				"cwd": "{projectRoot}"
			},
			"outputs": ["{projectRoot}/storybook-static"]
		},
		"clean": {
			"configurations": {
				"docs": {
					"commands": [
						"rimraf dist/preview",
						"test -d dist/preview && echo \"Error: dist/preview directory could not be removed\" && exit 1 || exit 0"
					],
					"cwd": "{workspaceRoot}",
					"inputs": [
						"{workspaceRoot}/dist/preview",
						{ "externalDependencies": ["rimraf"] }
					]
				}
			},
			"executor": "nx:run-commands",
			"inputs": [
				"{projectRoot}/storybook-static",
				{ "externalDependencies": ["rimraf"] }
			],
			"options": {
				"commands": [
					"rimraf storybook-static",
					"test -d storybook-static && echo \"Error: storybook-static directory could not be removed\" && exit 1 || exit 0"
				],
				"cwd": "{projectRoot}",
				"parallel": false
			}
		},
		"format": {
			"options": {
				"commands": [
					"prettier --write --cache --log-level error --ignore-unknown --no-error-on-unmatched-pattern {projectRoot}/assets/*.css && stylelint --fix --cache --allow-empty-input {projectRoot}/assets/*.css",
					"eslint --fix --cache --no-error-on-unmatched-pattern {projectRoot}/*.{js,json} {projectRoot}/**/*.js --ignore-pattern \"!.storybook/\"",
					"prettier --write --cache --log-level error --ignore-unknown --no-error-on-unmatched-pattern {projectRoot}/*.{md,mdx} {projectRoot}/**/*.{yml,mdx}"
				]
			}
		},
		"lint": {
			"options": {
				"commands": [
					"stylelint --cache --allow-empty-input --report-descriptionless-disables --report-invalid-scope-disables --report-needless-disables {projectRoot}/assets/*.css --ignore-pattern {projectRoot}/dist",
					"eslint --cache --no-error-on-unmatched-pattern --report-unused-disable-directives {projectRoot}/*.{js,json} {projectRoot}/**/*.js --ignore-pattern \"!.storybook/\" || exit 0"
				]
			}},
		"start": {
			"cache": true,
			"dependsOn": ["^build"],
			"executor": "nx:run-commands",
			"inputs": [
				"tools",
				{ "externalDependencies": ["storybook"] },
				{ "env": "WATCH_MODE" }
			],
			"options": {
				"commands": ["WATCH_MODE=true storybook dev --config-dir ."],
				"cwd": "{projectRoot}"
			}
		},
		"test": {
			"cache": true,
			"configurations": {
				"scope": {
					"commands": [
						"chromatic --build-script-name build --junit-report --only-story-names"
					]
				}
			},
			"executor": "nx:run-commands",
			"inputs": [
				"tools",
				{ "externalDependencies": ["chromatic", "storybook"] },
				{ "env": "CHROMATIC_PROJECT_TOKEN" }
			],
			"options": {
				"commands": [
					"chromatic --only-changed --build-script-name build --junit-report"
				],
				"cwd": "{projectRoot}"
			}
		}
	}
}
