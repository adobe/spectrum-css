/*
Copyright 2019 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

@import '../commons/index.css';

/* topdoc
{{ table/table-standard.yml }}
*/
/* topdoc
{{ table/table-divs.yml }}
*/
/* topdoc
{{ table/table-divs-quiet.yml }}
*/
/* topdoc
{{ table/table-dropzone.yml }}
*/

.spectrum-Table {
  border-collapse: separate;
  border-spacing: 0;
}

.spectrum-Table-sortedIcon {
  display: none;
  margin-left: var(--spectrum-table-header-sort-icon-gap);

  vertical-align: middle;

  transition: transform var(--spectrum-global-animation-duration-100) ease-in-out;
}

.spectrum-Table-headCell {
  box-sizing: border-box;
  text-align: left;
  font-size: var(--spectrum-table-header-text-size);
  font-weight: var(--spectrum-table-header-text-font-weight);
  line-height: var(--spectrum-table-header-text-line-height);
  min-height: var(--spectrum-table-header-min-height);
  letter-spacing: var(--spectrum-table-header-text-letter-spacing);
  text-transform: uppercase;
  padding: var(--spectrum-table-header-padding-y) var(--spectrum-table-header-padding-x);
  transition: color var(--spectrum-global-animation-duration-100) ease-in-out;
  cursor: default;
  outline: 0;
  border-radius: var(--spectrum-table-header-border-radius);

  &.is-sortable {
    cursor: pointer;
  }

  &.is-sorted-asc,
  &.is-sorted-desc {
    .spectrum-Table-sortedIcon {
      display: inline-block;
      /* offset icon because it's not properly aligned */
      margin-top: calc(var(--spectrum-global-dimension-size-25) * -1);
    }
  }

  &.is-sorted-asc {
    .spectrum-Table-sortedIcon {
      transform: rotateZ(180deg);
    }
  }
}

.spectrum-Table-cell--alignCenter {
  text-align: center;
}

.spectrum-Table-cell--alignRight {
  text-align: right;
}

/* Helper for shared drop target overlay */
%drop-target {
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    z-index: 1;
  }
}

.spectrum-Table-body {
  position: relative;

  border-width: var(--spectrum-table-border-size);
  border-radius: var(--spectrum-table-border-radius);
  overflow: auto;
  vertical-align: var(--spectrum-table-cell-vertical-alignment);

  &.is-drop-target {
    @inherit: %drop-target;
  }
}

/* The tbody tag doesn't allow setting a border-radius, so these hacks are to make that work
   by putting it on the individual cells instead. */
.spectrum-Table:not(.spectrum-Table--quiet) {
  tbody.spectrum-Table-body {
    border-width: var(--spectrum-table-border-size);
    border-radius: var(--spectrum-table-border-radius);

    .spectrum-Table-row:first-child .spectrum-Table-cell:first-child {
      border-top-left-radius: var(--spectrum-table-border-radius);
    }

    .spectrum-Table-row:first-child .spectrum-Table-cell:last-child {
      border-top-right-radius: var(--spectrum-table-border-radius);
    }

    .spectrum-Table-row:last-child .spectrum-Table-cell:first-child {
      border-bottom-left-radius: var(--spectrum-table-border-radius);
    }

    .spectrum-Table-row:last-child .spectrum-Table-cell:last-child {
      border-bottom-right-radius: var(--spectrum-table-border-radius);
    }
  }
}

.spectrum-Table-cell {
  box-sizing: border-box;
  font-size: var(--spectrum-table-cell-text-size);
  font-weight: var(--spectrum-table-cell-text-font-weight);
  line-height: var(--spectrum-table-cell-text-line-height);
  padding: var(--spectrum-table-cell-padding-y) var(--spectrum-table-cell-padding-x);
  /* Subtract top/bottom padding for this value to be correct in this implementation */
  min-height: calc(var(--spectrum-table-cell-min-height) - calc(var(--spectrum-table-cell-padding-y) * 2));
}

.spectrum-Table-cell,
.spectrum-Table-headCell {
  position: relative;

  &:focus-ring,
  &.is-focused {
    outline: none;

    &::before {
      content: '';

      /* Float above border */
      z-index: 1;
      position: absolute;

      top: 0;
      right: 0;
      bottom: 0;
      left: 0;

      border-radius: calc(var(--spectrum-table-cell-border-radius-key-focus) - 1px);
    }
  }
}

.spectrum-Table-headCell {
  &:focus-ring,
  &.is-focused {
    &::before {
      top: var(--spectrum-table-border-size);
      right: var(--spectrum-table-border-size);
      bottom: var(--spectrum-table-border-size);
      left: var(--spectrum-table-border-size);
    }
  }
}

.spectrum-Table-cell--divider {
  border-right-width: var(--spectrum-table-divider-border-size);
}

.spectrum-Table-row {
  position: relative;
  cursor: pointer;
  transition: background-color var(--spectrum-global-animation-duration-100) ease-in-out;

  &:focus {
    outline: 0;
  }

  &.is-drop-target {
    @inherit: %drop-target;
  }
}

.spectrum-Table > .spectrum-Table-body > .spectrum-Table-row:last-of-type {
  border-bottom-style: none;
}

/* topdoc
{{ table/table-quiet.yml }}
*/
.spectrum-Table--quiet {
  .spectrum-Table-body {
    border-radius: var(--spectrum-table-quiet-border-radius);
  }

  .spectrum-Table-body,
  .spectrum-Table-row {
    &.is-drop-target {
      &::before {
        border-radius: var(--spectrum-border-radius);
      }
    }
  }
}

/* topdoc
{{ table/table-standard-multiselect.yml }}
*/

.spectrum-Table-checkboxCell {
  padding-right: var(--spectrum-table-cell-checkbox-padding-right);
  /* have to eliminate vertical padding to allow proper vertical alignment */
  padding-top: 0px;
  padding-bottom: 0px;
  vertical-align: var(--spectrum-table-cell-checkbox-vertical-alignment);
}

.spectrum-Table-checkbox {
  vertical-align: super;
}

/* topdoc
{{ table/table-quiet-multiselect.yml }}
*/

/* topdoc
{{ table/table-dividers.yml }}
*/
