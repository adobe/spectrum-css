---
layout: pages.njk
pagination:
    data: component
    size: 1
    alias: component
    addAllPagesToCollections: true
eleventyComputed:
    permalink: "components/{{ component.folderName }}/"
    title: "{{ component.title | capitalize }}"
    eleventyNavigation:
        title: "{{ component.title | capitalize }}"
        key: "{{ component.id }}"
        parent: Components
---

<article class="site-Component" id="main">
    <header id="{{ component.id | slugify }}" class="site-Component-header">
        <h1 class="spectrum-Heading spectrum-Heading--sizeXXXL spectrum-Heading--serif">
            <a href="#{{ component.id | slugify }}">{{ component.title }}</a>
        </h1>
    </header>

    {% include 'status-table.njk' %}

    <div class="site-Component-resources">
        {% set logo %}{% include "logo.njk" %}{% endset %}

        {% if component.SpectrumSiteSlug %}
            {% set card = { type: 'Adobe', cta: 'View guidelines', href: "{{ component.SpectrumSiteSlug }}", svg: "{{ logo }}" } %}
            {% include 'link-cards.njk' %}
        {% endif %}

        {% set card = { type: 'GitHub', cta: 'View repository', href: "https://github.com/adobe/spectrum-css/tree/main/components/{{ component.folderName | slugify }}", svg: '<svg class="spectrum-Icon spectrum-Icon--sizeXXL" focusable="false" aria-hidden="true" aria-label="GitHub" viewBox="0 0 36 36"><path d="M17.988 2a16.291 16.291 0 0 0-5.147 31.747c.814.149 1.111-.354 1.111-.786 0-.386-.014-1.411-.022-2.77-4.531.984-5.487-2.184-5.487-2.184a4.32 4.32 0 0 0-1.809-2.383c-1.479-1.01.112-.99.112-.99a3.42 3.42 0 0 1 2.495 1.679 3.468 3.468 0 0 0 4.741 1.353 3.482 3.482 0 0 1 1.034-2.177C11.4 25.078 7.6 23.68 7.6 17.438a6.3 6.3 0 0 1 1.677-4.371 5.863 5.863 0 0 1 .16-4.311s1.368-.438 4.479 1.67a15.451 15.451 0 0 1 8.157 0c3.109-2.108 4.475-1.67 4.475-1.67a5.857 5.857 0 0 1 .162 4.311 6.286 6.286 0 0 1 1.674 4.371c0 6.258-3.808 7.635-7.437 8.038a3.888 3.888 0 0 1 1.106 3.017c0 2.177-.02 3.934-.02 4.468 0 .436.293.943 1.12.784A16.292 16.292 0 0 0 17.988 2z"></path></svg>' } %}
        {% include 'link-cards.njk' %}

        {% set card = { type: 'npm', cta: 'View package', href: "https://www.npmjs.com/package/@spectrum-css/{{ component.folderName | slugify }}", svg: '<svg class="spectrum-Icon spectrum-Icon--sizeXXL" viewBox="0 0 18 7" focusable="false" aria-hidden="true" aria-label="npm"><path fill="#CB3837" d="M0,0h18v6H9v1H5V6H0V0z M1,5h2V2h1v3h1V1H1V5z M6,1v5h2V5h2V1H6z M8,2h1v2H8V2z M11,1v4h2V2h1v3h1V2h1v3h1V1H11z"></path><polygon fill="#FFFFFF" points="1,5 3,5 3,2 4,2 4,5 5,5 5,1 1,1 "></polygon><path fill="#FFFFFF" d="M6,1v5h2V5h2V1H6z M9,4H8V2h1V4z"></path><polygon fill="#FFFFFF" points="11,1 11,5 13,5 13,2 14,2 14,5 15,5 15,2 16,2 16,5 17,5 17,1 "></polygon></svg>' } %}
        {% include 'link-cards.njk' %}

        {% if component.SWC and component.SWC.url %}
            {% set card = { type: 'Adobe', cta: 'Spectrum Web Components', href: "{{ component.SWC.url }}", subtitle: "{{ component.SWC.tag }}", svg: "{{ logo }}" } %}
            {% include 'link-cards.njk' %}
        {% endif %}
    </div>

{% if component.usageNotes -%}
    {% set section = { name: 'Usage notes', id: 'usage', description: component.usageNotes } %}
    {% include 'section.njk' %}
{%- endif %}

{% if component.variants %}
    {% set variantContent %}
        {% for variant in component.variants %}
            {% if variant.examples %}
                {% set section = { name: 'Variants', id: 'variants', description: variant.description } %}
                {% include 'section.njk' %}
                {% for example in variant.examples %}
                    {% include "example.njk" %}
                {% endfor %}
            {% endif %}
        {% endfor %}
    {% endset %}

    {% if component.variants.length > 1 %}
        <div class="spectrum-Tabs spectrum-Tabs--sizeS spectrum-Tabs--horizontal">
            {% for variant in component.variants %}
                <div class="spectrum-Tabs-item is-selected" tabindex="0">
                    <span class="spectrum-Tabs-itemLabel">{{ variant.title }}</span>
                </div>
            {%- endfor %}
            <div class="spectrum-Tabs-selectionIndicator" style="width: 24px; left: 0px;"></div>
            {% for variant in component.variants %}
                <div class="spectrum-Tabs-panel is-selected" tabindex="0">
                    <div class="spectrum-Tabs-panelContainer">
                        {{ variantContent | safe }}
                    </div>
                </div>
            {%- endfor %}
        </div>
    {%- else %}
        {{ variantContent | safe }}
    {%- endif %}
{%- endif %}

{% if component.cssVariables and component.cssVariables.mods.length > 0 -%}
    {% set section = { name: 'Modifiable properties', id: 'mods' } %}
    {% include 'section.njk' %}
    <table class="spectrum-Table spectrum-Table--sizeM spectrum-Table--quiet" style="width: 100%;">
        <thead class="spectrum-Table-head">
            <tr>
                <th class="spectrum-Table-headCell is-sortable is-sorted-desc" aria-sort="descending" tabindex="0">
                    Property name
                    {# TODO: use this to indicate a sortable table #}
                    {# <svg class="spectrum-Icon spectrum-UIIcon-ArrowDown100 spectrum-Table-sortedIcon" focusable="false" aria-hidden="true">
                        <use xlink:href="#spectrum-css-icon-Arrow100" />
                    </svg> #}
                </th>
                {# <th class="spectrum-Table-headCell">Description</th>
                <th class="spectrum-Table-headCell">Initial value</th> #}
            </tr>
        </thead>
        <tbody class="spectrum-Table-body">
        {% for mod in component.cssVariables.mods | sort -%}
            <tr class="spectrum-Table-row">
                <td class="spectrum-Table-cell">
                    <bdo dir="ltr" tabindex="0">{{ mod }}</bdo>
                </td>
                {# <td class="spectrum-Table-cell"></td>
                <td class="spectrum-Table-cell"></td> #}
            </tr>
        {%- endfor %}
        </tbody>
    </table>
{% endif %}
</article>

<script>
    // Show and hide code samples
    function toggleMarkupVisibility(event) {
        event.preventDefault();

        var exampleMarkup = event.target.closest('.site-Example-markup');
        var isOpen = exampleMarkup.classList.contains('is-open');
        event.target.innerHTML = isOpen ? 'Show markup' : 'Hide markup';
        exampleMarkup.classList.toggle('is-open');
    }

    document.querySelectorAll('.js-markup-toggle')
        .forEach(toggle => toggle.addEventListener('click', toggleMarkupVisibility));
</script>
