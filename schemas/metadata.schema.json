{
	"$schema": "http://json-schema.org/draft-04/schema#",
	"title": "JSON schema for Spectrum CSS component metadata",
	"type": "object",
	"version": "1",
	"description": "A validation schema for the Spectrum CSS component metadata.",
	"properties": {
		"sourceFile": {
			"type": "string",
			"pattern": "^.+\\.css$",
			"description": "The path to the source file used in generating the metadata."
		},
		"selectors": {
			"description": "These are the selectors available for the component.",
			"type": "array",
			"items": {
				"type": "string"
			}
		},
		"modifiers": {
			"description": "These are the modifiers available for the component.",
			"type": "object",
			"patternProperties": {
				"^mod-": {
					"$ref": "#/definitions/argType"
				}
			}
		},
		"component": {
			"description": "The component-level custom properties for the component.",
			"type": "object",
			"patternProperties": {
				"^spectrum-": {
					"$ref": "#/definitions/argType"
				}
			}
		},
		"global": {
			"description": "The global custom properties used in this component as generated by the design tokens.",
			"type": "object",
			"patternProperties": {
				"^spectrum-": {
					"$ref": "#/definitions/argType"
				}
			}
		},
		"passthroughs": {
			"description": "Modifier custom properties for nested components that are passed through by this component.",
			"type": "object",
			"patternProperties": {
				"^mod-": {
					"$ref": "#/definitions/argType"
				}
			}
		},
		"high-contrast": {
			"description": "Custom properties that allow high-contrast styles to be applied to the component.",
			"type": "object",
			"patternProperties": {
				"^highcontrast-": {
					"$ref": "#/definitions/argType"
				}
			}
		}
	},
	"required": [
		"sourceFile",
		"selectors",
		"modifiers",
		"component",
		"global",
		"passthroughs",
		"high-contrast"
	],
	"additionalProperties": false,
	"definitions": {
		"argType": {
			"type": "object",
			"properties": {
				"description": {
					"type": "string"
				},
				"control": {
					"$ref": "#/definitions/control"
				},
				"category": {
					"type": "string"
				},
				"subcategory": {
					"type": "string"
				},
				"value": {
					"type": "string"
				},
				"if": {
					"type": "object",
					"allOf": [
						{
							"oneOf": [
								{
									"properties": {
										"arg": {
											"type": "string"
										}
									},
									"required": ["arg"]
								},
								{
									"properties": {
										"global": {
											"type": "string"
										}
									},
									"required": ["global"]
								}
							]
						},
						{
							"oneOf": [
								{
									"properties": {
										"truthy": {
											"type": "boolean"
										}
									}
								},
								{
									"properties": {
										"exists": {
											"type": "boolean"
										}
									},
									"required": ["exists"]
								},
								{
									"properties": {
										"eq": {
											"type": "string"
										}
									},
									"required": ["eq"]
								},
								{
									"properties": {
										"neq": {
											"type": "string"
										}
									},
									"required": ["neq"]
								}
							]
						}
					]
				},
				"mapping": {
					"type": "object"
				},
				"name": {
					"type": "string"
				},
				"options": {
					"type": "array",
					"readonly": true
				},
				"table": {
					"type": "object",
					"properties": {
						"category": {
							"type": "string"
						},
						"subcategory": {
							"type": "string"
						},
						"defaultValue": {
							"type": "object",
							"properties": {
								"summary": {
									"type": "string"
								},
								"detail": {
									"type": "string"
								}
							}
						},
						"disable": {
							"type": "boolean"
						},
						"type": {
							"type": "object",
							"properties": {
								"summary": {
									"type": "string"
								},
								"detail": {
									"type": "string"
								}
							}
						}
					},
					"additionalProperties": true
				},
				"type": {}
			},
			"additionalProperties": false
		},
		"control": {
			"oneOf": [
				{
					"$ref": "#/definitions/controlTypes"
				},
				{
					"type": "boolean",
					"enum": [false]
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"$ref": "#/definitions/controlTypes"
						},
						"disable": {
							"type": "boolean"
						}
					},
					"required": ["type"],
					"allOf": [
						{
							"if": {
								"properties": {
									"type": { "const": "color" }
								},
								"then": {
									"properties": {
										"presetColors": { "type": "array", "items": { "type": "string" } }
									}
								}
							}
						},
						{
							"if": {
								"properties": {
									"type": { "const": "file" }
								},
								"then": {
									"properties": {
										"accept": { "type": "string" }
									}
								}
							}
						},
						{
							"if": {
								"properties": {
									"type": { "anyOf": [ { "const": "inline-check" }, { "const": "radio" }, { "const": "inline-radio" }, { "const": "select" }, { "const": "multi-select" } ] }
								},
								"then": {
									"properties": {
										"labels": { "type": "object", "patternProperties": { "^.*$": { "type": "string" } } }
									}
								}
							}
						},
						{
							"if": {
								"properties": {
									"type": { "anyOf": [ { "const": "range" }, { "const": "number" } ] }
								},
								"then": {
									"properties": {
										"max": { "type": "number" },
										"min": { "type": "number" },
										"step": { "type": "number" }
									}
								}
							}
						}
					]
				}
			]
		},
		"controlTypes": {
			"type": "string",
			"enum": ["color", "date", "boolean", "number", "text", "object", "check", "inline-check", "radio", "inline-radio", "select", "multi-select", "file", "range"]
		}
	}
}
