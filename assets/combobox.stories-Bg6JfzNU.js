import{T as H}from"./template-o39CSvUF.js";import{d as I}from"./index-_AwL4lpH.js";import{i as R,h as A,c as G,g as Q,n as M,a as W,l as U}from"./states-C6Exry22.js";import{s as V,i as j}from"./variants-IOMvuPrU.js";import{w as N}from"./index-Dp88iHR6.js";import{s as T,n as _,C as k,R as K,g as w,V as X}from"./decorator-BliclrE4.js";import{T as E}from"./template-D-qlzGFy.js";import{T as J}from"./template-BluAG93-.js";import{T as Y}from"./template-BuT_UzL4.js";import{T as Z}from"./template-BSWLGP2r.js";import{k as v}from"./lit-element-C96egxJg.js";import{t as q}from"./if-defined-B5hOZ0d5.js";import"./template-DKZZ-leh.js";import"./template-CKQlC29v.js";import"./capitalize-D60SaZ2R.js";import"./template-jncnNKh4.js";import"./template-CgRUgpNy.js";import"./upperCase-0eNr0WW7.js";import"./_createCompounder-DY9ZW94_.js";import"./template-CeQb37RO.js";import"./template-ClurG5n_.js";import"./template-C6FhnKVB.js";import"./v4-CQkTLCs1.js";import"./template-DcvgokMx.js";import"./template-B-7gvf2t.js";import"./template-C9EFY2jj.js";const oo="index.css",eo=[".spectrum-Combobox",".spectrum-Combobox .spectrum-Combobox-button.spectrum-PickerButton--quiet .spectrum-PickerButton-fill",".spectrum-Combobox .spectrum-Combobox-button.spectrum-PickerButton--quiet .spectrum-PickerButton-icon",".spectrum-Combobox .spectrum-Popover.is-open",".spectrum-Combobox--quiet",".spectrum-Combobox--quiet .spectrum-Combobox-input",".spectrum-Combobox--quiet .spectrum-Combobox-textfield.is-invalid .spectrum-Combobox-input",".spectrum-Combobox--quiet .spectrum-Combobox-textfield.is-invalid .spectrum-Textfield-validationIcon",".spectrum-Combobox--quiet .spectrum-Combobox-textfield.is-loading .spectrum-Combobox-input",".spectrum-Combobox--quiet .spectrum-Combobox-textfield.is-readOnly .spectrum-Combobox-input:read-only",".spectrum-Combobox--quiet .spectrum-Combobox-textfield.is-readOnly.is-disabled .spectrum-Combobox-input:read-only",".spectrum-Combobox--quiet .spectrum-Combobox-textfield.is-readOnly.is-invalid > .spectrum-Combobox-input:read-only",".spectrum-Combobox--quiet.spectrum-Combobox--sizeL",".spectrum-Combobox--quiet.spectrum-Combobox--sizeM",".spectrum-Combobox--quiet.spectrum-Combobox--sizeS",".spectrum-Combobox--quiet.spectrum-Combobox--sizeXL",".spectrum-Combobox--sizeL",".spectrum-Combobox--sizeM",".spectrum-Combobox--sizeS",".spectrum-Combobox--sizeXL",".spectrum-Combobox-button",".spectrum-Combobox-button.is-focused:not(:disabled, .is-invalid, .spectrum-PickerButton--quiet)",".spectrum-Combobox-button.is-focused:not(:disabled, .is-invalid, .spectrum-PickerButton--quiet):hover",".spectrum-Combobox-button.is-invalid.is-focused:not(:disabled, .spectrum-PickerButton--quiet)",".spectrum-Combobox-button.is-invalid.is-focused:not(:disabled, .spectrum-PickerButton--quiet):hover",".spectrum-Combobox-button.is-invalid.is-keyboardFocused:not(:disabled, .spectrum-PickerButton--quiet)",".spectrum-Combobox-button.is-invalid:not(:disabled, .spectrum-PickerButton--quiet)",".spectrum-Combobox-button.is-invalid:not(:disabled, .spectrum-PickerButton--quiet):active",".spectrum-Combobox-button.is-invalid:not(:disabled, .spectrum-PickerButton--quiet):focus",".spectrum-Combobox-button.is-invalid:not(:disabled, .spectrum-PickerButton--quiet):focus-visible",".spectrum-Combobox-button.is-invalid:not(:disabled, .spectrum-PickerButton--quiet):focus:hover",".spectrum-Combobox-button.is-invalid:not(:disabled, .spectrum-PickerButton--quiet):hover",".spectrum-Combobox-button.is-keyboardFocused:not(:disabled, .is-invalid, .spectrum-PickerButton--quiet)",".spectrum-Combobox-button:not(:disabled, .is-invalid, .spectrum-PickerButton--quiet)",".spectrum-Combobox-button:not(:disabled, .is-invalid, .spectrum-PickerButton--quiet):active",".spectrum-Combobox-button:not(:disabled, .is-invalid, .spectrum-PickerButton--quiet):focus",".spectrum-Combobox-button:not(:disabled, .is-invalid, .spectrum-PickerButton--quiet):focus-visible",".spectrum-Combobox-button:not(:disabled, .is-invalid, .spectrum-PickerButton--quiet):focus:hover",".spectrum-Combobox-button:not(:disabled, .is-invalid, .spectrum-PickerButton--quiet):hover",".spectrum-Combobox-input",".spectrum-Combobox-input::placeholder",".spectrum-Combobox-input:active",".spectrum-Combobox-input:focus",".spectrum-Combobox-input:focus:hover",".spectrum-Combobox-input:hover",".spectrum-Combobox-progress-circle",".spectrum-Combobox-progress-circle:dir(rtl)",".spectrum-Combobox-textfield",".spectrum-Combobox-textfield.is-focused .spectrum-Combobox-input",".spectrum-Combobox-textfield.is-focused .spectrum-Combobox-input:hover",".spectrum-Combobox-textfield.is-invalid .spectrum-Combobox-input",".spectrum-Combobox-textfield.is-invalid .spectrum-Textfield-validationIcon",".spectrum-Combobox-textfield.is-keyboardFocused .spectrum-Combobox-input",".spectrum-Combobox-textfield.is-loading .spectrum-Combobox-input",".spectrum-Combobox-textfield:hover .spectrum-Combobox-input",".spectrum-Combobox.is-focused .spectrum-Combobox-button.is-invalid:not(:disabled, .spectrum-PickerButton--quiet)",".spectrum-Combobox.is-focused .spectrum-Combobox-button:not(:disabled, .is-invalid, .spectrum-PickerButton--quiet)",".spectrum-Combobox.is-focused:hover .spectrum-Combobox-button.is-invalid:not(:disabled, .spectrum-PickerButton--quiet)",".spectrum-Combobox.is-focused:hover .spectrum-Combobox-button:not(:disabled, .is-invalid, .spectrum-PickerButton--quiet)",".spectrum-Combobox.is-keyboardFocused .spectrum-Combobox-button.is-invalid:not(:disabled, .spectrum-PickerButton--quiet)",".spectrum-Combobox.is-keyboardFocused .spectrum-Combobox-button:not(:disabled, .is-invalid, .spectrum-PickerButton--quiet)",".spectrum-Combobox.is-readOnly.is-disabled:not(.spectrum-Combobox--quiet) .spectrum-Combobox-input:read-only",".spectrum-Combobox.is-readOnly.is-disabled:not(.spectrum-Combobox--quiet) .spectrum-Combobox-input:read-only:hover",".spectrum-Combobox.is-readOnly.is-invalid:not(.spectrum-Combobox--quiet) .spectrum-Combobox-input:read-only",".spectrum-Combobox.is-readOnly:not(.spectrum-Combobox--quiet) .spectrum-Combobox-input:read-only",".spectrum-Combobox.is-readOnly:not(.spectrum-Combobox--quiet) .spectrum-Combobox-input:read-only:hover",".spectrum-Combobox.is-readOnly:not(.spectrum-Combobox--quiet) .spectrum-Combobox-textfield.is-keyboardFocused .spectrum-Combobox-input",".spectrum-Combobox:has(:active) .spectrum-Combobox-button.is-invalid:not(:disabled, .spectrum-PickerButton--quiet)",".spectrum-Combobox:has(:active) .spectrum-Combobox-button:not(:disabled, .is-invalid, .spectrum-PickerButton--quiet)",".spectrum-Combobox:has(:focus) .spectrum-Combobox-button.is-invalid:not(:disabled, .spectrum-PickerButton--quiet)",".spectrum-Combobox:has(:focus) .spectrum-Combobox-button:not(:disabled, .is-invalid, .spectrum-PickerButton--quiet)",".spectrum-Combobox:hover .spectrum-Combobox-button.is-invalid:not(:disabled, .spectrum-PickerButton--quiet)",".spectrum-Combobox:hover .spectrum-Combobox-button:not(:disabled, .is-invalid, .spectrum-PickerButton--quiet)",".spectrum-Combobox:hover:has(:focus) .spectrum-Combobox-button.is-invalid:not(:disabled, .spectrum-PickerButton--quiet)",".spectrum-Combobox:hover:has(:focus) .spectrum-Combobox-button:not(:disabled, .is-invalid, .spectrum-PickerButton--quiet)",".spectrum-Textfield.is-disabled .spectrum-Textfield-validationIcon",".spectrum-Textfield.is-loading .spectrum-Textfield-validationIcon",".spectrum-Textfield.is-readOnly .spectrum-Textfield-validationIcon",'[dir="rtl"] .spectrum-Combobox-progress-circle'],to=["--mod-combobox-alert-icon-color","--mod-combobox-background-color-default","--mod-combobox-background-color-disabled","--mod-combobox-background-color-focus","--mod-combobox-background-color-focus-hover","--mod-combobox-background-color-hover","--mod-combobox-background-color-key-focus","--mod-combobox-block-size","--mod-combobox-block-spacing-edge-to-alert","--mod-combobox-block-spacing-edge-to-progress-circle","--mod-combobox-border-color-default","--mod-combobox-border-color-disabled","--mod-combobox-border-color-focus","--mod-combobox-border-color-focus-hover","--mod-combobox-border-color-hover","--mod-combobox-border-color-invalid-default","--mod-combobox-border-color-invalid-focus","--mod-combobox-border-color-invalid-focus-hover","--mod-combobox-border-color-invalid-hover","--mod-combobox-border-color-invalid-key-focus","--mod-combobox-border-color-key-focus","--mod-combobox-border-radius","--mod-combobox-border-width","--mod-combobox-button-inline-offset","--mod-combobox-button-width","--mod-combobox-focus-indicator-color","--mod-combobox-focus-indicator-gap","--mod-combobox-focus-indicator-thickness","--mod-combobox-font-color-default","--mod-combobox-font-color-disabled","--mod-combobox-font-color-focus","--mod-combobox-font-color-focus-hover","--mod-combobox-font-color-hover","--mod-combobox-font-color-key-focus","--mod-combobox-font-color-placeholder","--mod-combobox-font-family","--mod-combobox-font-size","--mod-combobox-font-style","--mod-combobox-font-weight","--mod-combobox-icon-size","--mod-combobox-inline-size","--mod-combobox-line-height","--mod-combobox-min-inline-size","--mod-combobox-readonly-input-border-color","--mod-combobox-spacing-block-end-edge-to-text","--mod-combobox-spacing-block-start-edge-to-text","--mod-combobox-spacing-edge-to-menu","--mod-combobox-spacing-inline-end-edge-to-text","--mod-combobox-spacing-inline-icon-to-button","--mod-combobox-spacing-inline-start-edge-to-text","--mod-combobox-spacing-label-to-combobox"],so=["--spectrum-combo-box-minimum-width-multiplier","--spectrum-combo-box-quiet-minimum-width-multiplier","--spectrum-combo-box-visual-to-field-button-extra-large","--spectrum-combo-box-visual-to-field-button-large","--spectrum-combo-box-visual-to-field-button-medium","--spectrum-combo-box-visual-to-field-button-quiet","--spectrum-combo-box-visual-to-field-button-small","--spectrum-combobox-background-color-disabled","--spectrum-combobox-block-size","--spectrum-combobox-block-spacing-edge-to-alert","--spectrum-combobox-block-spacing-edge-to-progress-circle","--spectrum-combobox-border-color-default","--spectrum-combobox-border-color-disabled","--spectrum-combobox-border-color-focus","--spectrum-combobox-border-color-focus-hover","--spectrum-combobox-border-color-hover","--spectrum-combobox-border-color-invalid-default","--spectrum-combobox-border-color-invalid-focus","--spectrum-combobox-border-color-invalid-focus-hover","--spectrum-combobox-border-color-invalid-hover","--spectrum-combobox-border-color-invalid-key-focus","--spectrum-combobox-border-color-key-focus","--spectrum-combobox-border-radius","--spectrum-combobox-border-width","--spectrum-combobox-button-inline-offset","--spectrum-combobox-button-width","--spectrum-combobox-focus-indicator-color","--spectrum-combobox-focus-indicator-gap","--spectrum-combobox-focus-indicator-thickness","--spectrum-combobox-font-size","--spectrum-combobox-font-style","--spectrum-combobox-icon-size","--spectrum-combobox-inline-size","--spectrum-combobox-line-height","--spectrum-combobox-min-inline-size","--spectrum-combobox-readonly-background-color-disabled","--spectrum-combobox-readonly-border-color-invalid-default","--spectrum-combobox-readonly-input-background-color","--spectrum-combobox-readonly-input-border-color","--spectrum-combobox-readonly-text-color-disabled","--spectrum-combobox-spacing-block-end-edge-to-text","--spectrum-combobox-spacing-block-start-edge-to-text","--spectrum-combobox-spacing-edge-to-menu","--spectrum-combobox-spacing-inline-end-edge-to-text","--spectrum-combobox-spacing-inline-icon-to-button","--spectrum-combobox-spacing-inline-start-edge-to-text","--spectrum-combobox-spacing-label-to-combobox"],ro=["--spectrum-border-width-100","--spectrum-component-bottom-to-text-100","--spectrum-component-bottom-to-text-200","--spectrum-component-bottom-to-text-300","--spectrum-component-bottom-to-text-75","--spectrum-component-edge-to-text-100","--spectrum-component-edge-to-text-200","--spectrum-component-edge-to-text-300","--spectrum-component-edge-to-text-75","--spectrum-component-height-100","--spectrum-component-height-200","--spectrum-component-height-300","--spectrum-component-height-75","--spectrum-component-to-menu-extra-large","--spectrum-component-to-menu-large","--spectrum-component-to-menu-medium","--spectrum-component-to-menu-small","--spectrum-component-top-to-text-100","--spectrum-component-top-to-text-200","--spectrum-component-top-to-text-300","--spectrum-component-top-to-text-75","--spectrum-corner-radius-100","--spectrum-default-font-style","--spectrum-disabled-background-color","--spectrum-disabled-border-color","--spectrum-disabled-content-color","--spectrum-field-edge-to-text-quiet","--spectrum-field-label-to-component","--spectrum-field-label-to-component-quiet-extra-large","--spectrum-field-label-to-component-quiet-large","--spectrum-field-label-to-component-quiet-medium","--spectrum-field-label-to-component-quiet-small","--spectrum-field-top-to-alert-icon-extra-large","--spectrum-field-top-to-alert-icon-large","--spectrum-field-top-to-alert-icon-medium","--spectrum-field-top-to-alert-icon-small","--spectrum-field-top-to-progress-circle-extra-large","--spectrum-field-top-to-progress-circle-large","--spectrum-field-top-to-progress-circle-medium","--spectrum-field-top-to-progress-circle-small","--spectrum-field-width","--spectrum-focus-indicator-color","--spectrum-focus-indicator-gap","--spectrum-focus-indicator-thickness","--spectrum-font-size-100","--spectrum-font-size-200","--spectrum-font-size-300","--spectrum-font-size-75","--spectrum-gray-25","--spectrum-gray-50","--spectrum-gray-500","--spectrum-gray-600","--spectrum-gray-800","--spectrum-gray-900","--spectrum-line-height-100","--spectrum-negative-border-color-default","--spectrum-negative-border-color-focus","--spectrum-negative-border-color-focus-hover","--spectrum-negative-border-color-hover","--spectrum-negative-border-color-key-focus","--spectrum-workflow-icon-size-100","--spectrum-workflow-icon-size-200","--spectrum-workflow-icon-size-300","--spectrum-workflow-icon-size-75"],io=["--mod-picker-button-background-color","--mod-picker-button-background-color-disabled","--mod-picker-button-background-color-quiet","--mod-picker-button-border-color","--mod-picker-button-border-color-quiet","--mod-picker-button-border-width","--mod-picker-button-font-color-disabled","--mod-textfield-background-color","--mod-textfield-background-color-disabled","--mod-textfield-border-color","--mod-textfield-border-color-disabled","--mod-textfield-border-color-focus","--mod-textfield-border-color-focus-hover","--mod-textfield-border-color-hover","--mod-textfield-border-color-invalid-default","--mod-textfield-border-color-invalid-focus","--mod-textfield-border-color-invalid-focus-hover","--mod-textfield-border-color-invalid-hover","--mod-textfield-border-color-invalid-keyboard-focus","--mod-textfield-border-color-keyboard-focus","--mod-textfield-border-width","--mod-textfield-focus-indicator-color","--mod-textfield-focus-indicator-gap","--mod-textfield-focus-indicator-width","--mod-textfield-font-family","--mod-textfield-font-weight","--mod-textfield-icon-color-invalid","--mod-textfield-text-color-default","--mod-textfield-text-color-disabled","--mod-textfield-text-color-focus","--mod-textfield-text-color-focus-hover","--mod-textfield-text-color-hover","--mod-textfield-text-color-keyboard-focus"],co={sourceFile:oo,selectors:eo,modifiers:to,component:so,global:ro,"system-theme":["--system-combobox-background-color-disabled","--system-combobox-border-color-default","--system-combobox-border-color-focus","--system-combobox-border-color-focus-hover","--system-combobox-border-color-hover","--system-combobox-border-color-key-focus"],passthroughs:io,"high-contrast":["--highcontrast-combobox-border-color-highlight","--highcontrast-combobox-border-color-invalid","--highcontrast-textfield-border-color-invalid-default","--highcontrast-textfield-text-color-disabled"]},mo="@spectrum-css/combobox",no="4.1.1",bo="The Spectrum CSS combobox component",uo="Apache-2.0",lo="Adobe",ao="https://opensource.adobe.com/spectrum-css/?path=/docs/components-combobox--docs",po={type:"git",url:"https://github.com/adobe/spectrum-css.git",directory:"components/combobox"},xo={url:"https://github.com/adobe/spectrum-css/issues"},fo={".":"./dist/index.css","./*.md":"./*.md","./dist/*":"./dist/*","./index-*.css":"./dist/index-*.css","./index.css":"./dist/index.css","./metadata.json":"./dist/metadata.json","./package.json":"./package.json","./stories/*":"./stories/*"},ho="dist/index.css",go={"@spectrum-css/menu":">=9.0.0 <10.0.0","@spectrum-css/pickerbutton":">=6.0.0 <7.0.0","@spectrum-css/popover":">=8.0.0 <9.0.0","@spectrum-css/progresscircle":">=5.0.0 <6.0.0","@spectrum-css/textfield":">=8.0.0 <9.0.0","@spectrum-css/tokens":">=16.0.0 <17.0.0"},vo={"@spectrum-css/menu":{optional:!0},"@spectrum-css/pickerbutton":{optional:!0},"@spectrum-css/popover":{optional:!0},"@spectrum-css/progresscircle":{optional:!0},"@spectrum-css/textfield":{optional:!0},"@spectrum-css/tokens":{optional:!0}},Co={"@spectrum-css/menu":"9.1.1","@spectrum-css/pickerbutton":"6.1.1","@spectrum-css/popover":"8.2.0","@spectrum-css/progresscircle":"5.1.0","@spectrum-css/textfield":"8.1.0","@spectrum-css/tokens":"16.0.1"},yo=["design-system","spectrum","spectrum-css","adobe","adobe-spectrum","component","css"],ko={access:"public"},wo=[{guidelines:"https://spectrum.adobe.com/page/combo-box",rootClass:"spectrum-Combobox",swc:"https://opensource.adobe.com/spectrum-web-components/components/combobox/"}],qo={name:mo,version:no,description:bo,license:uo,author:lo,homepage:ao,repository:po,bugs:xo,exports:fo,main:ho,peerDependencies:go,peerDependenciesMeta:vo,devDependencies:Co,keywords:yo,publishConfig:ko,spectrum:wo},Bo=({rootClass:o="spectrum-Combobox",id:e=w("combobox"),testId:m,customClasses:s=[],customStyles:h={},size:t="m",isOpen:n=!0,isInvalid:u=!1,isQuiet:d=!1,isDisabled:r=!1,isFocused:l=!1,isKeyboardFocused:c=!1,isLoading:b=!1,isReadOnly:p=!1,value:z=""}={},g={})=>{const{updateArgs:y}=g;return v`
		<div
			class=${K({[o]:!0,[`${o}--size${t==null?void 0:t.toUpperCase()}`]:typeof t<"u","is-open":!r&&n,[`${o}--quiet`]:d,"is-invalid":!r&&u,"is-focused":!r&&l,"is-keyboardFocused":!r&&c,"is-loading":b,"is-disabled":r,"is-readOnly":p,...s.reduce((S,D)=>({...S,[D]:!0}),{})})}
			id=${q(e)}
			data-testid=${q(m??e)}
			style=${T(h)}
		>
			${Z({size:t,isQuiet:d,isDisabled:r,isInvalid:u,isFocused:l,isKeyboardFocused:c,customClasses:[`${o}-textfield`,...b?["is-loading"]:[]],customInputClasses:[`${o}-input`],isLoading:b,customProgressCircleClasses:["spectrum-Combobox-progress-circle"],name:"field",isReadOnly:p,value:z,onclick:function(){n||y({isOpen:!0})}},g)}
			${J({customClasses:[`${o}-button`,...u?["is-invalid"]:[]],size:t,iconSet:"ui",iconName:"ChevronDown",isQuiet:d,id:w("picker"),isOpen:n,isFocused:l,isKeyboardFocused:c,isDisabled:r,position:"right",onclick:function(){y({isOpen:!n})},tabindex:"-1"},g)}
		</div>
	`},C=({size:o="m",isOpen:e=!0,isQuiet:m=!1,isDisabled:s=!1,showFieldLabel:h=!1,isReadOnly:t=!1,fieldLabelText:n="Select location",fieldLabelPosition:u="top",content:d=[],value:r="",...l}={},c={})=>{const b=o==="s"?106:o==="l"?170:o==="xl"?229:142;return v`
		<div style=${T({"margin-block-end":!t&&e&&!s?`${b}px`:void 0})}>
			${_(h,()=>E({size:o,label:n,isDisabled:s,customStyles:{"max-inline-size":"100px"},alignment:u==="left"&&"left"},c))}
			${[Y({isOpen:e&&!s&&!t,withTip:!1,position:"bottom-start",isQuiet:m,trigger:p=>Bo({size:o,isOpen:e,isQuiet:m,isDisabled:s,isReadOnly:t,value:r,...l,...p},c),content:d,popoverWidth:o==="s"?140:o==="l"?191:o==="xl"?192:166,popoverHeight:b},c)]}
		</div>
	`},F=(o,e)=>{const m=[{heading:"Closed",args:{...o,isOpen:!1}},{heading:"Closed invalid",args:{...o,isOpen:!1,isInvalid:!0}},{heading:"Closed loading",args:{...o,isOpen:!1,isLoading:!0}},{heading:"Closed disabled",args:{...o,isOpen:!1,isDisabled:!0}},{heading:"Open",args:{...o}},{heading:"Open with label",args:{...o,showFieldLabel:!0,fieldLabelText:"Country"}}];return k({direction:"row",withHeading:!1,withBorder:!1,content:v`${m.map(s=>k({withBorder:!1,heading:s.heading,containerStyles:{gap:"8px"},content:C(s.args,e)},e))}`},e)},$=X({Template:C,sizeDirection:"row",wrapperStyles:{"align-items":"flex-start"},testData:[{testHeading:"Default",isOpen:!1},{testHeading:"Quiet",isQuiet:!0,isOpen:!1},{testHeading:"Open",isOpen:!0},{testHeading:"Quiet + open",isQuiet:!0,isOpen:!0},{testHeading:"With field label top",showFieldLabel:!0,isOpen:!1,fieldLabelPosition:"top"},{testHeading:"With field label left",showFieldLabel:!0,isOpen:!1,fieldLabelPosition:"left"},{testHeading:"Truncation",isOpen:!1,value:"United States of America and to the republic"},{testHeading:"Quiet + truncation",isOpen:!1,isQuiet:!0,value:"United States of America and to the republic"}],stateData:[{testHeading:"Disabled",isDisabled:!0},{testHeading:"Invalid",isInvalid:!0},{testHeading:"Focused",isFocused:!0},{testHeading:"Keyboard focused",isKeyboardFocused:!0},{testHeading:"Loading",isLoading:!0},{testHeading:"Read-only",isReadOnly:!0}]}),Yo={title:"Combobox",component:"Combobox",argTypes:{size:V(["s","m","l","xl"]),isOpen:{...R,if:{arg:"isReadOnly",truthy:!1}},isQuiet:j,isInvalid:A,isFocused:G,isKeyboardFocused:Q,isLoading:M,isDisabled:W,isReadOnly:U,showFieldLabel:{name:"Show field label",type:{name:"boolean"},table:{type:{summary:"boolean"},category:"Component"},control:"boolean"},fieldLabelText:{name:"Field label text",type:{name:"text"},table:{type:{summary:"text"},category:"Component"},control:"text",if:{arg:"showFieldLabel",truthy:!0}},fieldLabelPosition:{name:"Field label position",type:{name:"string"},table:{type:{summary:"string"},category:"Component"},options:["top","left"],control:"select",if:{arg:"showFieldLabel",truthy:!0}},value:{name:"Value",description:"The value shows the option that a user has selected.",type:{name:"string"},table:{type:{summary:"string"},category:"Content"},control:{type:"text"}},content:{table:{disable:!0}}},args:{rootClass:"spectrum-Combobox",size:"m",isOpen:!1,isQuiet:!1,isInvalid:!1,isFocused:!1,isKeyboardFocused:!1,isLoading:!1,isDisabled:!1,isReadOnly:!1,showFieldLabel:!1,testId:"combobox",content:[(o,e)=>H({role:"listbox",subrole:"option",selectionMode:"single",hasDividers:!0,items:[{label:"Ballard",isSelected:!0,isChecked:!0},{label:"Fremont"},{label:"Greenwood"},{type:"divider"},{label:"United States of America",isDisabled:!0}],...o},e)]},parameters:{design:{type:"figma",url:"https://www.figma.com/design/Mngz9H7WZLbrCvGQf3GnsY/S2-%2F-Desktop?node-id=727-2550"},packageJson:qo,metadata:co,docs:{description:{component:"Comboboxes combine a text entry with a picker menu, allowing users to filter longer lists to only the selections matching a query.\n\n## Usage notes\n\n### General notes\n\n- Combobox uses `.spectrum-PickerButton` instead of a `.spectrum-Picker`\n- The following classes must be added:\n  - `.spectrum-Combobox-textfield` is required on the Textfield outer element (`.spectrum-Textfield`)\n  - `.spectrum-Combobox-input` is required on the `<input>` element inside of Textfields (`.spectrum-Textfield-input`)\n  - `.spectrum-Combobox-button` is required on the FieldButton (`.spectrum-ActionButton spectrum-ActionButton--sizeM`)\n\n### Indicating validity and focus\n\nValidity and focus must be bubbled up to the parent so descendants siblings can be styled. Implementations should add the following classes to the `.spectrum-Combobox` parent class in the following situations:\n\n- `.is-focused` - when the input or button is focused with the mouse\n- `.is-keyboardFocused` - when the input or button is focused with the keyboard\n- `.is-valid` - when the input has an explicit valid state\n- `.is-invalid` - when the input has an explicit invalid state\n- `.is-disabled` - when the control is disabled; should also add to the `.spectrum-Combobox-textfield` and include a `[disabled]` attribute to the `.spectrum-Combobox-button`\n- `.is-loading` - when the progress circle is being shown\n\n### Don't use placeholder text\nPutting instructions for how to complete an input, requirements, or any other essential information into placeholder text is not accessible. Once a value is entered, placeholder text is no longer viewable; if someone is using an automatic form filler, they will never get the information in the placeholder text.\n\nInstead of placeholder text, use the [help text](/docs/components-help-text--docs) description to convey requirements or to show any formatting examples that would help user comprehension. If there's placeholder text and help text at the same time, it becomes redundant and distracting, especially if they're communicating the same thing."}}},play:async({canvasElement:o})=>{await N(o).findAllByRole("presentation")}},a=$.bind({});a.tags=["!autodocs"];a.args={isOpen:!0,fieldLabelText:"Select location",value:"Ballard"};a.parameters={chromatic:{delay:1e3}};const x=F.bind({});x.storyName="Default";x.args=a.args;x.tags=["!dev"];x.parameters={chromatic:{disableSnapshot:!0}};const f=F.bind({});f.storyName="Quiet";f.args={...a.args,isQuiet:!0};f.tags=["!dev"];f.parameters={chromatic:{disableSnapshot:!0}};const i=C.bind({});i.tags=["!dev"];i.args={isReadOnly:!0,value:"Ballard"};i.parameters={chromatic:{disableSnapshot:!0}};i.storyName="Read-only";const L=$.bind({});L.tags=["!autodocs","!dev"];L.parameters={chromatic:{forcedColors:"active",modes:I}};var B,P,O;i.parameters={...i.parameters,docs:{...(B=i.parameters)==null?void 0:B.docs,description:{story:"Comboboxes have a read-only option for when content in the disabled state still needs to be shown. This allows for content to be copied, but not interacted with or changed. A combobox does not have a read-only option if no selection has been made. To enable this feature, add the `.isReadOnly` class to the combobox. To enable this feature, add the .isReadOnly class to the combobox. Then within the nested textfield component, add the .isReadOnly class and readonly attribute to the `<input>` element.",...(O=(P=i.parameters)==null?void 0:P.docs)==null?void 0:O.description}}};const Zo=["Default","DefaultGroup","QuietGroup","ReadOnly","WithForcedColors"];export{a as Default,x as DefaultGroup,f as QuietGroup,i as ReadOnly,L as WithForcedColors,Zo as __namedExportsOrder,Yo as default};
