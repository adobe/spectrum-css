import{R as J,s as y,C as u,V as Q,S as K}from"./decorator-BliclrE4.js";import{d as ee}from"./index-_AwL4lpH.js";import{k as se}from"./states-C6Exry22.js";import{s as re,a as te}from"./variants-IOMvuPrU.js";import{T as v}from"./template-D-qlzGFy.js";import{k as A}from"./lit-element-C96egxJg.js";import{t as x}from"./if-defined-B5hOZ0d5.js";import{c as ae}from"./capitalize-D60SaZ2R.js";const oe="index.css",ie=[".spectrum-ProgressBar",".spectrum-ProgressBar--indeterminate .spectrum-ProgressBar-fill",".spectrum-ProgressBar--sideLabel .spectrum-ProgressBar-label",".spectrum-ProgressBar--sideLabel .spectrum-ProgressBar-percentage",".spectrum-ProgressBar--sideLabel .spectrum-ProgressBar-track",".spectrum-ProgressBar--sizeL",".spectrum-ProgressBar--sizeM",".spectrum-ProgressBar--sizeS",".spectrum-ProgressBar--sizeXL",".spectrum-ProgressBar-fill",".spectrum-ProgressBar-label",".spectrum-ProgressBar-percentage",".spectrum-ProgressBar-track",".spectrum-ProgressBar.spectrum-ProgressBar--sideLabel",".spectrum-ProgressBar.spectrum-ProgressBar--staticWhite",".spectrum-ProgressBar:dir(rtl)",".spectrum-ProgressBar:lang(ja)",".spectrum-ProgressBar:lang(ko)",".spectrum-ProgressBar:lang(zh)","0%",'[dir="rtl"] .spectrum-ProgressBar',"to"],ne=["--mod-progressbar-animation-duration-indeterminate","--mod-progressbar-animation-ease-in-out-indeterminate","--mod-progressbar-fill-color","--mod-progressbar-fill-color-white","--mod-progressbar-fill-size-indeterminate","--mod-progressbar-font-size","--mod-progressbar-label-and-value-white","--mod-progressbar-line-height","--mod-progressbar-line-height-cjk","--mod-progressbar-max-size","--mod-progressbar-min-size","--mod-progressbar-size-default","--mod-progressbar-spacing-label-to-progressbar","--mod-progressbar-spacing-label-to-text","--mod-progressbar-spacing-top-to-text","--mod-progressbar-text-color","--mod-progressbar-thickness","--mod-progressbar-track-color"],pe=["--spectrum-progress-bar-maximum-width","--spectrum-progress-bar-minimum-width","--spectrum-progress-bar-thickness-extra-large","--spectrum-progress-bar-thickness-large","--spectrum-progress-bar-thickness-small","--spectrum-progressbar-animation-duration-indeterminate","--spectrum-progressbar-animation-ease-in-out-indeterminate","--spectrum-progressbar-corner-radius","--spectrum-progressbar-dir-indeterminate-multiplier","--spectrum-progressbar-fill-color","--spectrum-progressbar-fill-color-white","--spectrum-progressbar-fill-size-indeterminate","--spectrum-progressbar-font-size","--spectrum-progressbar-label-and-value-white","--spectrum-progressbar-line-height","--spectrum-progressbar-line-height-cjk","--spectrum-progressbar-max-size","--spectrum-progressbar-min-size","--spectrum-progressbar-size-2400","--spectrum-progressbar-size-2500","--spectrum-progressbar-size-2800","--spectrum-progressbar-size-default","--spectrum-progressbar-sized-font-size","--spectrum-progressbar-sized-size-default","--spectrum-progressbar-sized-spacing-top-to-text","--spectrum-progressbar-sized-thickness","--spectrum-progressbar-spacing-label-to-progressbar","--spectrum-progressbar-spacing-label-to-text","--spectrum-progressbar-spacing-top-to-text","--spectrum-progressbar-static-white-track-color","--spectrum-progressbar-text-color","--spectrum-progressbar-thickness","--spectrum-progressbar-track-color","--spectrum-progressbar-track-color-default","--spectrum-progressbar-track-color-white"],ce=["--spectrum-accent-color-900","--spectrum-animation-duration-2000","--spectrum-animation-ease-in-out","--spectrum-cjk-line-height-100","--spectrum-component-top-to-text-100","--spectrum-component-top-to-text-200","--spectrum-component-top-to-text-300","--spectrum-component-top-to-text-75","--spectrum-corner-radius-100","--spectrum-font-size-100","--spectrum-font-size-200","--spectrum-font-size-75","--spectrum-gray-200","--spectrum-line-height-100","--spectrum-neutral-content-color-default","--spectrum-spacing-200","--spectrum-spacing-75","--spectrum-transparent-white-400","--spectrum-white"],le=["--mod-fieldlabel-font-size"],me={sourceFile:oe,selectors:ie,modifiers:ne,component:pe,global:ce,"system-theme":["--system-progress-bar-track-color","--system-progress-bar-track-color-white"],passthroughs:le,"high-contrast":["--highcontrast-progressbar-fill-color","--highcontrast-progressbar-track-color"]},de="@spectrum-css/progressbar",ue="6.1.0",ge="The Spectrum CSS progress bar component",be="Apache-2.0",he="Adobe",fe="https://opensource.adobe.com/spectrum-css/?path=/docs/components-progress-bar--docs",we={type:"git",url:"https://github.com/adobe/spectrum-css.git",directory:"components/progressbar"},ye={url:"https://github.com/adobe/spectrum-css/issues"},ve={".":"./dist/index.css","./*.md":"./*.md","./dist/*":"./dist/*","./index-*.css":"./dist/index-*.css","./index.css":"./dist/index.css","./metadata.json":"./dist/metadata.json","./package.json":"./package.json","./stories/*":"./stories/*"},xe="dist/index.css",ke={"@spectrum-css/fieldlabel":">=10.0.0 <11.0.0","@spectrum-css/tokens":">=16.0.0 <17.0.0"},Be={"@spectrum-css/fieldlabel":{optional:!0},"@spectrum-css/tokens":{optional:!0}},Pe={"@spectrum-css/fieldlabel":"10.1.0","@spectrum-css/tokens":"16.0.1"},ze=["design-system","spectrum","spectrum-css","adobe","adobe-spectrum","component","css"],Se={access:"public"},$e=[{guidelines:"https://spectrum.adobe.com/page/progress-bar",rootClass:"spectrum-ProgressBar",swc:"https://opensource.adobe.com/spectrum-web-components/components/progress-bar/"}],Te={name:de,version:ue,description:ge,license:be,author:he,homepage:fe,repository:we,bugs:ye,exports:ve,main:xe,peerDependencies:ke,peerDependenciesMeta:Be,devDependencies:Pe,keywords:ze,publishConfig:Se,spectrum:$e},p=({rootClass:e="spectrum-ProgressBar",customClasses:s=[],labelPosition:b,staticColor:h,customWidth:O,isIndeterminate:f=!1,label:U,value:c,showValueLabel:R=!0,trackFill:X,progressBarFill:Y,customStyles:Z={},size:l="m"}={},w={})=>A`
		<div
			class=${J({[e]:!0,[`${e}--size${l==null?void 0:l.toUpperCase()}`]:typeof l<"u",[`${e}--${b}Label`]:typeof b<"u",[`${e}--static${ae(h)}`]:typeof h<"u",[`${e}--indeterminate`]:f,...s.reduce((q,E)=>({...q,[E]:!0}),{})})}
			style=${y({width:`${O}px`,...Z,"--mod-progressbar-track-color":X,"--mod-progressbar-fill-color":Y})}
			value=${x(c?`${c}%`:void 0)}
			aria-valuenow=${x(c?`${c}%`:void 0)}
			role="progressbar"
			aria-valuemin="0"
			aria-valuemax="100"
		>
			${v({size:l,label:U,customClasses:[`${e}-label`]},w)}
			${v({size:l,label:f||typeof c>"u"||!R?"":`${c}%`,customClasses:[`${e}-percentage`]},w)}

			<div class="${e}-track">
				<div
					class="${e}-fill"
					style=${y({"inline-size":`${c}%`})}
				></div>
			</div>
		</div>
	`,Le=(e,s)=>u({Template:p,withBorder:!1,withHeading:!1,content:A`
		${u({withBorder:!1,heading:"Determinate",content:p(e,s)},s)}
		${u({withBorder:!1,heading:"Indeterminate",content:p({...e,isIndeterminate:!0},s)},s)}
	`},s),g=Q({Template:p,testData:[{testHeading:"Default"},{testHeading:"Side label",labelPosition:"side"},{testHeading:"Text overflow",label:"Storage space remaining for XYZ user"},{testHeading:"Without label",label:void 0,showValueLabel:!1},{testHeading:"Without value label",showValueLabel:!1},{testHeading:"Gradient support",trackFill:"linear-gradient(to right, hotpink, orange)",progressBarFill:"linear-gradient(to left, teal, purple)"},{testHeading:"Static white",staticColor:"white"}],stateData:[{testHeading:"Indeterminate",isIndeterminate:!0,value:void 0}]}),Ce={title:"Progress bar",component:"ProgressBar",argTypes:{customWidth:{name:"Custom width",defaultValue:192,description:"Adjust the width of the component between 48px and 768px. 192px is the default width on desktop, while 240px is the default on mobile.",type:{name:"number"},table:{type:{summary:"number"},category:"Component",defaultValue:{summary:192}},control:{type:"range",min:48,max:768}},size:re(["s","m","l","xl"]),isIndeterminate:se,labelPosition:{name:"Label position",type:{name:"string"},table:{type:{summary:"string"},category:"Component",disable:!0},options:["top","side"],control:"select"},label:{name:"Label",type:{name:"string"},table:{type:{summary:"string"},category:"Content"},control:"text"},value:{name:"Percent filled",type:{name:"number"},table:{type:{summary:"number"},category:"Content"},control:{type:"range",min:0,max:100},if:{arg:"isIndeterminate",truthy:!1}},showValueLabel:{name:"Show value label",description:"The value label should not be displayed if the label itself is not displayed.",type:{name:"boolean"},table:{type:{summary:"boolean"},category:"Content"},control:{type:"boolean"},if:{arg:"isIndeterminate",truthy:!1}},trackFill:{table:{disable:!0}},progressBarFill:{table:{disable:!0}},staticColor:{...te,options:["white"]}},args:{rootClass:"spectrum-ProgressBar",size:"m",label:"Loading",labelPosition:"top",value:0,customWidth:192,isIndeterminate:!1,showValueLabel:!0},parameters:{design:{type:"figma",url:"https://www.figma.com/design/Mngz9H7WZLbrCvGQf3GnsY/S2-%2F-Desktop?node-id=13059-181"},packageJson:Te,metadata:me,docs:{description:{component:`The progress bar component shows the progression of a system operation such as downloading, uploading, processing, etc. in a visual way.

## Values
The value is the progress of a system operation (e.g., downloading, uploading, processing) within the progress bar’s range, from the min value to max value. By default, the min value starts at 0 and the max value is set to 100. These values are not applicable when a progress bar is indeterminate.

Progress bars can have a value label at the end of the track that gives detailed information about the progress (e.g. "60%" or "2 of 8"). This value label works alongside the label and should not be displayed if the label itself is not displayed. It should also not be displayed if the progress is indeterminate. Similar to the label, the value label is always placed above the track.`}}}},i=g.bind({});i.args={value:50};const r=(e,s)=>K({Template:p,withBorder:!1,withHeading:!1,...e},s);r.args=i.args;r.tags=["!dev"];r.parameters={chromatic:{disableSnapshot:!0}};const n=Le.bind({});n.args={value:50};n.tags=["!dev"];n.parameters={chromatic:{disableSnapshot:!0}};const t=p.bind({});t.storyName="Custom width";t.args={value:83,customWidth:400};t.tags=["!dev"];t.parameters={chromatic:{disableSnapshot:!0}};const a=p.bind({});a.storyName="Without label";a.args={label:"",value:50,showValueLabel:!1};a.tags=["!dev"];a.parameters={chromatic:{disableSnapshot:!0}};const o=p.bind({});o.storyName="Without value";o.args={value:83,showValueLabel:!1};o.tags=["!dev"];o.parameters={chromatic:{disableSnapshot:!0}};const m=g.bind({});m.storyName="Static white";m.tags=["!dev"];m.args={staticColor:"white",label:"Loading your fonts, images, and icons",value:50};m.parameters={chromatic:{disableSnapshot:!0}};const d=g.bind({});d.args=i.args;d.tags=["!autodocs","!dev"];d.parameters={chromatic:{forcedColors:"active",modes:ee}};var k,B,P;i.parameters={...i.parameters,docs:{...(k=i.parameters)==null?void 0:k.docs,description:{story:`By default, progress bars are determinate and have a blue fill that shows the progress. This component should have a label at the start of the track that gives context about the operation being performed. In rare cases where context is sufficient and an accessibility expert has reviewed the design, the label could be undefined. These progress bars should still include an “aria-label” or “aria-labelledby” in HTML, depending on the context. The label is always placed above the track.

When the label is too long for the available horizontal space, it wraps to form another line. The value is always shown in full and never wraps or truncates.`,...(P=(B=i.parameters)==null?void 0:B.docs)==null?void 0:P.description}}};var z,S,$,T,L;r.parameters={...r.parameters,docs:{...(z=r.parameters)==null?void 0:z.docs,source:{originalSource:`(args, context) => Sizes({
  Template,
  withBorder: false,
  withHeading: false,
  ...args
}, context)`,...($=(S=r.parameters)==null?void 0:S.docs)==null?void 0:$.source},description:{story:"Progress bars come in four different sizes: small, medium, large, and extra-large. The medium size is the default and most frequently used option.",...(L=(T=r.parameters)==null?void 0:T.docs)==null?void 0:L.description}}};var C,W,D;n.parameters={...n.parameters,docs:{...(C=n.parameters)==null?void 0:C.docs,description:{story:"Progress bars can represent either determinate or indeterminate progress. Use a determinate progress bar when progress can be calculated against a specific goal (e.g., downloading a file of a known size). Use an indeterminate progress bar when progress is happening, but the time or effort to completion can’t be determined (e.g., attempting to reconnect to a server).",...(D=(W=n.parameters)==null?void 0:W.docs)==null?void 0:D.description}}};var H,V,I;t.parameters={...t.parameters,docs:{...(H=t.parameters)==null?void 0:H.docs,description:{story:"The minimum width of a progress bar is 48px and the maximum width of a progress bar is 768px, for both desktop and mobile platform scale. Smaller progress bars should only be used in places where it’s not necessary to have a label.",...(I=(V=t.parameters)==null?void 0:V.docs)==null?void 0:I.description}}};var j,F,M;a.parameters={...a.parameters,docs:{...(j=a.parameters)==null?void 0:j.docs,description:{story:"The example below shows a progress bar without its label.",...(M=(F=a.parameters)==null?void 0:F.docs)==null?void 0:M.description}}};var _,G,N;o.parameters={...o.parameters,docs:{...(_=o.parameters)==null?void 0:_.docs,description:{story:"The example below shows a progress bar without its value label.",...(N=(G=o.parameters)==null?void 0:G.docs)==null?void 0:N.description}}};const We=["Default","Sizing","Indeterminate","CustomWidth","WithoutLabel","WithoutValue","StaticWhite","WithForcedColors"],Ge=Object.freeze(Object.defineProperty({__proto__:null,CustomWidth:t,Default:i,Indeterminate:n,Sizing:r,StaticWhite:m,WithForcedColors:d,WithoutLabel:a,WithoutValue:o,__namedExportsOrder:We,default:Ce},Symbol.toStringTag,{value:"Module"}));export{Ce as P,p as T,Ge as p};
