import{c as J}from"./icon.stories-DsQsc6t6.js";import{R as Q,s as U,n as b,g as X,C as Y,V as Z,A as p,S as q}from"./decorator-BliclrE4.js";import{d as P}from"./index-_AwL4lpH.js";import{s as ee}from"./variants-IOMvuPrU.js";import{k as i}from"./lit-element-C96egxJg.js";import{T as oe}from"./template-CKQlC29v.js";import{t as te}from"./if-defined-B5hOZ0d5.js";import{c as f}from"./capitalize-D60SaZ2R.js";import"./template-DcvgokMx.js";import"./v4-CQkTLCs1.js";const ae="index.css",re=[".spectrum-Badge",".spectrum-Badge--accent",".spectrum-Badge--blue",".spectrum-Badge--celery",".spectrum-Badge--chartreuse",".spectrum-Badge--cyan",".spectrum-Badge--fixed-block-end",".spectrum-Badge--fixed-block-start",".spectrum-Badge--fixed-inline-end",".spectrum-Badge--fixed-inline-start",".spectrum-Badge--fuchsia",".spectrum-Badge--gray",".spectrum-Badge--green",".spectrum-Badge--indigo",".spectrum-Badge--informative",".spectrum-Badge--magenta",".spectrum-Badge--negative",".spectrum-Badge--neutral",".spectrum-Badge--notice",".spectrum-Badge--orange",".spectrum-Badge--positive",".spectrum-Badge--purple",".spectrum-Badge--red",".spectrum-Badge--seafoam",".spectrum-Badge--sizeL",".spectrum-Badge--sizeS",".spectrum-Badge--sizeXL",".spectrum-Badge--yellow",".spectrum-Badge-icon",".spectrum-Badge-icon + .spectrum-Badge-label",".spectrum-Badge-icon--no-label",".spectrum-Badge-label",".spectrum-Badge-label:lang(ja)",".spectrum-Badge-label:lang(ko)",".spectrum-Badge-label:lang(zh)"],ce=["--mod-badge-background-color-accent","--mod-badge-background-color-blue","--mod-badge-background-color-celery","--mod-badge-background-color-chartreuse","--mod-badge-background-color-cyan","--mod-badge-background-color-default","--mod-badge-background-color-fuchsia","--mod-badge-background-color-gray","--mod-badge-background-color-green","--mod-badge-background-color-indigo","--mod-badge-background-color-informative","--mod-badge-background-color-magenta","--mod-badge-background-color-negative","--mod-badge-background-color-notice","--mod-badge-background-color-orange","--mod-badge-background-color-positive","--mod-badge-background-color-purple","--mod-badge-background-color-red","--mod-badge-background-color-seafoam","--mod-badge-background-color-yellow","--mod-badge-corner-radius","--mod-badge-font-size","--mod-badge-height","--mod-badge-icon-only-spacing-horizontal","--mod-badge-icon-spacing-horizontal","--mod-badge-icon-spacing-vertical-top","--mod-badge-icon-text-spacing","--mod-badge-label-icon-color","--mod-badge-label-spacing-horizontal","--mod-badge-label-spacing-vertical-bottom","--mod-badge-label-spacing-vertical-top","--mod-badge-line-height","--mod-badge-line-height-cjk","--mod-badge-workflow-icon-size"],se=["--spectrum-badge-background-color-accent","--spectrum-badge-background-color-blue","--spectrum-badge-background-color-celery","--spectrum-badge-background-color-chartreuse","--spectrum-badge-background-color-cyan","--spectrum-badge-background-color-default","--spectrum-badge-background-color-fuchsia","--spectrum-badge-background-color-gray","--spectrum-badge-background-color-green","--spectrum-badge-background-color-indigo","--spectrum-badge-background-color-informative","--spectrum-badge-background-color-magenta","--spectrum-badge-background-color-negative","--spectrum-badge-background-color-notice","--spectrum-badge-background-color-orange","--spectrum-badge-background-color-positive","--spectrum-badge-background-color-purple","--spectrum-badge-background-color-red","--spectrum-badge-background-color-seafoam","--spectrum-badge-background-color-yellow","--spectrum-badge-corner-radius","--spectrum-badge-font-size","--spectrum-badge-height","--spectrum-badge-icon-only-spacing-horizontal","--spectrum-badge-icon-spacing-horizontal","--spectrum-badge-icon-spacing-vertical-top","--spectrum-badge-icon-text-spacing","--spectrum-badge-label-icon-color","--spectrum-badge-label-icon-color-primary","--spectrum-badge-label-spacing-horizontal","--spectrum-badge-label-spacing-vertical-bottom","--spectrum-badge-label-spacing-vertical-top","--spectrum-badge-line-height","--spectrum-badge-line-height-cjk","--spectrum-badge-workflow-icon-size"],ne=["--spectrum-accent-background-color-default","--spectrum-black","--spectrum-blue-background-color-default","--spectrum-celery-background-color-default","--spectrum-chartreuse-background-color-default","--spectrum-cjk-line-height-100","--spectrum-component-bottom-to-text-100","--spectrum-component-bottom-to-text-200","--spectrum-component-bottom-to-text-300","--spectrum-component-bottom-to-text-75","--spectrum-component-edge-to-text-100","--spectrum-component-edge-to-text-200","--spectrum-component-edge-to-text-300","--spectrum-component-edge-to-text-75","--spectrum-component-edge-to-visual-100","--spectrum-component-edge-to-visual-200","--spectrum-component-edge-to-visual-300","--spectrum-component-edge-to-visual-75","--spectrum-component-edge-to-visual-only-100","--spectrum-component-edge-to-visual-only-200","--spectrum-component-edge-to-visual-only-300","--spectrum-component-edge-to-visual-only-75","--spectrum-component-height-100","--spectrum-component-height-75","--spectrum-component-top-to-text-100","--spectrum-component-top-to-text-200","--spectrum-component-top-to-text-300","--spectrum-component-top-to-text-75","--spectrum-component-top-to-workflow-icon-100","--spectrum-component-top-to-workflow-icon-200","--spectrum-component-top-to-workflow-icon-300","--spectrum-component-top-to-workflow-icon-75","--spectrum-corner-radius-100","--spectrum-cyan-background-color-default","--spectrum-font-size-100","--spectrum-font-size-200","--spectrum-font-size-300","--spectrum-font-size-75","--spectrum-fuchsia-background-color-default","--spectrum-gray-background-color-default","--spectrum-green-background-color-default","--spectrum-indigo-background-color-default","--spectrum-informative-background-color-default","--spectrum-line-height-100","--spectrum-magenta-background-color-default","--spectrum-negative-background-color-default","--spectrum-neutral-subdued-background-color-default","--spectrum-notice-background-color-default","--spectrum-orange-background-color-default","--spectrum-positive-background-color-default","--spectrum-purple-background-color-default","--spectrum-red-background-color-default","--spectrum-seafoam-background-color-default","--spectrum-text-to-visual-100","--spectrum-text-to-visual-200","--spectrum-text-to-visual-300","--spectrum-text-to-visual-75","--spectrum-white","--spectrum-workflow-icon-size-100","--spectrum-workflow-icon-size-200","--spectrum-workflow-icon-size-300","--spectrum-workflow-icon-size-75","--spectrum-yellow-background-color-default"],de=[],ie={sourceFile:ae,selectors:re,modifiers:ce,component:se,global:ne,"system-theme":[],passthroughs:de,"high-contrast":["--highcontrast-badge-border-color"]},pe="@spectrum-css/badge",me="6.1.0",ge="The Spectrum CSS badge component",ue="Apache-2.0",le="Adobe",be="https://opensource.adobe.com/spectrum-css/?path=/docs/components-badge--docs",fe={type:"git",url:"https://github.com/adobe/spectrum-css.git",directory:"components/badge"},he={url:"https://github.com/adobe/spectrum-css/issues"},ke={".":"./dist/index.css","./*.md":"./*.md","./dist/*":"./dist/*","./index-*.css":"./dist/index-*.css","./index.css":"./dist/index.css","./metadata.json":"./dist/metadata.json","./package.json":"./package.json","./stories/*":"./stories/*"},ye="dist/index.css",xe={"@spectrum-css/icon":">=9.0.0 <10.0.0","@spectrum-css/tokens":">=16.0.0 <17.0.0"},ve={"@spectrum-css/icon":{optional:!0},"@spectrum-css/tokens":{optional:!0}},we={"@spectrum-css/icon":"9.1.0","@spectrum-css/tokens":"16.0.1"},Be=["design-system","spectrum","spectrum-css","adobe","adobe-spectrum","component","css"],ze={access:"public"},Se=[{guidelines:"https://spectrum.adobe.com/page/badge",rootClass:"spectrum-Badge",swc:"https://opensource.adobe.com/spectrum-web-components/components/badge/"}],$e={name:pe,version:me,description:ge,license:ue,author:le,homepage:be,repository:fe,bugs:he,exports:ke,main:ye,peerDependencies:xe,peerDependenciesMeta:ve,devDependencies:we,keywords:Be,publishConfig:ze,spectrum:Se},r=({rootClass:e="spectrum-Badge",size:o="m",label:d,iconName:g,iconSet:M="workflow",variant:u="neutral",fixed:l,customStyles:I={},customClasses:O=[],id:R=X("badge")}={},W={})=>i`
		<div
			class=${Q({[e]:!0,[`${e}--size${o==null?void 0:o.toUpperCase()}`]:typeof o<"u",[`${e}--${u}`]:typeof u<"u",[`${e}--${l}`]:typeof l<"u",...O.reduce((_,E)=>({..._,[E]:!0}),{})})}
			id=${te(R)}
			style=${U(I)}
		>
			${b(g,()=>oe({iconName:g,setName:M,customClasses:[...typeof d>"u"?[`${e}-icon--no-label`]:[],`${e}-icon`]},W))}
			${b(d,()=>i`<div class="${e}-label">${d}</div>`)}
		</div>
	`,Te=(e,o)=>Y({withBorder:!1,content:[r(e,o),r({...e,iconName:void 0},o),r({...e,label:void 0},o)]}),Ce=(e,o)=>i`
		<div style="display: flex; column-gap: 13px; row-gap: 24px;">
			${r(e,o)}
			${r({...e,iconName:void 0},o)}
			${r({...e,label:void 0},o)}
		</div>
	`,L=Z({Template:Ce,sizeDirection:"row",testData:[...["neutral","accent","informative","positive","negative"].map(e=>({testHeading:f(e),wrapperStyles:{"column-gap":"10px"},variant:e})),...["gray","red","orange","yellow","chartreuse","celery","green","seafoam","cyan","blue","indigo","purple","fuchsia","magenta"].map(e=>({testHeading:f(e),wrapperStyles:{"column-gap":"10px"},variant:e})),...["none","fixed-inline-start","fixed-inline-end","fixed-block-start","fixed-block-end"].map(e=>({testHeading:`Layout ${e}`,wrapperStyles:{"column-gap":"10px"},size:"xl",variant:"informative",fixed:e})),{testHeading:"Truncation",wrapperStyles:{"column-gap":"10px"},label:"24 days left in trial",customStyles:{"max-inline-size":"120px"}}]});var h,k;const Me={title:"Badge",component:"Badge",argTypes:{size:ee(["s","m","l","xl"]),label:{name:"Label",type:{name:"string"},table:{type:{summary:"string"},category:"Content"},control:"text"},iconName:{...((k=(h=J)==null?void 0:h.argTypes)==null?void 0:k.iconName)??{},if:!1},iconSet:{table:{disable:!0}},variant:{name:"Variants",description:"Changes the badge's background color. The variant list includes both semantic and non-semantic options.",type:{name:"string"},table:{type:{summary:"string"},category:"Component"},options:["neutral","accent","informative","positive","negative","gray","red","orange","yellow","chartreuse","celery","green","seafoam","cyan","blue","indigo","purple","fuchsia","magenta"],control:"select"},fixed:{name:"Fixed layout",type:{name:"string"},table:{type:{summary:"string"},category:"Advanced"},options:["none","fixed-inline-start","fixed-inline-end","fixed-block-start","fixed-block-end"],control:"select"}},args:{rootClass:"spectrum-Badge",size:"m",variant:"neutral",iconSet:"workflow",fixed:"none"},parameters:{design:{type:"figma",url:"https://www.figma.com/design/Mngz9H7WZLbrCvGQf3GnsY/S2-%2F-Desktop?node-id=36806-6551"},packageJson:$e,metadata:ie,docs:{description:{component:"A badge element displays a small amount of color-categorized metadata; ideal for getting a user's attention. Some notes about badge:\n- Label and icon elements must be nested inside a parent container of class `.spectrum-Badge` in order to achieve the correct layout and wrapping behavior.\n- The layout of badge is achieved by applying a display of `inline-flex`, allowing badge to display as inline, while the label and/or icon child elements can utilize flexbox for layout."}}}},t=L.bind({});t.args={iconName:"Info",label:"Badge"};const s=(e,o)=>p({Template:r,argKey:"variant",options:["neutral","accent","informative","positive","negative"],withBorder:!1,...e},o);s.args=t.args;s.tags=["!dev"];s.parameters={chromatic:{disableSnapshot:!0}};s.storyName="Semantic";const n=(e,o)=>p({Template:r,argKey:"variant",options:["gray","red","orange","yellow","chartreuse","celery","green","seafoam","cyan","blue","indigo","purple","fuchsia","magenta"],withBorder:!1,...e},o);n.args=t.args;n.tags=["!dev"];n.parameters={chromatic:{disableSnapshot:!0}};n.storyName="Non-semantic";const a=(e,o)=>p({Template:r,argKey:"fixed",options:["none","fixed-inline-start","fixed-inline-end","fixed-block-start","fixed-block-end"],withBorder:!1,...e},o);a.args=t.args;a.tags=["!dev"];a.parameters={chromatic:{disableSnapshot:!0}};a.storyName="Fixed-edge";const c=(e,o)=>q({Template:Te,withBorder:!1,withHeading:!1,...e},o);c.args=t.args;c.parameters={chromatic:{disableSnapshot:!0}};c.tags=["!dev"];const m=L.bind({});m.args=t.args;m.tags=["!autodocs","!dev"];m.parameters={chromatic:{forcedColors:"active",modes:P}};var y,x,v;t.parameters={...t.parameters,docs:{...(y=t.parameters)==null?void 0:y.docs,description:{story:"Badges can contain label, icon, or label and icon. Text wrapping is also included when a `max-inline-size` is applied to the badge.",...(v=(x=t.parameters)==null?void 0:x.docs)==null?void 0:v.description}}};var w,B,z;s.parameters={...s.parameters,docs:{...(w=s.parameters)==null?void 0:w.docs,source:{originalSource:`(args, context) => ArgGrid({
  Template,
  argKey: "variant",
  options: ["neutral", "accent", "informative", "positive", "negative"],
  withBorder: false,
  ...args
}, context)`,...(z=(B=s.parameters)==null?void 0:B.docs)==null?void 0:z.source}}};var S,$,T;n.parameters={...n.parameters,docs:{...(S=n.parameters)==null?void 0:S.docs,source:{originalSource:`(args, context) => ArgGrid({
  Template,
  argKey: "variant",
  options: ["gray", "red", "orange", "yellow", "chartreuse", "celery", "green", "seafoam", "cyan", "blue", "indigo", "purple", "fuchsia", "magenta"],
  withBorder: false,
  ...args
}, context)`,...(T=($=n.parameters)==null?void 0:$.docs)==null?void 0:T.source}}};var C,D,N,F,A;a.parameters={...a.parameters,docs:{...(C=a.parameters)==null?void 0:C.docs,source:{originalSource:`(args, context) => ArgGrid({
  Template,
  argKey: "fixed",
  options: ["none", "fixed-inline-start", "fixed-inline-end", "fixed-block-start", "fixed-block-end"],
  withBorder: false,
  ...args
}, context)`,...(N=(D=a.parameters)==null?void 0:D.docs)==null?void 0:N.source},description:{story:"Fixed positioning impacts the border radius of the badge component. The border radius is 0 along the fixed edge of the component. The actual component position is not represented on this page.",...(A=(F=a.parameters)==null?void 0:F.docs)==null?void 0:A.description}}};var V,j,G,H,K;c.parameters={...c.parameters,docs:{...(V=c.parameters)==null?void 0:V.docs,source:{originalSource:`(args, context) => Sizes({
  Template: ContentOptions,
  withBorder: false,
  withHeading: false,
  ...args
}, context)`,...(G=(j=c.parameters)==null?void 0:j.docs)==null?void 0:G.source},description:{story:"Badge t-shirt sizes correspond to icon sizes.",...(K=(H=c.parameters)==null?void 0:H.docs)==null?void 0:K.description}}};const Ie=["Default","SemanticVariants","NonSemanticVariants","FixedVariants","Sizing","WithForcedColors"];export{t as Default,a as FixedVariants,n as NonSemanticVariants,s as SemanticVariants,c as Sizing,m as WithForcedColors,Ie as __namedExportsOrder,Me as default};
