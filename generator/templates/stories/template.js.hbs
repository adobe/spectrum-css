import { Template as Typography } from "@spectrum-css/typography/stories/template.js";
import { html } from 'lit';
import { classMap } from 'lit/directives/class-map.js';
import { ifDefined } from 'lit/directives/if-defined.js';
import { styleMap } from "lit/directives/style-map.js";
import { when } from "lit/directives/when.js";

import "../index.css";
import "../themes/express.css";
import "../themes/spectrum.css";

export const Template = ({
  rootClass = "spectrum-{{ pascalCase name }}",
  size = "m",
  id,
  testId,
  customClasses = [],
  customStyles = {},
}, context) => {
  return html`
    <div
      class=${classMap({
        [rootClass]: true,
        [`${rootClass}--size${size.toUpperCase()}`]: true,
        ...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),
      })}
      id=${ifDefined(id)}
      data-test-id=${ifDefined(testId)}
      style=${ifDefined(styleMap(customStyles))}
    >
      <!-- Component mark-up goes here -->
    </div>
  `;
};

export const {{ pascalCase name }}Group = Variants({
  Template,
  testData: [
    {
      testHeading: "Default",
    },
    {
      testHeading: "Variant1",
      /* Add variant specific data here */
    },
  ],
  stateData: [],
});
