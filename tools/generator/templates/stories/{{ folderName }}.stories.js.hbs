import { Template } from "./template.js";
import { isDisabled, isSelected, isHovered, isFocused, size } from "@spectrum-css/preview/types";
import { {{ pascalCase name }}Group } from "./{{ pascalCase name }}.test.js";
import { disableDefaultModes } from "@spectrum-css/preview/modes";

// Local assets to render the component styles and structure
import styles from "../index.css?inline";
import metadata from "../dist/metadata.json";
import packageJson from "../package.json";

/**
  * {{ description }}
  */
export default {
	title: "{{ name }}",
	component: "{{ pascalCase name }}",
	argTypes: {
		size: size(["s", "m", "l", "xl"]),
		isDisabled,
		isSelected,
		isHovered,
		isFocused,
	},
	args: {
		rootClass: "spectrum-{{ pascalCase name }}",
		size: "m",
		isDisabled: false
	},
	parameters: {
		actions: {
			handles: ["click .spectrum-{{ pascalCase name }}"],
		},
		design: {
			type: "figma",
			url: "",
		},
		packageJson,
		metadata,
		cssprops: { styles },
	}
};

export const Default = {{ pascalCase name }}Group.bind({});
Default.args = {};

// ********* DOCS ONLY ********* //
export const Disabled = Template.bind({});
Disabled.tags = ["!dev"];
Disabled.args = {
	isDisabled: true
};
Disabled.parameters = {
	chromatic: { disableSnapshot: true },
};

// ********* VRT ONLY ********* //
export const WithForcedColors = {{ pascalCase name }}Group.bind({});
WithForcedColors.args = Default.args;
WithForcedColors.tags = ["!autodocs", "!dev"];
WithForcedColors.parameters = {
	chromatic: {
		forcedColors: "active",
		modes: disableDefaultModes
	},
};
